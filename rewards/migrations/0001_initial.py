# Generated by Django 5.0 on 2025-09-09 07:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_company_logo_company_primary_color_and_more'),
        ('dashboard', '0010_referral_uniq_referee_per_company'),
    ]

    operations = [
        migrations.CreateModel(
            name='RewardTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bucket', models.CharField(choices=[('SOUVENT', 'Souvent'), ('MOYEN', 'Moyen'), ('RARE', 'Rare'), ('TRES_RARE', 'Très rare')], max_length=10)),
                ('label', models.CharField(default='-10 % de remise', max_length=120)),
                ('cooldown_months', models.PositiveSmallIntegerField(default=1)),
                ('cooldown_days', models.PositiveIntegerField(default=30)),
                ('min_referrals_required', models.PositiveIntegerField(default=0, help_text='Nombre minimum de parrainages requis pour débloquer cette récompense.')),
                ('probability_display', models.CharField(default='', editable=False, max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_templates', to='accounts.company')),
            ],
            options={
                'ordering': ('company', 'bucket'),
            },
        ),
        migrations.CreateModel(
            name='ProbabilityWheel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField(max_length=64)),
                ('pool', models.JSONField(default=list)),
                ('idx', models.PositiveIntegerField(default=0)),
                ('size', models.PositiveIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='probability_wheels', to='accounts.company')),
            ],
            options={
                'indexes': [models.Index(fields=['company', 'key'], name='rewards_pro_company_d89c95_idx')],
                'unique_together': {('company', 'key')},
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('bucket', models.CharField(choices=[('SOUVENT', 'Souvent'), ('MOYEN', 'Moyen'), ('RARE', 'Rare'), ('TRES_RARE', 'Très rare')], max_length=20)),
                ('cooldown_days', models.PositiveIntegerField(default=0)),
                ('state', models.CharField(choices=[('PENDING', 'En attente'), ('SENT', 'Envoyée'), ('DISABLED', 'Désactivée'), ('ARCHIVED', 'Archivée')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(blank=True, db_index=True, max_length=64, null=True, unique=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('redeemed_at', models.DateTimeField(blank=True, null=True)),
                ('redeemed_channel', models.CharField(blank=True, max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='dashboard.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='accounts.company')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='dashboard.referral')),
            ],
            options={
                'indexes': [models.Index(fields=['company', 'client', 'state'], name='rewards_rew_company_675196_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='reward',
            constraint=models.UniqueConstraint(fields=('company', 'client', 'referral'), name='uniq_reward_by_referrer_and_referral'),
        ),
        migrations.AlterUniqueTogether(
            name='rewardtemplate',
            unique_together={('company', 'bucket')},
        ),
    ]
