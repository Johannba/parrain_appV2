===== ./core/migrations/__init__.py =====
===== ./core/forms/fields.py =====
# core/forms/fields.py
from django import forms
from django.core.exceptions import ValidationError
from core.utils.phones import to_e164, ALLOWED_REGIONS_DEFAULT

class InternationalPhoneFormField(forms.CharField):
    def __init__(self, *args, regions=None, **kwargs):
        attrs = kwargs.pop("widget_attrs", {})
        attrs.setdefault("class", "form-control")
        attrs.setdefault(
            "placeholder",
            "Ex : 0694 12 34 56 ou 0594 12 34 56 ou +594 694 12 34 56"
        )
        kwargs.setdefault("widget", forms.TextInput(attrs=attrs))
        super().__init__(*args, **kwargs)
        self.regions = tuple(regions or ALLOWED_REGIONS_DEFAULT)

    def clean(self, value):
        value = super().clean(value)
        if not value:
            return value
        try:
            return to_e164(value, regions=self.regions)
        except ValueError as e:
            raise ValidationError(str(e))
===== ./core/forms/__init__.py =====
===== ./core/models.py =====
from django.db import models

# Create your models here.
===== ./core/__init__.py =====
===== ./core/utils/__init__.py =====
===== ./core/utils/phones.py =====
# core/utils/phones.py
import re
import phonenumbers
from phonenumbers import PhoneNumberFormat, NumberParseException

# France + DROM (tu peux étendre si besoin)
ALLOWED_REGIONS_DEFAULT = ("FR", "GF", "MQ", "GP", "RE")

_CLEAN_RE = re.compile(r"[^\d\+]")
_ONLY_DIGITS_RE = re.compile(r"\D+")

# Indicatifs saisis "nus" tolérés sans '+'
BARE_COUNTRY_CODES = ("33", "590", "594", "596", "262")


def _fallback_dom_fr_to_e164(digits: str) -> str | None:
    """
    Tolérance DOM/FR si libphonenumber rejette mais que le motif local est plausible.
    Règle : format local FR/DOM = 10 chiffres : 0 + (préfixe) + 6 chiffres.
    """
    mapping = {
        # Guadeloupe
        "0590": "+590590", "0690": "+590690",
        # Guyane
        "0594": "+594594", "0694": "+594694",
        # Martinique
        "0596": "+596596", "0696": "+596696",
        # Réunion
        "0262": "+262262", "0692": "+262692", "0693": "+262693",
    }

    if len(digits) == 10 and digits.startswith("0"):
        for pfx, e164pfx in mapping.items():
            if digits.startswith(pfx):
                rest = digits[len(pfx):]
                if len(rest) == 6 and rest.isdigit():
                    return f"{e164pfx}{rest}"  # ex: 0594 50 72 05 -> +594594507205
        # FR métropole (0X + 8 chiffres) -> +33 X + 8 chiffres
        if digits[1:].isdigit() and digits[1] != "0":
            return "+33" + digits[1:]
    return None


def to_e164(phone_raw: str, regions=ALLOWED_REGIONS_DEFAULT) -> str:
    """
    Parse et normalise un numéro en E.164, en tolérant :
    - 00 comme préfixe international,
    - indicatif pays saisi sans '+',
    - formats locaux FR/DOM (fallback si libphonenumber rejette).
    """
    if not phone_raw:
        raise ValueError("Numéro requis.")

    raw = phone_raw.strip()
    cleaned = _CLEAN_RE.sub("", raw)

    # 00 -> +
    if cleaned.startswith("00"):
        cleaned = "+" + cleaned[2:]

    # 1) International direct
    if cleaned.startswith("+"):
        try:
            num = phonenumbers.parse(cleaned, None)
            if phonenumbers.is_valid_number(num):
                return phonenumbers.format_number(num, PhoneNumberFormat.E164)
        except NumberParseException:
            pass

    # 2) Indicatif nu sans '+'
    digits_only = _ONLY_DIGITS_RE.sub("", raw)
    for cc in BARE_COUNTRY_CODES:
        if digits_only.startswith(cc) and not raw.startswith(("+", "00")):
            try:
                num = phonenumbers.parse("+" + digits_only, None)
                if phonenumbers.is_valid_number(num):
                    return phonenumbers.format_number(num, PhoneNumberFormat.E164)
            except NumberParseException:
                pass

    # 3) Essais par régions (formats locaux)
    for region in regions:
        try:
            num = phonenumbers.parse(raw, region)
            if phonenumbers.is_valid_number(num):
                return phonenumbers.format_number(num, PhoneNumberFormat.E164)
        except NumberParseException:
            continue

    # 4) Re-parse sur 'cleaned'
    for region in regions:
        try:
            num = phonenumbers.parse(cleaned, region)
            if phonenumbers.is_valid_number(num):
                return phonenumbers.format_number(num, PhoneNumberFormat.E164)
        except NumberParseException:
            continue

    # 5) ✅ Fallback tolérant DOM/FR
    fb = _fallback_dom_fr_to_e164(_ONLY_DIGITS_RE.sub("", raw))
    if fb:
        return fb

    raise ValueError(
        "Numéro invalide. Formats acceptés : France/DOM (+33, +594, +596, +590, +262)."
    )
===== ./core/apps.py =====
from django.apps import AppConfig


class CoreConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'core'
===== ./core/admin.py =====
from django.contrib import admin

# Register your models here.
===== ./core/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./core/views.py =====
from django.shortcuts import render

# Create your views here.
===== ./config/asgi.py =====
"""
ASGI config for config project.

It exposes the ASGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/howto/deployment/asgi/
"""

import os

from django.core.asgi import get_asgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

application = get_asgi_application()
===== ./config/__init__.py =====
===== ./config/settings.py =====
"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# --- Prod flags depuis l'env ---
def env_bool(name: str, default: bool = False) -> bool:
    return os.getenv(name, str(default)).strip().lower() in {"1", "true", "yes", "on"}

DEBUG = env_bool("DEBUG", False)

# SECRET_KEY : obligatoire en prod
if DEBUG:
    SECRET_KEY = os.getenv("SECRET_KEY", "dev-insecure-placeholder")
else:
    SECRET_KEY = (os.getenv("SECRET_KEY") or "").strip()
    if not SECRET_KEY:
        raise RuntimeError("SECRET_KEY manquant en production.")

# Hôtes & CSRF
ALLOWED_HOSTS = [h for h in os.getenv("ALLOWED_HOSTS", "localhost,127.0.0.1").split(",") if h.strip()]
CSRF_TRUSTED_ORIGINS = [u for u in os.getenv("CSRF_TRUSTED_ORIGINS", "").split(",") if u.strip()]


# Application definition

INSTALLED_APPS = [
    "core",
    "public",
   "rewards.apps.RewardsConfig",
    "entreprises",
    "accounts",
    'dashboard',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "widget_tweaks",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Europe/Paris'  # ou Africa/Cairo selon ton serveur
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = "accounts.User"



LOGIN_URL = 'accounts:login'
LOGIN_REDIRECT_URL = 'accounts:user_list'     # temporaire pour tester
LOGOUT_REDIRECT_URL = 'accounts:login'


# settings.py
import os

# Activez ceci si vous utilisez un fichier .env (pip install python-dotenv)
try:
    from dotenv import load_dotenv
    load_dotenv()
except Exception:
    pass

def _must(name: str) -> str:
    v = os.getenv(name)
    if not v:
        raise RuntimeError(f"Variable d’environnement manquante : {name}")
    return v


import os

def env_bool(name: str, default: bool = False) -> bool:
    return os.getenv(name, str(default)).strip().lower() in {"1", "true", "yes", "on"}

EMAIL_BACKEND = os.getenv("EMAIL_BACKEND", "django.core.mail.backends.smtp.EmailBackend")
EMAIL_HOST = os.getenv("EMAIL_HOST", "smtp-relay.brevo.com")
EMAIL_PORT = int(os.getenv("EMAIL_PORT", "587"))
EMAIL_USE_TLS = env_bool("EMAIL_USE_TLS", True)   # 587 -> STARTTLS
EMAIL_USE_SSL = env_bool("EMAIL_USE_SSL", False)  # False si 587 ; True uniquement si 465
EMAIL_HOST_USER = os.getenv("EMAIL_HOST_USER", "")
EMAIL_HOST_PASSWORD = os.getenv("EMAIL_HOST_PASSWORD", "")

DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL", "Johann Bacha <johannbacha@gmail.com>")
SERVER_EMAIL = os.getenv("SERVER_EMAIL", DEFAULT_FROM_EMAIL)

# (utile en cas de réseau lent / blocage)
EMAIL_TIMEOUT = int(os.getenv("EMAIL_TIMEOUT", "15"))



SMSMODE = {
    "API_KEY": os.getenv("SMSMODE_API_KEY", ""),
    "SENDER": os.getenv("SMSMODE_SENDER", ""),
    "BASE_URL": os.getenv("SMSMODE_BASE_URL", "https://rest.smsmode.com"),  # <- corrigé
    "DRY_RUN": os.getenv("SMSMODE_DRY_RUN", "false").lower() == "true",
    "TIMEOUT": 10,
}


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "handlers": {"console": {"class": "logging.StreamHandler"}},
    "loggers": {
        "rewards.services.smsmode": {"handlers": ["console"], "level": "INFO"},
    },
}===== ./config/urls.py =====
"""
URL configuration for config project.

The `urlpatterns` list routes URLs to views. For more information please see:
    https://docs.djangoproject.com/en/5.0/topics/http/urls/
Examples:
Function views
    1. Add an import:  from my_app import views
    2. Add a URL to urlpatterns:  path('', views.home, name='home')
Class-based views
    1. Add an import:  from other_app.views import Home
    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')
Including another URLconf
    1. Import the include() function: from django.urls import include, path
    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))
"""
from django.contrib import admin
from django.urls import path,include
from django.conf import settings
from django.conf.urls.static import static
from django.contrib.staticfiles.urls import staticfiles_urlpatterns


urlpatterns = [
    path('admin/', admin.site.urls),
    path("", include("public.urls")),
    path('', include(('dashboard.urls', 'dashboard'), namespace='dashboard')),
    path('accounts/', include('accounts.urls')),
    path('entreprise/', include('entreprises.urls', namespace='entreprises')),
    path('rewards/', include(('rewards.urls',"rewards"), namespace='rewards')),
    path("accounts/", include("django.contrib.auth.urls"))
]


if settings.DEBUG:
    urlpatterns += staticfiles_urlpatterns()
    urlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)
===== ./config/wsgi.py =====
"""
WSGI config for config project.

It exposes the WSGI callable as a module-level variable named ``application``.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/howto/deployment/wsgi/
"""

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

application = get_wsgi_application()
===== ./rewards/templatetags/ __init__.py =====
===== ./rewards/templatetags/url_extras.py =====
from django import template

register = template.Library()

@register.simple_tag(takes_context=True)
def abs_uri(context, path: str) -> str:
    """
    Construit une URL absolue à partir d'un path relatif, en utilisant request si dispo.
    Usage dans template:
      {% abs_uri rw.claim_path as claim_abs %}
    """
    request = context.get("request")
    if not path:
        return ""
    return request.build_absolute_uri(path) if request else path
===== ./rewards/signals.py =====
# rewards/signals.py
from django.db.models.signals import pre_save
from django.dispatch import receiver
from .models import Reward

@receiver(pre_save, sender=Reward)
def reward_token_autogen(sender, instance: Reward, **kwargs):
    if not instance.token:
        instance.ensure_token()
===== ./rewards/migrations/__init__.py =====
===== ./rewards/migrations/0001_initial.py =====
# Generated by Django 5.0 on 2025-09-09 07:39

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0002_company_logo_company_primary_color_and_more'),
        ('dashboard', '0010_referral_uniq_referee_per_company'),
    ]

    operations = [
        migrations.CreateModel(
            name='RewardTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bucket', models.CharField(choices=[('SOUVENT', 'Souvent'), ('MOYEN', 'Moyen'), ('RARE', 'Rare'), ('TRES_RARE', 'Très rare')], max_length=10)),
                ('label', models.CharField(default='-10 % de remise', max_length=120)),
                ('cooldown_months', models.PositiveSmallIntegerField(default=1)),
                ('cooldown_days', models.PositiveIntegerField(default=30)),
                ('min_referrals_required', models.PositiveIntegerField(default=0, help_text='Nombre minimum de parrainages requis pour débloquer cette récompense.')),
                ('probability_display', models.CharField(default='', editable=False, max_length=20)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reward_templates', to='accounts.company')),
            ],
            options={
                'ordering': ('company', 'bucket'),
            },
        ),
        migrations.CreateModel(
            name='ProbabilityWheel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField(max_length=64)),
                ('pool', models.JSONField(default=list)),
                ('idx', models.PositiveIntegerField(default=0)),
                ('size', models.PositiveIntegerField(default=0)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='probability_wheels', to='accounts.company')),
            ],
            options={
                'indexes': [models.Index(fields=['company', 'key'], name='rewards_pro_company_d89c95_idx')],
                'unique_together': {('company', 'key')},
            },
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=255)),
                ('bucket', models.CharField(choices=[('SOUVENT', 'Souvent'), ('MOYEN', 'Moyen'), ('RARE', 'Rare'), ('TRES_RARE', 'Très rare')], max_length=20)),
                ('cooldown_days', models.PositiveIntegerField(default=0)),
                ('state', models.CharField(choices=[('PENDING', 'En attente'), ('SENT', 'Envoyée'), ('DISABLED', 'Désactivée'), ('ARCHIVED', 'Archivée')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('token', models.CharField(blank=True, db_index=True, max_length=64, null=True, unique=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('redeemed_at', models.DateTimeField(blank=True, null=True)),
                ('redeemed_channel', models.CharField(blank=True, max_length=20)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='dashboard.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='accounts.company')),
                ('referral', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='dashboard.referral')),
            ],
            options={
                'indexes': [models.Index(fields=['company', 'client', 'state'], name='rewards_rew_company_675196_idx')],
            },
        ),
        migrations.AddConstraint(
            model_name='reward',
            constraint=models.UniqueConstraint(fields=('company', 'client', 'referral'), name='uniq_reward_by_referrer_and_referral'),
        ),
        migrations.AlterUniqueTogether(
            name='rewardtemplate',
            unique_together={('company', 'bucket')},
        ),
    ]
===== ./rewards/views_wheels.py =====
===== ./rewards/models.py =====
# rewards/models.py
from datetime import timedelta
import secrets

from django.db import models
from django.utils import timezone
from django.urls import reverse

from accounts.models import Company
from dashboard.models import Client, Referral


class ProbabilityWheel(models.Model):
    """
    Roue (pool) cyclique par entreprise.
    - key   : identifie un tirage (ex: 'base_100', 'very_rare_10000')
    - pool  : liste ordonnée des résultats (ex: ['SOUVENT','SOUVENT',...,'NO_HIT'])
    - idx   : curseur de consommation
    - size  : longueur totale du pool (copie pour debug)
    """
    company = models.ForeignKey(
        Company, on_delete=models.CASCADE, related_name="probability_wheels"
    )
    key = models.SlugField(max_length=64)
    pool = models.JSONField(default=list)
    idx = models.PositiveIntegerField(default=0)
    size = models.PositiveIntegerField(default=0)

    class Meta:
        unique_together = (("company", "key"),)
        indexes = [models.Index(fields=["company", "key"])]

    def __str__(self):
        return f"{self.company} • {self.key} ({self.idx}/{self.size})"


class RewardTemplate(models.Model):
    BUCKETS = (
        ("SOUVENT", "Souvent"),
        ("MOYEN", "Moyen"),
        ("RARE", "Rare"),
        ("TRES_RARE", "Très rare"),
    )

    company = models.ForeignKey(
        Company, on_delete=models.CASCADE, related_name="reward_templates"
    )
    bucket = models.CharField(max_length=10, choices=BUCKETS)

    label = models.CharField(max_length=120, default="-10 % de remise")
    cooldown_months = models.PositiveSmallIntegerField(default=1)
    cooldown_days = models.PositiveIntegerField(default=30)

    # Seuil d’éligibilité
    min_referrals_required = models.PositiveIntegerField(
        default=0,
        help_text="Nombre minimum de parrainages requis pour débloquer cette récompense."
    )

    # Purement affichage (ex. '980/1000')
    probability_display = models.CharField(max_length=20, default="", editable=False)

    class Meta:
        unique_together = (("company", "bucket"),)
        ordering = ("company", "bucket")

    def save(self, *args, **kwargs):
        self.cooldown_days = int(self.cooldown_months) * 30
        super().save(*args, **kwargs)

    def __str__(self):
        return f"{self.company} • {self.get_bucket_display()} • {self.label}"


class Reward(models.Model):
    BUCKETS = (
        ("SOUVENT", "Souvent"),
        ("MOYEN", "Moyen"),
        ("RARE", "Rare"),
        ("TRES_RARE", "Très rare"),
    )
    STATE_CHOICES = (
        ("PENDING", "En attente"),
        ("SENT", "Envoyée"),
        ("DISABLED", "Désactivée"),
        ("ARCHIVED", "Archivée"),
    )

    company = models.ForeignKey(Company, on_delete=models.CASCADE, related_name="rewards")
    client = models.ForeignKey(Client, on_delete=models.CASCADE, related_name="rewards")

    referral = models.ForeignKey(
        Referral, on_delete=models.CASCADE, related_name="rewards",
        null=True, blank=True
    )

    label = models.CharField(max_length=255)
    bucket = models.CharField(max_length=20, choices=BUCKETS)
    cooldown_days = models.PositiveIntegerField(default=0)
    state = models.CharField(max_length=20, choices=STATE_CHOICES, default="PENDING")
    created_at = models.DateTimeField(auto_now_add=True)

    token = models.CharField(max_length=64, unique=True, db_index=True, null=True, blank=True)
    token_expires_at = models.DateTimeField(null=True, blank=True)

    redeemed_at = models.DateTimeField(null=True, blank=True)
    redeemed_channel = models.CharField(max_length=20, blank=True)

    class Meta:
        indexes = [models.Index(fields=["company", "client", "state"])]
        constraints = [
            models.UniqueConstraint(
                fields=["company", "client", "referral"],
                name="uniq_reward_by_referrer_and_referral",
            )
        ]

    # ----------------- Helpers d’affichage -----------------

    def ensure_token(self, force: bool = False):
        if force or not self.token:
            self.token = secrets.token_urlsafe(24)
        if not self.token_expires_at:
            days = int(self.cooldown_days or 180)
            self.token_expires_at = timezone.now() + timedelta(days=days)

    @property
    def valid_until(self):
        if self.cooldown_days and self.created_at:
            return self.created_at + timedelta(days=int(self.cooldown_days))
        return None

    @property
    def cooldown_label(self) -> str:
        d = int(self.cooldown_days or 0)
        if d == 0:
            return "illimité"
        if d % 30 == 0:
            m = d // 30
            return f"{m} mois" if m > 1 else "1 mois"
        return f"{d} jours"

    def validity_sentence(self) -> str:
        if self.valid_until:
            return f"Validité : {self.cooldown_label} (jusqu’au {timezone.localtime(self.valid_until).strftime('%d/%m/%Y')})"
        return "Validité : illimité"

    @property
    def claim_path(self) -> str:
        return reverse("rewards:use_reward", kwargs={"token": self.token}) if self.token else ""

    @property
    def claim_url(self) -> str:
        return self.claim_path

    def __str__(self):
        return f"{self.label} ({self.get_bucket_display()})"
===== ./rewards/probabilities.py =====
from __future__ import annotations
from dataclasses import dataclass
from typing import Iterable, List, Tuple
from django.db import transaction
from django.utils.text import slugify
from rewards.models import ProbabilityWheel
from accounts.models import Company

# --------- Utilitaires de pool ----------
def build_pool(pairs: Iterable[Tuple[int, str]]) -> List[str]:
    pool: List[str] = []
    for n, val in pairs:
        if n < 0:
            raise ValueError("n négatif")
        pool.extend([val] * n)
    return pool

def interleave(pool: List[str]) -> List[str]:
    from collections import defaultdict, deque
    buckets = defaultdict(deque)
    for v in pool:
        buckets[v].append(v)

    keys = sorted(buckets.keys(), key=lambda k: -len(buckets[k]))
    out: List[str] = []
    while any(buckets[k] for k in keys):
        for k in keys:
            if buckets[k]:
                out.append(buckets[k].popleft())
    return out

# --------- API principale ----------
@dataclass
class WheelSpec:
    key: str
    pairs: Tuple[Tuple[int, str], ...]

def ensure_wheel(company: Company, spec: WheelSpec) -> ProbabilityWheel:
    key = slugify(spec.key)
    raw = build_pool(spec.pairs)
    pool = interleave(raw) if len(set(raw)) > 1 else raw
    with transaction.atomic():
        obj, _created = ProbabilityWheel.objects.select_for_update().get_or_create(
            company=company, key=key, defaults={"pool": pool, "size": len(pool), "idx": 0}
        )
        if obj.size != len(pool) or obj.pool != pool:
            obj.pool = pool
            obj.size = len(pool)
            obj.idx = obj.idx % (len(pool) or 1)
            obj.save(update_fields=["pool", "size", "idx"])
    return obj

def draw(company: Company, key: str) -> str:
    k = slugify(key)
    with transaction.atomic():
        wheel = ProbabilityWheel.objects.select_for_update().get(company=company, key=k)
        if wheel.size == 0:
            raise ValueError("Roue vide")
        value = wheel.pool[wheel.idx]
        wheel.idx = (wheel.idx + 1) % wheel.size
        wheel.save(update_fields=["idx"])
        return value

# --------- Specs prêtes à l’emploi ----------
BASE_100 = WheelSpec(
    key="base_100",
    pairs=((80, "Souvent"), (19, "Moyen"), (1, "Rare")),
)
VERY_RARE_10000 = WheelSpec(
    key="very_rare_10000",
    pairs=((9999, "NO_HIT"), (1, "Très rare")),
)
===== ./rewards/tests/test_real_draws.py =====
# rewards/tests/test_real_draws.py
import pytest
from collections import Counter
from django.utils import timezone

from accounts.models import Company
from dashboard.models import Client, Referral
from rewards.models import RewardTemplate
from rewards.services.probabilities import (
    ensure_wheels, tirer_recompense,
    SOUVENT, MOYEN, RARE, TRES_RARE,
)

pytestmark = pytest.mark.django_db


# ----------------------------
# Helpers
# ----------------------------

def _mk_company_with_templates(
    name="Acme",
    min_rare=0,
    min_tres_rare=0,
    label_map=None,
):
    """
    Crée une entreprise + les 4 RewardTemplate avec les minimums d’éligibilité voulus.
    Les probas affichées ne servent que d'info; la vraie distribution vient des roues.
    """
    c = Company.objects.create(name=name, slug=name.lower())
    defaults = {
        SOUVENT:   {"label": "-10 %", "cooldown_months": 1, "min": 0,           "prob": "980/1000"},
        MOYEN:     {"label": "-20 %", "cooldown_months": 1, "min": 0,           "prob": "19/1000"},
        RARE:      {"label": "Rare",  "cooldown_months": 3, "min": min_rare,    "prob": "1/1000"},
        TRES_RARE: {"label": "Jackpot","cooldown_months": 6,"min": min_tres_rare,"prob": "1/100000"},
    }
    label_map = label_map or {}
    for bucket, meta in defaults.items():
        RewardTemplate.objects.create(
            company=c,
            bucket=bucket,
            label=label_map.get(bucket, meta["label"]),
            cooldown_months=meta["cooldown_months"],
            min_referrals_required=meta["min"],
            probability_display=meta["prob"],
        )
    ensure_wheels(c)  # pool base (1000) et very_rare (100000) à idx=0
    return c


def _client(company, first="A", last="B"):
    return Client.objects.create(company=company, first_name=first, last_name=last)


def _seed_referrals(company, referrer, n):
    """Crée n parrainages où `referrer` est le parrain (le filleul importe peu ici)."""
    for i in range(n):
        referee = Client.objects.create(company=company, first_name=f"F{i}", last_name="X")
        Referral.objects.create(
            company=company, referrer=referrer, referee=referee, created_at=timezone.now()
        )


def _draw_n(company, client, n):
    cnt = Counter()
    for _ in range(n):
        cnt[tirer_recompense(company, client)] += 1
    # S’assure que toutes les clés existent
    for k in (SOUVENT, MOYEN, RARE, TRES_RARE):
        cnt.setdefault(k, 0)
    return cnt


# ----------------------------
# Tests “partie réelle” (consommation des roues)
# ----------------------------

def test_first_100_draws_from_fresh_cycle_are_all_souvent():
    """
    Avec des roues neuves (idx=0) et client éligible à tout,
    les 100 premiers tirages tombent forcément sur SOUVENT (pool base ordonné).
    """
    c = _mk_company_with_templates(name="AllEligible")
    client = _client(c)
    cnt = _draw_n(c, client, 100)
    assert cnt[SOUVENT] == 100
    assert cnt[MOYEN] == cnt[RARE] == cnt[TRES_RARE] == 0


def test_full_base_cycle_1000_all_eligible_gives_980_19_1():
    """
    Sur un cycle complet de la roue base (1000 tirages) avec tout éligible :
    980 SOUVENT, 19 MOYEN, 1 RARE. TRES_RARE n’apparaît pas avant 100000 tirages.
    """
    c = _mk_company_with_templates(name="Cycle1000")  # tout éligible
    client = _client(c)
    cnt = _draw_n(c, client, 1000)
    assert cnt[SOUVENT] == 980
    assert cnt[MOYEN] == 19
    assert cnt[RARE] == 1
    assert cnt[TRES_RARE] == 0


def test_very_rare_exactly_once_per_100000_when_eligible():
    """
    Quand TRES_RARE est éligible, il sort exactement 1 fois par cycle de 100000 tirages.
    Les 99999 autres tirages consomment la roue base (99 cycles complets + 999 entrées).
    """
    c = _mk_company_with_templates(name="VeryRareEligible")
    client = _client(c)

    cnt = _draw_n(c, client, 100_000)

    # 1 seul TRES_RARE
    assert cnt[TRES_RARE] == 1

    # Répartition base attendue sur 99 cycles + 999 tirages (indices 0..998)
    # 99 cycles -> 99*980, 99*19, 99*1
    # +999 tirages -> 980 SOUVENT + 19 MOYEN
    assert cnt[SOUVENT] == 98_000   # 97_020 + 980
    assert cnt[MOYEN]   == 1_900    # 1_881 + 19
    assert cnt[RARE]    == 99       # 99
    # Somme de contrôle
    assert sum(cnt.values()) == 100_000


def test_ineligible_rare_and_very_rare_gives_981_souvent_19_moyen_on_1000():
    """
    Seuils RARE=10, TRES_RARE=12 ; client avec 9 parrainages => RARE/TRES_RARE inéligibles.
    Sur 1000 tirages, la case RARE (dernière du pool base) est “sautée” et remplacée par
    la case suivante autorisée => 981 SOUVENT, 19 MOYEN, 0 RARE, 0 TRES_RARE.
    """
    c = _mk_company_with_templates(name="MinThresholds", min_rare=10, min_tres_rare=12)
    client = _client(c)
    _seed_referrals(c, client, 9)  # inéligible à RARE/TRES_RARE

    cnt = _draw_n(c, client, 1000)
    assert cnt[SOUVENT] == 981
    assert cnt[MOYEN] == 19
    assert cnt[RARE] == 0
    assert cnt[TRES_RARE] == 0


def test_rare_becomes_eligible_at_10_but_tres_rare_not_yet():
    """
    À 10 parrainages : RARE devient éligible, pas TRES_RARE.
    On retrouve donc 980/19/1 sur 1000 tirages.
    """
    c = _mk_company_with_templates(name="RareOnly", min_rare=10, min_tres_rare=12)
    client = _client(c)
    _seed_referrals(c, client, 10)

    cnt = _draw_n(c, client, 1000)
    assert cnt[SOUVENT] == 980
    assert cnt[MOYEN] == 19
    assert cnt[RARE] == 1
    assert cnt[TRES_RARE] == 0


def test_tres_rare_apparait_juste_apres_99999_tirs_quand_il_devient_eligible():
    """
    Démonstration du “skip” propre :
    - On tire 99 999 fois alors que TRES_RARE est inéligible -> on consomme tout le NO_HIT.
    - On rend ensuite TRES_RARE éligible -> le tirage suivant tombe sur la case TRES_RARE.
    """
    # Au départ TR inéligible
    c = _mk_company_with_templates(name="EnableLater", min_rare=0, min_tres_rare=1)
    client = _client(c)

    # 0 parrainage -> TR inéligible
    cnt1 = _draw_n(c, client, 99_999)
    assert cnt1[TRES_RARE] == 0

    # Devient éligible (1 parrainage)
    _seed_referrals(c, client, 1)
    cnt2 = _draw_n(c, client, 1)
    assert cnt2[TRES_RARE] == 1
===== ./rewards/tests/__init__.py =====
===== ./rewards/tests/test_sms_send.py =====
import pytest
from django.urls import reverse

@pytest.mark.django_db
def test_reward_send_sms_requires_login(client):
    url = reverse("rewards:reward_send_sms", kwargs={"pk": 1})
    resp = client.post(url)
    assert resp.status_code in (302, 301)  # redirection vers login
===== ./rewards/management/ __init__.py =====
===== ./rewards/management/commands/init_probability_wheels.py =====
from django.core.management.base import BaseCommand, CommandError
from accounts.models import Company
from rewards.services.probabilities import ensure_wheels

class Command(BaseCommand):
    help = "Initialise les roues de probabilité pour une entreprise."

    def add_arguments(self, parser):
        parser.add_argument("--company", required=True, help="Slug de l'entreprise")

    def handle(self, *args, **options):
        slug = options["company"]
        try:
            company = Company.objects.get(slug=slug)
        except Company.DoesNotExist:
            raise CommandError(f"Company '{slug}' introuvable")

        ensure_wheels(company)
        self.stdout.write(self.style.SUCCESS(f"OK: {company} • base & very_rare"))
===== ./rewards/management/commands/seed_wheels.py =====
from django.core.management.base import BaseCommand
from accounts.models import Company
from rewards.services.probabilities import ensure_wheels_for_company

class Command(BaseCommand):
    help = "Initialise (ou ré-initialise) les roues de probabilités pour chaque entreprise."

    def add_arguments(self, parser):
        parser.add_argument(
            "--reset",
            action="store_true",
            help="Ré-initialise les roues (réécrit le pool et remet idx=0)."
        )

    def handle(self, *args, **options):
        reset = options["reset"]
        count = 0
        for company in Company.objects.all():
            ensure_wheels_for_company(company)
            count += 1
        self.stdout.write(self.style.SUCCESS(
            f"Roues initialisées pour {count} entreprise(s)."
        ))
        if reset:
            # Optionnel : si tu veux forcer un reset plus fort, tu peux
            # étendre ensure_wheels_for_company pour régénérer les pools
            self.stdout.write(self.style.WARNING(
                "Option --reset indiquée : assure-toi que ensure_wheels_for_company "
                "régénère les pools comme attendu."
            ))
===== ./rewards/management/commands/ __init__.py =====
===== ./rewards/management/commands/rebuild_wheels.py =====
from django.core.management.base import BaseCommand
from accounts.models import Company
from rewards.services.probabilities import ensure_wheels

class Command(BaseCommand):
    help = "Reconstruit/initialise les roues de probabilité pour chaque entreprise."

    def handle(self, *args, **opts):
        for c in Company.objects.filter(is_active=True):
            ensure_wheels(c)
            self.stdout.write(self.style.SUCCESS(f"{c.name}: wheels ensured"))
===== ./rewards/__init__.py =====
===== ./rewards/apps.py =====
# rewards/apps.py
from django.apps import AppConfig

class RewardsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "rewards"
    verbose_name = "Récompenses"

    def ready(self):
        import rewards.signals  # noqa
===== ./rewards/forms.py =====
# rewards/forms.py
from django import forms
from .models import RewardTemplate

class RewardTemplateForm(forms.ModelForm):
    # Limite à 17 caractères (serveur) + maxlength côté HTML
    label = forms.CharField(
        max_length=17,
        label="Nom de la récompense",
        widget=forms.TextInput(attrs={
            "class": "form-control",
            "placeholder": "Ex. -10 %",
            "maxlength": "17",   # limite côté navigateur
        }),
        error_messages={
            "max_length": "Maximum 17 caractères.",
        },
    )

    cooldown_months = forms.TypedChoiceField(
        choices=[(i, f"{i} mois") for i in range(1, 7)],
        coerce=int,
        label="Délai",
        widget=forms.Select(attrs={"class": "form-select"})
    )

    min_referrals_required = forms.IntegerField(
        min_value=0,
        label="Minimum de parrainages requis",
        widget=forms.NumberInput(attrs={
            "class": "form-control",
            "placeholder": "0",
            "inputmode": "numeric"
        })
    )

    class Meta:
        model = RewardTemplate
        fields = ("label", "cooldown_months", "min_referrals_required")

    def clean_label(self):
        """Validation supplémentaire (au cas où, après trim)."""
        value = (self.cleaned_data.get("label") or "").strip()
        if len(value) > 17:
            raise forms.ValidationError("Maximum 17 caractères.")
        return value
===== ./rewards/admin.py =====
# rewards/admin.py
from django.contrib import admin, messages
from django.db import IntegrityError, transaction
from django.utils.translation import gettext_lazy as _

from .models import ProbabilityWheel, RewardTemplate, Reward


@admin.action(description="Marquer sélection comme Envoyée")
def mark_sent(modeladmin, request, queryset):
    updated = queryset.update(state="SENT")
    messages.success(request, _(f"{updated} récompense(s) marquée(s) comme envoyée(s)."))

@admin.action(description="Marquer sélection comme En attente")
def mark_pending(modeladmin, request, queryset):
    updated = queryset.update(state="PENDING")
    messages.success(request, _(f"{updated} récompense(s) marquée(s) comme en attente."))

@admin.action(description="Marquer sélection comme Désactivée")
def mark_disabled(modeladmin, request, queryset):
    updated = queryset.update(state="DISABLED")
    messages.success(request, _(f"{updated} récompense(s) désactivée(s)."))

@admin.action(description="Archiver la sélection")
def mark_archived(modeladmin, request, queryset):
    updated = queryset.update(state="ARCHIVED")
    messages.success(request, _(f"{updated} récompense(s) archivée(s)."))

@admin.register(Reward)
class RewardAdmin(admin.ModelAdmin):
    list_display = (
        "company", "client", "referral",
        "label", "bucket", "state", "created_at",
    )
    list_filter = (
        "company", "bucket", "state", ("created_at", admin.DateFieldListFilter),
    )
    search_fields = (
        "label",
        "client__last_name", "client__first_name",
        "client__email", "client__phone",
    )
    list_select_related = ("company", "client", "referral")
    autocomplete_fields = ("client", "referral")
    date_hierarchy = "created_at"
    ordering = ("-created_at", "-id")
    actions = [mark_sent, mark_pending, mark_disabled, mark_archived]

    def save_model(self, request, obj, form, change):
        try:
            with transaction.atomic():
                super().save_model(request, obj, form, change)
        except IntegrityError:
            self.message_user(
                request,
                _("Une récompense existe déjà pour ce parrainage et ce parrain (règle: 1 par filleul)."),
                level=messages.ERROR,
            )

@admin.register(RewardTemplate)
class RewardTemplateAdmin(admin.ModelAdmin):
    list_display = (
        "company", "bucket", "label",
        "cooldown_months", "cooldown_days", "probability_display",
    )
    list_filter = ("company", "bucket")
    search_fields = ("label", "company__name")
    ordering = ("company", "bucket")
    readonly_fields = ("cooldown_days", "probability_display")

@admin.action(description="(Re)créer les deux roues pour l’entreprise (ensure_wheels)")
def action_ensure_wheels(modeladmin, request, queryset):
    companies = {w.company for w in queryset}
    for c in companies:
        ensure_wheels(c)
    messages.success(request, _(f"Roues vérifiées/régénérées pour {len(companies)} entreprise(s)."))

@admin.action(description="Régénérer la roue sélectionnée (repart à idx=0)")
def action_rebuild_selected(modeladmin, request, queryset):
    for w in queryset:
        key = w.key
        try:
            rebuild_wheel(w.company, key)
        except ValueError:
            messages.error(request, _(f"Clé inconnue pour {w}: {key}"))
    messages.success(request, _("Roue(s) régénérée(s)."))

@admin.action(description="Remettre le curseur (idx) à 0")
def action_reset_idx(modeladmin, request, queryset):
    for w in queryset:
        reset_wheel(w.company, w.key)
    messages.success(request, _("Curseur réinitialisé à 0 pour la sélection."))

@admin.register(ProbabilityWheel)
class ProbabilityWheelAdmin(admin.ModelAdmin):
    list_display = ("company", "key", "size", "idx")
    list_filter = ("company", "key")
    search_fields = ("company__name", "key")
    readonly_fields = ("size", "idx")
    actions = [action_ensure_wheels, action_rebuild_selected, action_reset_idx]
===== ./rewards/utils.py =====
from django import template
register = template.Library()

@register.filter
def get_item(d, key):
    try:
        return d.get(key)
    except Exception:
        return None
===== ./rewards/urls.py =====
# rewards/urls.py
from django.urls import path
from .views import (
    reward_list, reward_update, rewards_history_company, reward_spin,
    use_reward, distribute_reward, referral_delete,rewards_stats,test_wheel, reward_send_sms
)

app_name = "rewards"

urlpatterns = [
    path("", reward_list, name="list"),
    path("<int:pk>/edit/", reward_update, name="edit"),
    path("<int:pk>/update/", reward_update, name="update"), 
    path("history/", rewards_history_company, name="history_company"),
    path("stats/", rewards_stats, name="stats"),  
    path("spin/<int:reward_id>/", reward_spin, name="spin"),
    path("use/<str:token>/", use_reward, name="use_reward"),
    path("distribute/<int:pk>/", distribute_reward, name="distribute"),
    path("referral/<int:pk>/delete/", referral_delete, name="referral_delete"),
    path("test-wheel/", test_wheel, name="test_wheel"), 
    path("<int:pk>/send/sms/", reward_send_sms, name="reward_send_sms"),
    
]
===== ./rewards/notifications/services.py =====
# rewards/notifications/services.py
import os
from twilio.rest import Client as TwilioClient

def send_sms(to: str, body: str) -> tuple[bool, str | None]:
    """
    Envoie un SMS via Twilio.
    Retourne (True, None) si OK, sinon (False, "erreur ...").
    """
    sid = os.getenv("TWILIO_ACCOUNT_SID")
    token = os.getenv("TWILIO_AUTH_TOKEN")
    sender = os.getenv("TWILIO_FROM_NUMBER")
    if not (sid and token and sender):
        return False, "Configuration Twilio manquante (env: TWILIO_*)."
    if not to:
        return False, "Numéro du destinataire manquant."

    try:
        client = TwilioClient(sid, token)
        client.messages.create(to=to, from_=sender, body=body)
        return True, None
    except Exception as e:
        return False, str(e)
===== ./rewards/services/probabilities.py =====
# rewards/services/probabilities.py
from __future__ import annotations
from dataclasses import dataclass
from decimal import Decimal, getcontext
from typing import Dict, List, Tuple, Set

from django.db import transaction
from django.shortcuts import render

from accounts.models import Company
from rewards.models import ProbabilityWheel, RewardTemplate
from dashboard.models import Referral

# Compatibilité avec les anciens helpers/tests
from rewards.probabilities import (
    WheelSpec as _LegacyWheelSpec,
    ensure_wheel as _legacy_ensure_wheel,
    draw as _legacy_draw,
)


# Expose les symboles historiques
WheelSpec = _LegacyWheelSpec
ensure_wheel = _legacy_ensure_wheel
draw = _legacy_draw

# ------------------ Définition des deux roues “exactes” ------------------
BASE_KEY = "base_100"           # 1000 cases = 980/19/1
VERY_RARE_KEY = "very_rare_10000"  # 100_000 cases = 1 TRES_RARE

SOUVENT = "SOUVENT"
MOYEN = "MOYEN"
RARE = "RARE"
TRES_RARE = "TRES_RARE"
NO_HIT = "NO_HIT"

BASE_COUNTS = {SOUVENT: 980, MOYEN: 19, RARE: 1}
BASE_SIZE = sum(BASE_COUNTS.values())  # 1000

VR_COUNTS = {NO_HIT: 100_000 - 1, TRES_RARE: 1}
VR_SIZE = sum(VR_COUNTS.values())  # 100_000

getcontext().prec = 28  # précision si on affiche des pourcentages

def _build_base_pool() -> List[str]:
    pool: List[str] = []
    for token, n in BASE_COUNTS.items():
        pool.extend([token] * n)
    return pool

def _build_very_rare_pool() -> List[str]:
    pool: List[str] = []
    for token, n in VR_COUNTS.items():
        pool.extend([token] * n)
    return pool

@transaction.atomic
def ensure_wheels(company: Company) -> Tuple[ProbabilityWheel, ProbabilityWheel]:
    """
    Crée (ou met à niveau) les deux roues exactes pour l’entreprise.
    """
    base, _ = ProbabilityWheel.objects.get_or_create(
        company=company,
        key=BASE_KEY,
        defaults={"pool": _build_base_pool(), "size": BASE_SIZE, "idx": 0},
    )
    very_rare, _ = ProbabilityWheel.objects.get_or_create(
        company=company,
        key=VERY_RARE_KEY,
        defaults={"pool": _build_very_rare_pool(), "size": VR_SIZE, "idx": 0},
    )

    if base.size != BASE_SIZE:
        base.pool, base.size, base.idx = _build_base_pool(), BASE_SIZE, 0
        base.save(update_fields=["pool", "size", "idx"])

    if very_rare.size != VR_SIZE:
        very_rare.pool, very_rare.size, very_rare.idx = _build_very_rare_pool(), VR_SIZE, 0
        very_rare.save(update_fields=["pool", "size", "idx"])

    return base, very_rare

def rebuild_wheel(company: Company, key: str) -> None:
    if key == BASE_KEY:
        pool, size = _build_base_pool(), BASE_SIZE
    elif key == VERY_RARE_KEY:
        pool, size = _build_very_rare_pool(), VR_SIZE
    else:
        raise ValueError(f"Clé de roue inconnue: {key}")

    ProbabilityWheel.objects.update_or_create(
        company=company, key=key,
        defaults={"pool": pool, "size": size, "idx": 0}
    )

def reset_wheel(company: Company, key: str) -> None:
    wheel = ProbabilityWheel.objects.get(company=company, key=key)
    wheel.idx = 0
    wheel.save(update_fields=["idx"])

def _eligible_buckets_for(company: Company, client) -> Dict[str, bool]:
    """
    Détermine l'éligibilité par bucket pour un client, en fonction de son
    nombre de parrainages (en tant que parrain).
    """
    referrals_count = Referral.objects.filter(
        company=company, referrer=client
    ).count()

    tpls = {
        t.bucket: t
        for t in RewardTemplate.objects.filter(company=company).only(
            "bucket", "min_referrals_required"
        )
    }

    def is_ok(bucket: str) -> bool:
        tpl = tpls.get(bucket)
        if not tpl:
            return False
        return referrals_count >= int(tpl.min_referrals_required or 0)

    return {
        SOUVENT: bool(tpls.get(SOUVENT)),
        MOYEN:   bool(tpls.get(MOYEN)),
        RARE:    is_ok(RARE),
        TRES_RARE: is_ok(TRES_RARE),
    }

def _consume_one_eligible(wheel: ProbabilityWheel, allowed: Set[str]) -> str:
    """
    Consomme la roue en sautant les cases non autorisées.
    Normalisation implicite et déterminisme conservé.
    """
    if wheel.size == 0:
        raise ValueError("Roue vide")

    for _ in range(wheel.size):
        val = wheel.pool[wheel.idx]
        wheel.idx = (wheel.idx + 1) % wheel.size
        if val in allowed:
            wheel.save(update_fields=["idx"])
            return val

    # Rien d'autorisé trouvé sur un cycle complet
    wheel.save(update_fields=["idx"])
    return NO_HIT

def tirer_recompense(company: Company, client) -> str:
    """
    Tirage “client-aware” :
      1) very_rare : autorise TRES_RARE seulement si éligible (sinon NO_HIT).
      2) base      : autorise SOUVENT/MOYEN/RARE selon éligibilité.
    """
    elig = _eligible_buckets_for(company, client)
    base, very_rare = ensure_wheels(company)

    allowed_vr = {NO_HIT}
    if elig.get(TRES_RARE, False):
        allowed_vr.add(TRES_RARE)

    vr = _consume_one_eligible(very_rare, allowed_vr)
    if vr == TRES_RARE:
        return TRES_RARE

    allowed_base: Set[str] = set()
    if elig.get(SOUVENT, False): allowed_base.add(SOUVENT)
    if elig.get(MOYEN,   False): allowed_base.add(MOYEN)
    if elig.get(RARE,    False): allowed_base.add(RARE)
    if not allowed_base:
        allowed_base = {SOUVENT}

    return _consume_one_eligible(base, allowed_base)

# Ajoute ceci dans rewards/services/probabilities.py

from decimal import Decimal, getcontext  # tu l'as déjà en haut du fichier
getcontext().prec = 28  # pour éviter les erreurs d'arrondi

def get_normalized_percentages(company: Company, client) -> Dict[str, Decimal]:
    """
    Calcule les pourcentages affichés côté UI en partant des probabilités
    “canoniques” demandées (avant seuils) puis en RENORMALISANT pour que
    la somme fasse exactement 100, en tenant compte de l'éligibilité.
      - SOUVENT   = 80 / 100
      - MOYEN     = 19 / 100
      - RARE      = 0.99999 / 100
      - TRES_RARE = 1 / 100000
    """
    elig = _eligible_buckets_for(company, client)

    # Poids de base (sur [0..1])
    p_base = {
        SOUVENT: Decimal("80") / Decimal("100"),        # 0.80
        MOYEN:   Decimal("19") / Decimal("100"),        # 0.19
        RARE:    Decimal("0.99999") / Decimal("100"),   # 0.0099999
    }
    p_tr = {TRES_RARE: Decimal(1) / Decimal(100000)}     # 0.00001

    # Masse des catégories autorisées
    mass = Decimal(0)
    for b, p in p_base.items():
        if elig.get(b, False):
            mass += p
    if elig.get(TRES_RARE, False):
        mass += p_tr[TRES_RARE]

    # Aucun bucket autorisé -> fallback lisible
    if mass == 0:
        return {
            SOUVENT:   Decimal(100),
            MOYEN:     Decimal(0),
            RARE:      Decimal(0),
            TRES_RARE: Decimal(0),
        }

    # Renormalisation -> la somme fait exactement 100
    return {
        SOUVENT:   (p_base[SOUVENT] / mass) * Decimal(100) if elig.get(SOUVENT, False)   else Decimal(0),
        MOYEN:     (p_base[MOYEN]   / mass) * Decimal(100) if elig.get(MOYEN,   False)   else Decimal(0),
        RARE:      (p_base[RARE]    / mass) * Decimal(100) if elig.get(RARE,    False)   else Decimal(0),
        TRES_RARE: (p_tr[TRES_RARE] / mass) * Decimal(100) if elig.get(TRES_RARE, False) else Decimal(0),
    }


===== ./rewards/services/__init__.py =====
# rewards/services/__init__.py
from .core import create_reward_from_template, award_both_parties
===== ./rewards/services/core.py =====
# rewards/services/core.py
from datetime import timedelta
from django.db import transaction
from django.utils import timezone

from ..models import RewardTemplate, Reward  # ⬅️ import relatif (note les deux points)


def create_reward_from_template(*, company, client, tpl, referral=None, label=None) -> Reward:
    """
    Crée une Reward à partir d’un RewardTemplate en recopiant le cooldown_days.
    Idempotent ? -> Non. Si tu veux éviter les doublons, vérifie avant.
    """
    reward = Reward(
        company=company,
        client=client,
        referral=referral,
        label=label or tpl.label,
        bucket=tpl.bucket,
        cooldown_days=tpl.cooldown_days or 0,
        state="PENDING",
    )
    reward.ensure_token()
    # Optionnel : aligner expiration du lien sur le délai d’utilisation
    if reward.cooldown_days and not reward.token_expires_at:
        reward.token_expires_at = timezone.now() + timedelta(days=int(reward.cooldown_days))
    reward.save()
    return reward


@transaction.atomic
def award_both_parties(*, referral, bucket_referrer="SOUVENT", bucket_referee="SOUVENT"):
    """
    Attribue une récompense au parrain ET au filleul pour un même Referral.
    - Par défaut, même bucket pour les deux ('SOUVENT'). Change si besoin.
    - Idempotent au niveau (company, client, referral) grâce à une vérif avant création.
    """
    company = referral.company
    referrer = referral.referrer
    referee = referral.referee

    # Choix des templates (tu peux changer la logique de sélection ici)
    tpl_referrer = RewardTemplate.objects.get(company=company, bucket=bucket_referrer)
    tpl_referee  = RewardTemplate.objects.get(company=company, bucket=bucket_referee)

    # Évite doublons : unique (company, client, referral)
    reward_referrer = Reward.objects.filter(company=company, client=referrer, referral=referral).first()
    if not reward_referrer:
        reward_referrer = create_reward_from_template(
            company=company, client=referrer, tpl=tpl_referrer, referral=referral
        )

    reward_referee = Reward.objects.filter(company=company, client=referee, referral=referral).first()
    if not reward_referee:
        reward_referee = create_reward_from_template(
            company=company, client=referee, tpl=tpl_referee, referral=referral
        )

    return reward_referrer, reward_referee
===== ./rewards/services/smsmode.py =====
# rewards/services/smsmode.py
from __future__ import annotations

from dataclasses import dataclass
from typing import Any, Dict, Optional
import json
import logging
import re
import requests
from django.conf import settings

logger = logging.getLogger(__name__)

# =========================
# Modèles de données
# =========================

@dataclass
class SMSPayload:
    to: str
    text: str
    sender: Optional[str] = None

@dataclass
class SMSResult:
    ok: bool
    provider_id: Optional[str]
    status: str
    raw: Dict[str, Any]

# =========================
# Normalisation E.164 (FR + DROM + HT)
# =========================

E164_RE = re.compile(r"^\+\d{6,15}$")

def _digits_plus(s: str) -> str:
    """Garde uniquement chiffres et +."""
    return re.sub(r"[^\d\+]", "", s or "")

def normalize_msisdn(phone: str) -> str:
    """
    Normalise en E.164 pour :
      - France métropolitaine : 0X XX XX XX XX  -> +33 X...
      - Guadeloupe : 0590/0690 -> +590590... / +590690...
      - Martinique : 0596/0696 -> +596596... / +596696...
      - Guyane : 0594/0694     -> +594594... / +594694...
      - La Réunion : 0262/0692/0693 -> +262262... / +262692... / +262693...
      - Mayotte : 0269/0639        -> +262269... / +262639...
      - Haïti : 8 chiffres locaux  -> +509XXXXXXXX
    Règles :
      - '00' prefix => remplacé par '+'
      - si déjà E.164, renvoyé tel quel
      - si commence par indicatif sans '+', on ajoute '+'
    """
    raw = (phone or "").strip()
    p = _digits_plus(raw).replace(" ", "")

    # 00 => +
    if p.startswith("00"):
        p = "+" + p[2:]

    # déjà E.164 ?
    if E164_RE.match(p):
        return p

    # indicatifs DOM/HT sans '+'
    for cc in ("590", "596", "594", "262", "509"):
        if p.startswith(cc) and p[len(cc):].isdigit():
            return f"+{p}"

    # France/DOM formats nationaux (10 chiffres, commence par 0)
    if p.startswith("0") and len(p) == 10 and p.isdigit():
        n = p[1:]  # sans le 0
        # DOM fixes/mobiles
        if n.startswith(("590", "690")):  # Guadeloupe
            return f"+590{n}"
        if n.startswith(("596", "696")):  # Martinique
            return f"+596{n}"
        if n.startswith(("594", "694")):  # Guyane
            return f"+594{n}"
        if n.startswith(("262", "692", "693")):  # Réunion
            return f"+262{n}"
        if n.startswith(("269", "639")):  # Mayotte
            return f"+262{n}"  # E.164 Mayotte utilise +262

        # Métropole
        if n[0] in "12345":      # 01..05 -> +331..+335
            return f"+33{n[0]}{n[1:]}"
        if n[0] == "6":          # 06 -> +336
            return f"+33{n}"
        if n[0] == "7":          # 07 -> +337
            return f"+33{n}"

    # Haïti local sans trunk (8 chiffres)
    if len(p) == 8 and p.isdigit():
        return f"+509{p}"

    # 9 chiffres commençant par indicatifs DOM
    if len(p) == 9 and p.isdigit():
        if p.startswith(("590", "596", "594", "262")):
            return f"+{p[:3]}{p}"
        if p.startswith("690"):
            return f"+590{p}"
        if p.startswith("696"):
            return f"+596{p}"
        if p.startswith("694"):
            return f"+594{p}"
        if p.startswith(("692", "693")):
            return f"+262{p}"
        if p.startswith(("269", "639")):
            return f"+262{p}"

    # 9 chiffres métropole mobiles sans 0
    if len(p) == 9 and p.isdigit() and p[0] in ("6", "7"):
        return f"+33{p}"

    # Rien de concluant => renvoyer brut (le provider peut refuser si invalide)
    return raw

# =========================
# Message métier
# =========================

def build_reward_sms_text(*, client_fullname: str, claim_absolute_url: str, company_name: str | None) -> str:
    parts = []
    parts.append(f"{company_name}:" if company_name else "Votre récompense :")
    parts.append(
        f"{client_fullname}, vous avez une récompense en attente."
        if client_fullname else
        "Vous avez une récompense en attente."
    )
    parts.append(f"Utilisez-la ici : {claim_absolute_url}")
    return " ".join(parts)

# =========================
# Construction d'URL smsmode
# =========================

def _build_smsmode_url() -> str:
    """
    Construit l'URL finale sans double 'sms/v1'.
    - Si BASE_URL se termine déjà par '/sms/v1' => ajoute '/messages'
    - Sinon => ajoute '/sms/v1/messages'
    """
    base = settings.SMSMODE["BASE_URL"].rstrip("/")  # ex: https://rest.smsmode.com
    if base.endswith("/sms/v1"):
        return f"{base}/messages"
    return f"{base}/sms/v1/messages"

# =========================
# Envoi
# =========================

def send_sms(payload: SMSPayload) -> SMSResult:
    """
    Envoi via smsmode.
    Auth: header 'X-Api-Key: <API_KEY>'
    Endpoint attendu: https://rest.smsmode.com/sms/v1/messages

    Corps JSON (conforme smsmode):
      {
        "recipient": {"to": "+33XXXXXXXXX"},
        "body": {"text": "message"},
        "from": "ParrainApp"  # optionnel selon contrat
      }
    """
    if settings.SMSMODE.get("DRY_RUN"):
        logger.info("[SMSMODE DRY-RUN] %s", payload)
        return SMSResult(ok=True, provider_id=None, status="DRY_RUN", raw={"dry_run": True})

    url = _build_smsmode_url()

    headers = {
        "X-Api-Key": settings.SMSMODE["API_KEY"],   # ✅ auth correcte
        "Content-Type": "application/json",
        "Accept": "application/json",
    }

    data: Dict[str, Any] = {
        "recipient": {"to": payload.to},   # <- champ attendu
        "body": {"text": payload.text},    # <- champ attendu
    }
    if payload.sender:
        data["from"] = payload.sender      # optionnel selon votre contrat

    logger.info("SMSMODE POST %s to=%s sender=%s", url, payload.to, payload.sender or "")

    try:
        resp = requests.post(url, headers=headers, data=json.dumps(data), timeout=settings.SMSMODE["TIMEOUT"])
        ctype = (resp.headers.get("Content-Type") or "").lower()
        raw: Dict[str, Any] = resp.json() if "application/json" in ctype else {"text": resp.text}
        ok = 200 <= resp.status_code < 300

        # id de message (peut être messageId ou messageIds[])
        provider_id: Optional[str] = None
        if isinstance(raw.get("messageIds"), list) and raw["messageIds"]:
            provider_id = raw["messageIds"][0]
        else:
            provider_id = raw.get("messageId")

        status = raw.get("status") or ("OK" if ok else f"HTTP_{resp.status_code}")
        if not ok:
            logger.error("SMSMODE error: %s (status=%s url=%s)", raw, resp.status_code, url)

        return SMSResult(ok=ok, provider_id=provider_id, status=status, raw=raw)

    except Exception as e:
        logger.exception("SMSMODE exception")
        return SMSResult(ok=False, provider_id=None, status=f"EXC:{e}", raw={})
===== ./rewards/views.py =====
# rewards/views.py
from __future__ import annotations

from datetime import date
import secrets

from django.conf import settings
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.core.paginator import Paginator
from django.db import transaction
from django.db.models import Q, Count
from django.shortcuts import render, redirect, get_object_or_404
from django.utils import timezone
from django.views.decorators.http import require_POST
from django.db.models.functions import TruncMonth

from accounts.models import Company
from dashboard.models import Referral
from .models import RewardTemplate, Reward, ProbabilityWheel
from .forms import RewardTemplateForm
from rewards.services.probabilities import BASE_COUNTS, VR_COUNTS, BASE_SIZE, VR_SIZE


# ----------------------------- UI Dictionaries -----------------------------

BUCKET_UI = {
    "SOUVENT":   {"label": "Souvent",   "badge": "success", "prob": "980/1000"},
    "MOYEN":     {"label": "Moyen",     "badge": "info",    "prob": "19/1000"},
    "RARE":      {"label": "Rare",      "badge": "warning", "prob": "1/1000"},
    "TRES_RARE": {"label": "Très rare", "badge": "danger",  "prob": "1/100000"},
}

STATE_UI = {
    "PENDING":  {"label": "En attente",   "badge": "warning"},
    "SENT":     {"label": "Envoyée",      "badge": "success"},
    "DISABLED": {"label": "Désactivée",   "badge": "secondary"},
    "ARCHIVED": {"label": "Archivée",     "badge": "dark"},
}


# ----------------------------- Helpers généraux -----------------------------

def _current_company(request):
    """
    Admin d’entreprise = user.company ; Superadmin peut cibler via ?company=<id>
    """
    user = request.user
    company = getattr(user, "company", None)
    cid = (request.GET.get("company") or "").strip()
    if getattr(user, "is_superadmin", lambda: False)() and cid:
        company = get_object_or_404(Company, pk=cid)
    return company


def _can_manage_company(user, company) -> bool:
    return (hasattr(user, "is_superadmin") and user.is_superadmin()) or (
        hasattr(user, "company") and user.company_id == company.id
    )


def ensure_reward_templates(company):
    """
    Crée les 4 templates si manquants, avec probas affichées figées.
    """
    defaults_map = {
        "SOUVENT":   {"label": "- 10 % de remise", "cooldown_months": 1},
        "MOYEN":     {"label": "- 10 % de remise", "cooldown_months": 1},
        "RARE":      {"label": "iPhone 16 Pro Max", "cooldown_months": 3},
        "TRES_RARE": {"label": "Voyage à Miami", "cooldown_months": 6},
    }
    for key, ui in BUCKET_UI.items():
        obj, _created = RewardTemplate.objects.get_or_create(
            company=company, bucket=key,
            defaults={
                **defaults_map[key],
                "probability_display": ui["prob"],
                "min_referrals_required": 0,
            }
        )
        if not obj.probability_display:
            obj.probability_display = ui["prob"]
            obj.save(update_fields=["probability_display"])


def _last_12_month_starts(today):
    """
    Retourne la liste des 12 premiers jours de mois (du plus ancien au plus récent).
    """
    y, m = today.year, today.month
    out = []
    for i in range(11, -1, -1):
        yy, mm = y, m - i
        while mm <= 0:
            mm += 12
            yy -= 1
        out.append(date(yy, mm, 1))
    return out


# ----------------------------- Snapshot des roues (local) -----------------------------
# Clés/tokens alignés avec rewards/probabilities.py
_BASE_KEY = "base_100"
_VERY_RARE_KEY = "very_rare_10000"

_TOK_BASE = ["SOUVENT", "MOYEN", "RARE"]
_TOK_VR   = ["TRES_RARE", "NO_HIT"]


def _remaining_counts(pool, idx, tokens):
    """Compte ce qu'il reste AVANT la fin du cycle actuel (de idx -> fin)."""
    tail = pool[idx:] if pool and 0 <= idx < len(pool) else pool
    out = {}
    for t in tokens:
        out[t] = tail.count(t) if tail else 0
    return out


def _wheels_snapshot(company):
    """
    Renvoie un dict:
    {
      "base":      {"size": int, "idx": int, "progress_pct": int,
                    "remaining_by_token": {token: n}, "total_by_token": {token: n}},
      "very_rare": { ... }
    }
    Si une roue n'existe pas encore, on renvoie des zéros élégants.
    """
    snap = {}
    # --- BASE ---
    try:
        base = ProbabilityWheel.objects.get(company=company, key=_BASE_KEY)
        base_total = {t: base.pool.count(t) for t in _TOK_BASE}
        base_remaining = _remaining_counts(base.pool, base.idx, _TOK_BASE)
        base_progress = int((base.idx / base.size) * 100) if base.size else 0
        snap["base"] = {
            "size": base.size,
            "idx": base.idx,
            "progress_pct": base_progress,
            "remaining_by_token": base_remaining,
            "total_by_token": base_total,
        }
    except ProbabilityWheel.DoesNotExist:
        snap["base"] = {
            "size": 0,
            "idx": 0,
            "progress_pct": 0,
            "remaining_by_token": {t: 0 for t in _TOK_BASE},
            "total_by_token": {t: 0 for t in _TOK_BASE},
        }

    # --- VERY RARE ---
    try:
        vr = ProbabilityWheel.objects.get(company=company, key=_VERY_RARE_KEY)
        vr_total = {t: vr.pool.count(t) for t in _TOK_VR}
        vr_remaining = _remaining_counts(vr.pool, vr.idx, _TOK_VR)
        vr_progress = int((vr.idx / vr.size) * 100) if vr.size else 0
        snap["very_rare"] = {
            "size": vr.size,
            "idx": vr.idx,
            "progress_pct": vr_progress,
            "remaining_by_token": vr_remaining,
            "total_by_token": vr_total,
        }
    except ProbabilityWheel.DoesNotExist:
        snap["very_rare"] = {
            "size": 0,
            "idx": 0,
            "progress_pct": 0,
            "remaining_by_token": {t: 0 for t in _TOK_VR},
            "total_by_token": {t: 0 for t in _TOK_VR},
        }

    return snap


# ----------------------------- CRUD Templates -----------------------------

@login_required
def reward_list(request):
    company = _current_company(request)
    if not company:
        messages.error(request, "Aucune entreprise sélectionnée.")
        return redirect("dashboard:root")

    ensure_reward_templates(company)

    # 1) Récupérer les templates
    qs = RewardTemplate.objects.filter(company=company)

    # 2) Trier par bucket (SOUVENT -> MOYEN -> RARE -> TRES_RARE)
    order = {"SOUVENT": 0, "MOYEN": 1, "RARE": 2, "TRES_RARE": 3}
    items_sorted = sorted(qs, key=lambda tpl: order.get(tpl.bucket, 99))

    # 3) Préparer l'affichage (paire (template, ui))
    items = [(tpl, BUCKET_UI[tpl.bucket]) for tpl in items_sorted]

    # 4) Données de la roue de test (probas identiques à Reward)
    test_wheel = {
        "base": {"size": BASE_SIZE, "counts": BASE_COUNTS},
        "very_rare": {"size": VR_SIZE, "counts": VR_COUNTS},
    }

    return render(request, "rewards/list.html", {
        "items": items,
        "TEST_WHEEL": test_wheel,
    })



@login_required
def reward_update(request, pk):
    company = _current_company(request)
    r = get_object_or_404(RewardTemplate, pk=pk, company=company)
    if request.method == "POST":
        form = RewardTemplateForm(request.POST, instance=r)
        if form.is_valid():
            form.save()
            messages.success(request, "Récompense mise à jour.")
            return redirect("rewards:list")
    else:
        form = RewardTemplateForm(instance=r)
    return render(request, "rewards/form.html", {"form": form, "tpl": r, "ui": BUCKET_UI[r.bucket]})


# ------------------------------ Historique (entreprise) ------------------------------

@login_required
def rewards_history_company(request):
    """
    Historique de TOUTES les récompenses d'une entreprise.
    Pour Superadmin, passez ?company=<id>; sinon, l’entreprise = user.company.
    """
    company = _current_company(request)
    if not company:
        messages.error(request, "Aucune entreprise sélectionnée.")
        return redirect("dashboard:root")

    qs = (
        Reward.objects
        .select_related("client", "referral", "referral__referrer", "referral__referee")
        .filter(company=company)
        .order_by("-created_at", "-id")
    )

    bucket = (request.GET.get("bucket") or "").strip().upper()
    state  = (request.GET.get("state") or "").strip().upper()
    q      = (request.GET.get("q") or "").strip()

    if bucket in BUCKET_UI:
        qs = qs.filter(bucket=bucket)
    if state in STATE_UI:
        qs = qs.filter(state=state)
    if q:
        qs = qs.filter(
            Q(client__first_name__icontains=q) |
            Q(client__last_name__icontains=q)  |
            Q(client__email__icontains=q)      |
            Q(label__icontains=q)
        )

    page = Paginator(qs, 20).get_page(request.GET.get("p"))

    return render(request, "rewards/history.html", {
        "company": company,
        "page": page,
        "bucket": bucket,
        "state": state,
        "q": q,
        "BUCKET_UI": BUCKET_UI,
        "STATE_UI": STATE_UI,
        "buckets": [(k, v["label"]) for k, v in BUCKET_UI.items()],
        "states": [(k, v["label"]) for k, v in STATE_UI.items()],
    })


# ------------------------------ Spin (animation) ------------------------------

@login_required
def reward_spin(request, reward_id: int):
    reward = get_object_or_404(
        Reward.objects.select_related("company", "client"),
        pk=reward_id
    )

    wheel_order = ["SOUVENT", "MOYEN", "RARE", "TRES_RARE"]
    segment = 360 / len(wheel_order)  # 90°
    try:
        idx = wheel_order.index(reward.bucket)
    except ValueError:
        idx = 0
    target_angle = 4 * 360 + int(idx * segment + segment / 2)

    ui = BUCKET_UI.get(reward.bucket, {"label": reward.bucket, "badge": "secondary"})
    return render(request, "rewards/spin.html", {
        "reward": reward,
        "ui": ui,
        "target_angle": target_angle,
    })


# ------------------------------ Page publique (token) ------------------------------

def use_reward(request, token):
    reward = get_object_or_404(Reward, token=token)

    context = {"reward": reward}
    if reward.state != "PENDING":
        messages.info(request, "Cette récompense n’est plus en attente (déjà distribuée ou inactive).")
    return render(request, "rewards/use_reward.html", context)


# ------------------------------ Actions ------------------------------

@login_required
@require_POST
def distribute_reward(request, pk: int):
    reward = get_object_or_404(
        Reward.objects.select_related("company", "client"),
        pk=pk
    )

    if not _can_manage_company(request.user, reward.company):
        messages.error(request, "Accès refusé.")
        back_id = request.POST.get("back_client")
        return redirect("dashboard:client_detail", pk=back_id) if back_id else redirect("dashboard:clients_list")

    if reward.state != "PENDING":
        messages.info(request, "La récompense n’est pas en attente (déjà traitée ?).")
    else:
        reward.state = "SENT"
        reward.redeemed_at = timezone.now()
        reward.save(update_fields=["state", "redeemed_at"])
        messages.success(request, f"Récompense « {reward.label} » distribuée.")

    back_id = request.POST.get("back_client")
    return redirect("dashboard:client_detail", pk=back_id) if back_id else redirect("rewards:history_company")


@login_required
@require_POST
def referral_delete(request, pk: int):
    referral = get_object_or_404(
        Referral.objects.select_related("company", "referrer", "referee"),
        pk=pk
    )

    if not _can_manage_company(request.user, referral.company):
        messages.error(request, "Accès refusé.")
        back_id = request.POST.get("back_client")
        return redirect("dashboard:client_detail", pk=back_id) if back_id else redirect("dashboard:clients_list")

    back_client_id = request.POST.get("back_client") or referral.referee_id or referral.referrer_id

    referral.delete()
    messages.success(request, "Parrainage supprimé.")
    return redirect("dashboard:client_detail", pk=back_client_id)


# ------------------------------ STATS (récompenses) ------------------------------

@login_required
def rewards_stats(request):
    """
    Page stats ultra-simple : 2 visuels
    - Parrainages par mois (aperçu des 4 derniers mois)
    - Cadeaux obtenus (Top) avec part en %
    """
    company = _current_company(request)
    if not company:
        messages.error(request, "Aucune entreprise sélectionnée.")
        return redirect("dashboard:root")

    qs = Reward.objects.filter(company=company)

    # ---- 4 derniers mois (mois 1er) ----
    def _last_n_month_starts(today, n):
        y, m = today.year, today.month
        out = []
        for i in range(n - 1, -1, -1):
            yy, mm = y, m - i
            while mm <= 0:
                mm += 12
                yy -= 1
            out.append(date(yy, mm, 1))
        return out

    today = timezone.now().date().replace(day=1)
    months = _last_n_month_starts(today, 4)

    monthly_raw = (
        qs.annotate(m=TruncMonth("created_at"))
          .values("m")
          .annotate(n=Count("id"))
          .order_by("m")
    )
    monthly_map = {row["m"].date(): row["n"] for row in monthly_raw if row["m"]}
    monthly_rows = [{"month": m, "n": monthly_map.get(m, 0)} for m in months]
    max_n = max([r["n"] for r in monthly_rows] or [1])
    for r in monthly_rows:
        r["pct"] = int((r["n"] / max_n) * 100) if max_n else 0

    # ---- Top cadeaux (par libellé) ----
    gifts_raw = list(qs.values("label").annotate(n=Count("id")).order_by("-n")[:4])
    total_gifts = sum(g["n"] for g in gifts_raw) or 1
    top_gifts = [
        {"label": g["label"] or "—", "n": g["n"], "pct": int((g["n"] / total_gifts) * 100)}
        for g in gifts_raw
    ]

    context = {
        "company": company,
        "monthly_rows": monthly_rows,   # [{month: date(YYYY,MM,1), n: int, pct: int}]
        "top_gifts": top_gifts,         # [{label,str,n,int,pct,int}]
    }
    return render(request, "rewards/stats.html", context)


# rewards/views.py
import random
from decimal import Decimal
from django.contrib.auth.decorators import login_required
from django.shortcuts import render

@login_required
def test_wheel(request):
    """
    Roue de test (sans attribution).

    Probabilités « de base » (sans minimums) :
      - SOUVENT   = 80 / 100
      - MOYEN     = 19 / 100
      - RARE      = 0,99999 / 100
      - TRES_RARE = 1 / 100000

    Modes :
      - combined (défaut) : test TRES_RARE (1/100000), sinon base 80/19/~1%
      - base              : uniquement SOUVENT/MOYEN/RARE
      - very_rare         : TRES_RARE vs NO_HIT
    GET:
      - n    : simuler N tirages
      - seed : graine RNG (reproductible)
      - mode : combined | base | very_rare
    """
    mode = (request.GET.get("mode") or "combined").lower()
    simulate_n = int(request.GET.get("n") or 0)
    seed = request.GET.get("seed")
    rng = random.Random(seed) if seed else random

    # Probabilités demandées
    P_S  = Decimal("80") / Decimal("100")        # 0.80
    P_M  = Decimal("19") / Decimal("100")        # 0.19
    P_R  = Decimal("0.99999") / Decimal("100")   # 0.0099999
    P_TR = Decimal(1) / Decimal(100000)          # 0.00001

    ORDER = ("SOUVENT", "MOYEN", "RARE", "TRES_RARE", "NO_HIT")

    # ---- Tirage 1 coup (pour l’animation) : pondération simple ----
    def weighted_choice(weights: dict[str, Decimal]) -> str:
        total = float(sum(weights.values())) or 1.0
        x = rng.random() * total
        acc = 0.0
        for k in ORDER:
            if k in weights:
                acc += float(weights[k])
                if x < acc:
                    return k
        return next(iter(weights))

    def draw_once() -> str:
        if mode == "very_rare":
            return weighted_choice({"TRES_RARE": P_TR, "NO_HIT": Decimal(1) - P_TR})
        if mode == "base":
            return weighted_choice({"SOUVENT": P_S, "MOYEN": P_M, "RARE": P_R})
        # combined
        if rng.random() < float(P_TR):
            return "TRES_RARE"
        return weighted_choice({"SOUVENT": P_S, "MOYEN": P_M, "RARE": P_R})

    bucket = draw_once()

    # ---- Simulation N tirages (sans remise pour respecter 80/19/1 sur 100) ----
    counts = pct = None
    if simulate_n > 0:
        counts = {"SOUVENT": 0, "MOYEN": 0, "RARE": 0, "TRES_RARE": 0, "NO_HIT": 0}

        if mode == "very_rare":
            # N essais indépendants de proba 1/100000
            for _ in range(simulate_n):
                if rng.random() < float(P_TR):
                    counts["TRES_RARE"] += 1
                else:
                    counts["NO_HIT"] += 1

        else:
            # Base « exacte » : cycles de 100 cases (80/19/1), échantillonnage sans remise.
            full_cycles, rem = divmod(simulate_n, 100)
            counts["SOUVENT"] += 80 * full_cycles
            counts["MOYEN"]   += 19 * full_cycles
            counts["RARE"]    += 1  * full_cycles

            if rem:
                base_pool = ["SOUVENT"] * 80 + ["MOYEN"] * 19 + ["RARE"] * 1
                rng.shuffle(base_pool)
                for t in base_pool[:rem]:
                    counts[t] += 1

            if mode == "combined":
                # Injecte les très rares (très improbable sur 100 tirages)
                # On convertit autant de tirages base en TRES_RARE pour rester à N total.
                vr_hits = sum(1 for _ in range(simulate_n) if rng.random() < float(P_TR))
                for _ in range(vr_hits):
                    base_list = (
                        ["SOUVENT"] * counts["SOUVENT"] +
                        ["MOYEN"]   * counts["MOYEN"]   +
                        ["RARE"]    * counts["RARE"]
                    )
                    if base_list:
                        t = rng.choice(base_list)
                        counts[t] -= 1
                    counts["TRES_RARE"] += 1

        total = sum(counts.values()) or 1
        pct = {k: round(counts[k] * 100 / total, 2) for k in counts}

    # ---- UI / animation ----
    ui = BUCKET_UI.get(bucket, {"label": "Aucun gain", "badge": "secondary"})
    wheel_order = ["SOUVENT", "MOYEN", "RARE", "TRES_RARE"]
    seg = 360 / len(wheel_order)
    idx = wheel_order.index(bucket) if bucket in wheel_order else 0
    target_angle = 4 * 360 + int(idx * seg + seg / 2)

    return render(request, "rewards/test_wheel.html", {
        "bucket": bucket,
        "ui": ui,
        "target_angle": target_angle,
        "mode": mode,
        "seed": seed or "",
        "simulate_n": simulate_n,
        "counts": counts,
        "pct": pct,
    })


# rewards/views.py (ajouts)
from django.views.decorators.http import require_POST
from django.http import Http404
from .services.smsmode import SMSPayload, send_sms, build_reward_sms_text, normalize_msisdn

@login_required
@require_POST
def reward_send_sms(request, pk: int):
    """
    Envoie au client un SMS contenant le lien d’utilisation de la récompense (token).
    POST /rewards/<pk>/send/sms/
    """
    reward = get_object_or_404(Reward.objects.select_related("client", "company"), pk=pk)

    # --- Permissions (mêmes règles que distribute_reward) ---
    user = request.user
    if hasattr(user, "is_superadmin") and callable(user.is_superadmin) and user.is_superadmin():
        pass
    elif getattr(user, "company_id", None) and reward.company_id == user.company_id:
        pass
    else:
        raise Http404("Non autorisé")

    # Génère un token s’il n’existe pas encore (pour construire l’URL)
    reward.ensure_token()
    reward.save(update_fields=["token", "token_expires_at"])

    # Données pour le SMS
    claim_absolute = request.build_absolute_uri(reward.claim_path)
    client_fullname = f"{reward.client.first_name} {reward.client.last_name}".strip()
    company_name = getattr(reward.company, "name", None)

    phone = normalize_msisdn(reward.client.phone or "")
    if not phone:
        messages.error(request, "Le client n’a pas de numéro de téléphone valide.")
        back_id = request.POST.get("back_client")
        return redirect("dashboard:client_detail", pk=back_id) if back_id else redirect("dashboard:clients_list")

    text = build_reward_sms_text(
        client_fullname=client_fullname,
        claim_absolute_url=claim_absolute,
        company_name=company_name,
    )

    payload = SMSPayload(to=phone, text=text, sender=settings.SMSMODE.get("SENDER") or None)
    result = send_sms(payload)

    if result.ok:
        messages.success(request, "SMS envoyé au client.")
    else:
        messages.error(request, f"Échec d’envoi SMS ({result.status}).")

    back_id = request.POST.get("back_client")
    return redirect("dashboard:client_detail", pk=back_id) if back_id else redirect("rewards:history_company")
===== ./dashboard/templatetags/__init__.py =====
===== ./dashboard/templatetags/dict_extras.py =====
# dashboard/templatetags/dict_extras.py
from django import template
register = template.Library()

@register.filter(name="get_item")
def get_item(mapping, key):
    if mapping is None:
        return ""
    # dict-like .get
    try:
        return mapping.get(key, "")
    except AttributeError:
        pass
    # [] fallback
    try:
        return mapping[key]
    except Exception:
        return ""

@register.filter(name="index")
def index(seq, i):
    try:
        return seq[int(i)]
    except Exception:
        return ""

@register.filter(name="attr")
def attr(obj, name):
    return getattr(obj, str(name), "")
===== ./dashboard/templatetags/proba_extras.py =====
# dashboard/templatetags/proba_extras.py
from django import template

register = template.Library()

def _compute_percentages(company, client):
    """
    TODO: remplace par ta vraie logique d'éligibilité.
    Ici on retourne des valeurs par défaut stables.
    Si tu as une méthode côté modèle (ex: company.get_normalized_percentages(client)),
    on l'appelle si elle existe.
    """
    # Si tu as une méthode métier, on la privilégie
    maybe = getattr(company, "get_normalized_percentages", None)
    if callable(maybe):
        try:
            data = maybe(client)
            if isinstance(data, dict) and {"SOUVENT","MOYEN","RARE","TRES_RARE"} <= set(data.keys()):
                return data
        except Exception:
            pass

    # Valeurs par défaut (remplace si besoin)
    return {
        "SOUVENT": 25,
        "MOYEN": 35,
        "RARE": 25,
        "TRES_RARE": 15,
    }

@register.filter(name="get_normalized_percentages")
def get_normalized_percentages(company, client):
    """
    Usage dans la template :
      {% with P=company|get_normalized_percentages:client %} ... {% endwith %}
    """
    if company is None or client is None:
        return {}
    return _compute_percentages(company, client)
===== ./dashboard/signals.py =====
===== ./dashboard/migrations/0005_delete_company.py =====
# Generated by Django 5.0.14 on 2025-08-25 06:57

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0004_company_delete_reward'),
    ]

    operations = [
        migrations.DeleteModel(
            name='Company',
        ),
    ]
===== ./dashboard/migrations/0004_company_delete_reward.py =====
# Generated by Django 5.0.14 on 2025-08-24 13:39

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0003_remove_referral_uniq_referee_per_company'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
            ],
        ),
        migrations.DeleteModel(
            name='Reward',
        ),
    ]
===== ./dashboard/migrations/0009_remove_referral_uniq_referee_per_company.py =====
# Generated by Django 5.0 on 2025-09-08 08:43

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0008_referral_constraint_guard'),
    ]

    operations = [
        migrations.RemoveConstraint(
            model_name='referral',
            name='uniq_referee_per_company',
        ),
    ]
===== ./dashboard/migrations/__init__.py =====
===== ./dashboard/migrations/0003_remove_referral_uniq_referee_per_company.py =====
# dashboard/migrations/0003_remove_referral_uniq_referee_per_company.py
from django.db import migrations

class Migration(migrations.Migration):
    dependencies = [
        ('dashboard', '0002_alter_reward_options_reward_bucket_and_more'),
    ]
    operations = []
===== ./dashboard/migrations/0010_referral_uniq_referee_per_company.py =====
# Generated by Django 5.0 on 2025-09-08 08:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('dashboard', '0009_remove_referral_uniq_referee_per_company'),
    ]

    operations = [
        migrations.AddConstraint(
            model_name='referral',
            constraint=models.UniqueConstraint(fields=('company', 'referee'), name='uniq_referee_per_company'),
        ),
    ]
===== ./dashboard/migrations/0007_referral_uniq_referee_per_company.py =====
# Generated by Django 5.0 on 2025-08-31 09:26

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('dashboard', '0006_client_uniq_referrer_name_per_company_ci'),
    ]

    operations = [
        migrations.AddConstraint(
            model_name='referral',
            constraint=models.UniqueConstraint(fields=('company', 'referee'), name='uniq_referee_per_company'),
        ),
    ]
===== ./dashboard/migrations/0002_alter_reward_options_reward_bucket_and_more.py =====
# Generated by Django 5.0 on 2025-08-22 13:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0001_initial'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='reward',
            options={},
        ),
        migrations.AddField(
            model_name='reward',
            name='bucket',
            field=models.CharField(choices=[('SOUVENT', 'Souvent (~80/100)'), ('MOYEN', 'Moyen (~19/100)'), ('RARE', 'Rare (~1/100)'), ('TRES_RARE', 'Très rare (~1/10000)')], default='SOUVENT', max_length=10),
        ),
        migrations.AddField(
            model_name='reward',
            name='cooldown_days',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='reward',
            name='min_obtention',
            field=models.PositiveIntegerField(blank=True, default=0),
        ),
        migrations.AddField(
            model_name='reward',
            name='weight',
            field=models.PositiveIntegerField(default=1, help_text='Poids relatif dans sa catégorie'),
        ),
        migrations.AlterField(
            model_name='reward',
            name='channel',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='reward',
            name='client',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rewards', to='dashboard.client'),
        ),
        migrations.AlterField(
            model_name='reward',
            name='code',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='reward',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True),
        ),
        migrations.AlterField(
            model_name='reward',
            name='label',
            field=models.CharField(max_length=120),
        ),
        migrations.AlterField(
            model_name='reward',
            name='state',
            field=models.CharField(choices=[('PENDING', 'À envoyer'), ('SENT', 'Envoyé'), ('DISABLED', 'Désactivé'), ('ARCHIVED', 'Archivé')], default='PENDING', max_length=12),
        ),
    ]
===== ./dashboard/migrations/0001_initial.py =====
# Generated by Django 5.0 on 2025-08-21 12:56

import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=100)),
                ('last_name', models.CharField(blank=True, max_length=100)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=32)),
                ('is_referrer', models.BooleanField(default=False)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='accounts.company')),
            ],
        ),
        migrations.CreateModel(
            name='Referral',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals', to='accounts.company')),
                ('referee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_received', to='dashboard.client')),
                ('referrer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='referrals_made', to='dashboard.client')),
            ],
        ),
        migrations.CreateModel(
            name='Reward',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(max_length=200)),
                ('code', models.CharField(blank=True, max_length=64)),
                ('channel', models.CharField(blank=True, max_length=32)),
                ('state', models.CharField(choices=[('PENDING', 'À envoyer'), ('SENT', 'Envoyé'), ('DISABLED', 'Désactivé'), ('ARCHIVED', 'Archivé')], default='PENDING', max_length=16)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='dashboard.client')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='accounts.company')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
===== ./dashboard/migrations/0008_referral_constraint_guard.py =====
from django.db import migrations, models

class Migration(migrations.Migration):

    dependencies = [
        ('dashboard', '0007_referral_uniq_referee_per_company'),  # remplace par la dernière migration existante
    ]

    operations = [
        migrations.SeparateDatabaseAndState(
            database_operations=[],  # pas d'action en base
            state_operations=[
                migrations.AddConstraint(
                    model_name='referral',
                    constraint=models.UniqueConstraint(
                        fields=['referee', 'company'],
                        name='uniq_referee_per_company',
                    ),
                ),
            ],
        ),
    ]
===== ./dashboard/migrations/0006_client_uniq_referrer_name_per_company_ci.py =====
# Generated by Django 5.0.14 on 2025-08-29 15:21

import django.db.models.functions.text
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
        ('dashboard', '0005_delete_company'),
    ]

    operations = [
        migrations.AddConstraint(
            model_name='client',
            constraint=models.UniqueConstraint(django.db.models.functions.text.Lower('last_name'), django.db.models.functions.text.Lower('first_name'), models.F('company'), condition=models.Q(('is_referrer', True), models.Q(('last_name', ''), _negated=True)), name='uniq_referrer_name_per_company_ci'),
        ),
    ]
===== ./dashboard/models.py =====
# dashboard/models.py
from django.db import models
from django.utils import timezone
from accounts.models import Company
from django.db.models import Q, UniqueConstraint
from django.db.models.functions import Lower


class Client(models.Model):
    company     = models.ForeignKey(Company, on_delete=models.CASCADE, related_name="clients")
    first_name  = models.CharField(max_length=100, blank=True)
    last_name   = models.CharField(max_length=100, blank=True)
    email       = models.EmailField(blank=True, null=True)
    phone       = models.CharField(max_length=32, blank=True)
    is_referrer = models.BooleanField(default=False)

    class Meta:
        constraints = [
            # Unicité (insensible à la casse) du couple (nom, prénom, entreprise) pour les PARRAINS,
            # et seulement si "last_name" non vide pour éviter de bloquer les créations incomplètes.
            UniqueConstraint(
                Lower("last_name"),
                Lower("first_name"),
                "company",
                name="uniq_referrer_name_per_company_ci",
                condition=Q(is_referrer=True) & ~Q(last_name=""),
            ),
        ]

    def __str__(self):
        return f"{self.last_name} {self.first_name}".strip() or self.email or f"Client #{self.pk}"


class Referral(models.Model):
 
    company    = models.ForeignKey(Company, on_delete=models.CASCADE, related_name="referrals")
    referrer   = models.ForeignKey(Client, on_delete=models.CASCADE, related_name="referrals_made")
    referee    = models.ForeignKey(Client, on_delete=models.CASCADE, related_name="referrals_received")
    created_at = models.DateTimeField(default=timezone.now)

    class Meta:
        constraints = [
            # si tu as déjà d'autres contraintes, garde-les
            models.UniqueConstraint(
                fields=["company", "referee"],
                name="uniq_referee_per_company",   # <-- NOM EXACT attendu par la migration
            ),
        ]

    def __str__(self):
        return f"{self.referrer} → {self.referee} ({self.company})"

===== ./dashboard/__init__.py =====
===== ./dashboard/apps.py =====
from django.apps import AppConfig


class DashboardConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'dashboard'
===== ./dashboard/forms.py =====
from django import forms
from django.forms import Select, TextInput, EmailInput
from .models import Client, Company, Referral

# --------------------------
# Utilitaire commun
# --------------------------
def _init_company_field(form, user):
    """Restreint le select 'company' selon le rôle."""
    is_super = bool(getattr(user, "is_superadmin", None) and user.is_superadmin())

    if is_super:
        form.fields["company"].queryset = Company.objects.order_by("name")
    else:
        # Admin / Opérateur : company forcée
        form.fields["company"].queryset = Company.objects.filter(
            pk=getattr(getattr(user, "company", None), "pk", None)
        )
        form.fields["company"].empty_label = None

from django import forms
from django.forms import TextInput, EmailInput, Select
from .models import Client, Company, Referral

# dashboard/forms.py
from django import forms
from django.forms import TextInput, EmailInput, Select
from .models import Client, Company, Referral


class ReferrerClientForm(forms.ModelForm):
    """
    Formulaire dédié à la création/édition d’un PARRAIN.
    - Ne montre pas is_referrer
    - Force is_referrer=True au save()
    - Superadmin voit toutes les entreprises, sinon company est forcée
    """
    class Meta:
        model = Client
        fields = ("company", "last_name", "first_name", "email", "phone")
        widgets = {
            "company": Select(attrs={"class": "form-select"}),
            "last_name": TextInput(attrs={"class": "form-control", "placeholder": "Nom"}),
            "first_name": TextInput(attrs={"class": "form-control", "placeholder": "Prénom"}),
            "email": EmailInput(attrs={"class": "form-control", "placeholder": "email@exemple.com"}),
            "phone": TextInput(attrs={"class": "form-control", "placeholder": "06 00 00 00 00"}),
        }

    def __init__(self, *args, **kwargs):
        request = kwargs.pop("request", None)
        super().__init__(*args, **kwargs)
        user = getattr(request, "user", None)
        is_super = bool(user and hasattr(user, "is_superadmin") and user.is_superadmin())

        if is_super:
            self.fields["company"].queryset = Company.objects.order_by("name")
        else:
            self.fields["company"].queryset = Company.objects.filter(
                pk=getattr(getattr(user, "company", None), "pk", None)
            )
            self.fields["company"].empty_label = None

    def clean(self):
        cleaned = super().clean()
        company = cleaned.get("company")
        email = (cleaned.get("email") or "").strip().lower()
        if company and email:
            exists = Client.objects.filter(
                company=company, email__iexact=email
            ).exclude(pk=self.instance.pk or 0).exists()
            if exists:
                self.add_error("email", "Un client avec cet email existe déjà dans cette entreprise.")
        return cleaned

    def save(self, commit=True):
        obj = super().save(commit=False)
        obj.is_referrer = True
        if commit:
            obj.save()
        return obj


class RefereeClientForm(forms.ModelForm):
    """
    Formulaire dédié au FILLEUL (client non parrain).
    - Force is_referrer=False au save()
    - Même logique de restriction d’entreprise que ci-dessus
    """
    class Meta:
        model = Client
        fields = ("company", "last_name", "first_name", "email", "phone")
        widgets = {
            "company": Select(attrs={"class": "form-select"}),
            "last_name": TextInput(attrs={"class": "form-control", "placeholder": "Nom"}),
            "first_name": TextInput(attrs={"class": "form-control", "placeholder": "Prénom"}),
            "email": EmailInput(attrs={"class": "form-control", "placeholder": "email@exemple.com"}),
            "phone": TextInput(attrs={"class": "form-control", "placeholder": "06 00 00 00 00"}),
        }

    def __init__(self, *args, **kwargs):
        request = kwargs.pop("request", None)
        super().__init__(*args, **kwargs)
        user = getattr(request, "user", None)
        is_super = bool(user and hasattr(user, "is_superadmin") and user.is_superadmin())

        if is_super:
            self.fields["company"].queryset = Company.objects.order_by("name")
        else:
            self.fields["company"].queryset = Company.objects.filter(
                pk=getattr(getattr(user, "company", None), "pk", None)
            )
            self.fields["company"].empty_label = None

    def clean(self):
        cleaned = super().clean()
        company = cleaned.get("company")

        # Normalisation nom/prénom (trim + casse)
        ln = (cleaned.get("last_name") or "").strip()
        fn = (cleaned.get("first_name") or "").strip()
        email = (cleaned.get("email") or "").strip().lower()

        # 1) Nom obligatoire pour un parrain
        if not ln:
            self.add_error("last_name", "Le nom est obligatoire pour créer un parrain.")

        # 2) Unicité nom/prénom dans l’entreprise (insensible à la casse)
        if company and ln:
            exists_name = Client.objects.filter(
                company=company,
                is_referrer=True,
                last_name__iexact=ln,
                first_name__iexact=fn,
            ).exclude(pk=self.instance.pk or 0).exists()
            if exists_name:
                self.add_error("last_name", "Un parrain portant ce nom et ce prénom existe déjà dans cette entreprise.")

        # 3) (Optionnel) Unicité email dans l’entreprise si fourni
        if company and email:
            exists_email = Client.objects.filter(
                company=company, email__iexact=email
            ).exclude(pk=self.instance.pk or 0).exists()
            if exists_email:
                self.add_error("email", "Un client avec cet email existe déjà dans cette entreprise.")

        # Remet les valeurs normalisées
        cleaned["last_name"] = ln
        cleaned["first_name"] = fn
        cleaned["email"] = email
        return cleaned


class ReferralForm(forms.ModelForm):
    """
    Formulaire d’association Parrain → Filleul.
    ATTENTION : pas de champ 'status' car il n’existe pas dans le modèle (sinon FieldError).
    """
    class Meta:
        model = Referral
        fields = ("referrer", "referee")
        widgets = {
            "referrer": forms.Select(attrs={"class": "form-select"}),
            "referee": forms.Select(attrs={"class": "form-select"}),
        }

    def __init__(self, *args, **kwargs):
        self.request = kwargs.pop("request", None)
        self.company = kwargs.pop("company", None)
        super().__init__(*args, **kwargs)

        user = getattr(self.request, "user", None)
        is_super = bool(user and hasattr(user, "is_superadmin") and user.is_superadmin())

        if is_super and self.company is None:
            self.fields["referrer"].queryset = (
                Client.objects.filter(is_referrer=True)
                .select_related("company")
                .order_by("last_name", "first_name")
            )
            self.fields["referee"].queryset = (
                Client.objects.filter(is_referrer=False)
                .select_related("company")
                .order_by("last_name", "first_name")
            )
        else:
            comp = self.company or getattr(user, "company", None)
            self.fields["referrer"].queryset = (
                Client.objects.filter(company=comp, is_referrer=True)
                .order_by("last_name", "first_name")
            )
            self.fields["referee"].queryset = (
                Client.objects.filter(company=comp, is_referrer=False)
                .order_by("last_name", "first_name")
            )

        def fmt(o):
            comp_name = o.company.name if o.company else "—"
            mail = o.email or "—"
            return f"{o.last_name} {o.first_name} — {mail} ({comp_name})"

        self.fields["referrer"].label_from_instance = fmt
        self.fields["referee"].label_from_instance = fmt

    def clean(self):
        cleaned = super().clean()
        referrer = cleaned.get("referrer")
        referee = cleaned.get("referee")

        if referrer and not referrer.is_referrer:
            self.add_error("referrer", "Le parrain doit être un client marqué « parrain ».")
        if referee and referee.is_referrer:
            self.add_error("referee", "Le filleul doit être un client non parrain.")
        if referrer and referee:
            if referrer.company_id != referee.company_id:
                self.add_error("referee", "Parrain et filleul doivent appartenir à la même entreprise.")
            if referrer.id == referee.id:
                self.add_error("referee", "Parrain et filleul doivent être différents.")

        if referee:
            company = (
                self.company
                or getattr(getattr(self.request, "user", None), "company", None)
                or getattr(referee, "company", None)
            )
            if company and Referral.objects.filter(company=company, referee=referee).exists():
                self.add_error("referee", "Ce filleul a déjà un parrainage dans cette entreprise.")
        return cleaned


# dashboard/forms.py (ajouter en bas du fichier)
from django import forms
from django.forms import TextInput, EmailInput
from .models import Client

class RefereeInlineForm(forms.ModelForm):
    """
    Form pour créer un FILLEUL (client non-parrain) sans champ 'company' (déduit du parrain).
    - is_referrer = False forcé au save
    - exige au moins un nom OU un email
    - évite le doublon d'email dans l'entreprise
    """
    class Meta:
        model = Client
        fields = ("last_name", "first_name", "email", "phone")
        widgets = {
            "last_name":  TextInput(attrs={"class": "form-control", "placeholder": "Nom"}),
            "first_name": TextInput(attrs={"class": "form-control", "placeholder": "Prénom"}),
            "email":      EmailInput(attrs={"class": "form-control", "placeholder": "email@exemple.com"}),
            "phone":      TextInput(attrs={"class": "form-control", "placeholder": "06 00 00 00 00"}),
        }

    def clean(self):
        cleaned = super().clean()
        ln = (cleaned.get("last_name") or "").strip()
        fn = (cleaned.get("first_name") or "").strip()
        email = (cleaned.get("email") or "").strip().lower()

        if not ln and not email:
            self.add_error(None, "Renseignez au moins un nom ou un email pour le filleul.")

        cleaned["last_name"] = ln
        cleaned["first_name"] = fn
        cleaned["email"] = email
        return cleaned

    def save_with_company(self, company, commit=True):
        """Crée le filleul dans l’entreprise donnée, is_referrer=False."""
        obj = self.instance if self.instance and self.instance.pk else Client()
        obj.company = company
        obj.last_name = self.cleaned_data.get("last_name", "")
        obj.first_name = self.cleaned_data.get("first_name", "")
        obj.email = self.cleaned_data.get("email", None)
        obj.phone = self.cleaned_data.get("phone", "")
        obj.is_referrer = False
        if commit:
            obj.save()
        return obj
===== ./dashboard/admin.py =====
from django.contrib import admin

# Register your models here.
# dashboard/admin.py
from django.contrib import admin
from .models import Client, Referral

@admin.register(Client)
class ClientAdmin(admin.ModelAdmin):
    list_display = ("last_name", "first_name", "email", "company", "is_referrer")
    search_fields = ("last_name", "first_name", "email", "phone")
    list_filter = ("company", "is_referrer")

@admin.register(Referral)
class ReferralAdmin(admin.ModelAdmin):
    list_display  = ("id", "company", "referrer", "referee", "created_at")
    list_filter   = ("company",)                # ← plus de "status" ici
    search_fields = ("referrer__last_name", "referrer__first_name",
                     "referee__last_name", "referee__first_name")
    autocomplete_fields = ("company", "referrer", "referee")
    date_hierarchy = "created_at"

===== ./dashboard/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./dashboard/urls.py =====
# dashboard/urls.py
from django.urls import path
from . import views

app_name = "dashboard"

urlpatterns = [
    # Accueils
    path("", views.dashboard_root, name="root"),
    path("superadmin/", views.superadmin_home, name="superadmin_home"),
    path("company/", views.company_home, name="company_home"),

    # Clients – liste / détail
    path("clients/", views.clients_list, name="clients_list"),
    path("clients/<int:pk>/", views.client_detail, name="client_detail"),


    # Clients – édition & suppression (le form est choisi automatiquement)
    path("clients/<int:pk>/edit/", views.client_update, name="client_update"),
    path("clients/<int:pk>/delete/", views.client_delete, name="client_delete"),
    
  # ✅ Création d'un PARRAIN (écran séparé)
    path("clients/referrers/new/", views.referrer_create, name="referrer_create"),
    
    # Parrainage : création via recherche du parrain + formulaire du filleul
    path("referrals/create/", views.referral_create, name="referral_create"),
     path("clients/referrer/<int:pk>/edit/", views.referrer_update, name="referrer_update"),
      # 🔎 API de recherche de parrains
    path("api/referrers/", views.referrer_lookup, name="referrer_lookup"),
    path("referrals/<int:pk>/delete/", views.referral_delete, name="referral_delete"),

    # Récompenses (manuel + validations)
    path("clients/<int:pk>/rewards/new/", views.reward_create, name="reward_create"),
    path("referrals/<int:referral_id>/validate/", views.validate_referral_and_award, name="validate_referral_and_award"),
    path("referrals/<int:referral_id>/award-referrer/", views.validate_referral_and_award_referrer, name="validate_referral_and_award_referrer"),
      # NEW: alias pour le lien "Tableau de bord" du layout
    path("home/", views.dashboard_root, name="dashboard_home"),
]
===== ./dashboard/views.py =====
# dashboard/views.py
from django.contrib import messages
from django.contrib.auth.decorators import login_required
from django.core.exceptions import PermissionDenied
from django.core.paginator import Paginator
from django.db import IntegrityError, transaction
from django.db.models import Q
from django.shortcuts import get_object_or_404, redirect, render
from django.urls import reverse

from django.utils import timezone

from accounts.models import Company
from dashboard.models import Client, Referral
from .forms import (
    ReferrerClientForm,
    RefereeClientForm,
    ReferralForm,
    RefereeInlineForm,
)
from rewards.forms import RewardTemplateForm
from rewards.models import Reward, RewardTemplate
from rewards.services import award_both_parties

# -------------------------------------------------------------
# Helpers (rôles & périmètre)
# -------------------------------------------------------------
def _is_superadmin(u) -> bool:
    return hasattr(u, "is_superadmin") and u.is_superadmin()

def _is_company_admin(u) -> bool:
    return hasattr(u, "is_admin_entreprise") and u.is_admin_entreprise()

def _is_operator(u) -> bool:
    return hasattr(u, "is_operateur") and u.is_operateur()

def _require_company_staff(user):
    if _is_superadmin(user) or _is_company_admin(user) or _is_operator(user):
        return
    raise PermissionDenied("Accès réservé au personnel.")

def _company_for(user):
    # Admin/Opérateur : l’entreprise de l’utilisateur
    # Superadmin : à choisir via l’UI (ou None ici)
    return getattr(user, "company", None)

# -------------------------------------------------------------
# KPI / activité pour tableaux de bord
# -------------------------------------------------------------
def _month_bounds(now=None):
    now = now or timezone.now()
    month_start = now.replace(day=1, hour=0, minute=0, second=0, microsecond=0)
    prev_month_end = month_start
    if month_start.month == 1:
        prev_month_start = month_start.replace(year=month_start.year - 1, month=12)
    else:
        prev_month_start = month_start.replace(month=month_start.month - 1)
    return month_start, prev_month_start, prev_month_end

def _kpis_for_company(company: Company):
    now = timezone.now()
    month_start, prev_month_start, prev_month_end = _month_bounds(now)

    referrals_this_month = Referral.objects.filter(
        company=company, created_at__gte=month_start
    ).count()

    prev_referrals = Referral.objects.filter(
        company=company, created_at__gte=prev_month_start, created_at__lt=prev_month_end
    ).count()

    delta_pct = 0
    if prev_referrals:
        delta_pct = round((referrals_this_month - prev_referrals) * 100 / prev_referrals)

    return {
        "referrals_month": referrals_this_month,
        "referrals_delta_pct": delta_pct,
        "rewards_sent": Reward.objects.filter(company=company, state="SENT").count(),
        "rewards_pending": Reward.objects.filter(company=company, state="PENDING").count(),
        "clients": Client.objects.filter(company=company).count(),
    }

def _recent_events_for_company(company: Company, limit=8):
    events = []

    for r in (
        Referral.objects.select_related("referrer", "referee")
        .filter(company=company)
        .order_by("-created_at")[:limit]
    ):
        events.append(
            {
                "icon": "👥",
                "text": f"Parrainage validé — {r.referrer.last_name} {r.referrer.first_name} → "
                        f"{r.referee.last_name} {r.referee.first_name}",
                "badge": "OK",
            }
        )

    pend = Reward.objects.filter(company=company, state="PENDING").count()
    if pend:
        events.append(
            {"icon": "🎁", "text": "Cadeau en attente — Envoyer le lien au parrain", "badge": str(pend)}
        )

    events.append({"icon": "🧑", "text": "Base clients — total à jour", "badge": "+1"})
    return events[:limit]

# -------------------------------------------------------------
# Redirections d’accueil selon le rôle
# -------------------------------------------------------------
@login_required
def dashboard_root(request):
    u = request.user
    if _is_superadmin(u):
        return redirect("dashboard:superadmin_home")
    if _is_company_admin(u) or _is_operator(u):
        return redirect("dashboard:company_home")
    raise PermissionDenied("Accès réservé au personnel.")

@login_required
def superadmin_home(request):
    if not _is_superadmin(request.user):
        raise PermissionDenied("Réservé au Superadmin.")

    companies = Company.objects.all().order_by("name")

    totals = {"referrals_month": 0, "rewards_sent": 0, "rewards_pending": 0, "clients": 0}
    rows = []

    for c in companies:
        k = _kpis_for_company(c)
        rows.append(
            {
                "company": c,
                "referrals_month": k["referrals_month"],
                "rewards_sent": k["rewards_sent"],
                "rewards_pending": k["rewards_pending"],
                "clients": k["clients"],
            }
        )
        totals["referrals_month"] += k["referrals_month"]
        totals["rewards_sent"] += k["rewards_sent"]
        totals["rewards_pending"] += k["rewards_pending"]
        totals["clients"] += k["clients"]

    events = []  # (optionnel) activité globale
    return render(
        request,
        "dashboard/superadmin_home.html",
        {"kpi": totals, "events": events, "rows": rows},
    )

@login_required
def company_home(request):
    u = request.user
    if not (_is_superadmin(u) or _is_company_admin(u) or _is_operator(u)):
        raise PermissionDenied("Réservé à l’Admin/Opérateur (ou Superadmin).")

    # valeur par défaut : l’entreprise de l’utilisateur
    company = _company_for(u)  # admin/opérateur -> user.company

    # superadmin peut cibler une entreprise via ?company=<id>
    if _is_superadmin(u):
        cid = (request.GET.get("company") or "").strip()
        if cid:
            company = get_object_or_404(Company, pk=cid)
            # (Optionnel) mémoriser le contexte pour la navigation suivante :
            # request.session["dash_company_id"] = company.id

    if not company:
        messages.info(request, "Sélectionnez une entreprise.")
        return redirect("accounts:company_list")

    kpi = _kpis_for_company(company)
    events = _recent_events_for_company(company)
    return render(
        request,
        "dashboard/company_home.html",
        {"company": company, "kpi": kpi, "events": events},
    )

# -------------------------------------------------------------
# Clients : liste / détail
# -------------------------------------------------------------
@login_required
def clients_list(request):
    _require_company_staff(request.user)
    u = request.user

    qs = Client.objects.filter(is_referrer=True)
    if not _is_superadmin(u):
        qs = qs.filter(company=u.company)

    q = (request.GET.get("q") or "").strip()
    if q:
        qs = qs.filter(
            Q(last_name__icontains=q)
            | Q(first_name__icontains=q)
            | Q(email__icontains=q)
        )

    qs = qs.order_by("last_name", "first_name")
    return render(
        request,
        "dashboard/clients_list.html",
        {"clients": qs, "filter_type": "parrains", "current_q": q},
    )

@login_required
def client_detail(request, pk: int):
    _require_company_staff(request.user)

    u = request.user
    if _is_superadmin(u):
        client = get_object_or_404(Client.objects.select_related("company"), pk=pk)
    else:
        client = get_object_or_404(
            Client.objects.select_related("company"), pk=pk, company=u.company
        )

    # Historique des parrainages (où ce client est parrain OU filleul)
    history_qs = (
        Referral.objects.select_related("referrer", "referee")
        .filter(company=client.company)
        .filter(Q(referrer=client) | Q(referee=client))
        .order_by("-created_at", "-id")
    )
    history_page = Paginator(history_qs, 8).get_page(request.GET.get("h"))

    # Map referral_id -> reward_id (récompense de ce client liée à ce parrainage)
    ref_ids = [r.id for r in history_page.object_list]
    rewards_for_rows = (
        Reward.objects.filter(company=client.company, client=client, referral_id__in=ref_ids)
        .exclude(state="DISABLED")
        .values_list("referral_id", "id")
    )
    ref_rewards = {ref_id: reward_id for ref_id, reward_id in rewards_for_rows}
    for r in history_page.object_list:
        r.existing_reward_id = ref_rewards.get(r.id)

    # Récompenses par statut (3 colonnes)
    rewards_ok = (
        Reward.objects.filter(company=client.company, client=client, state="SENT").order_by("-id")
    )
    rewards_pending = (
        Reward.objects.filter(company=client.company, client=client, state="PENDING").order_by("-id")
    )
    rewards_unused = (
        Reward.objects.filter(company=client.company, client=client, state="DISABLED").order_by("-id")
    )

    page_ok = Paginator(rewards_ok, 5).get_page(request.GET.get("ok"))
    page_pending = Paginator(rewards_pending, 5).get_page(request.GET.get("pending"))
    page_unused = Paginator(rewards_unused, 5).get_page(request.GET.get("unused"))

    return render(
        request,
        "dashboard/client_detail.html",
        {
            "company": client.company,
            "client": client,
            "history_page": history_page,
            "page_ok": page_ok,
            "page_pending": page_pending,
            "page_unused": page_unused,
            "kpi_obtenus": rewards_ok.count(),
            "kpi_attente": rewards_pending.count(),
            "kpi_nonutils": rewards_unused.count(),
        },
    )

# -------------------------------------------------------------
# Clients : création / édition / suppression
# -------------------------------------------------------------
@login_required
@transaction.atomic
def client_update(request, pk: int):
    """
    Éditer un client (parrain OU filleul).
    Choix automatique du bon formulaire et verrouillage du périmètre.
    """
    _require_company_staff(request.user)

    qs = Client.objects.select_related("company")
    obj = (
        get_object_or_404(qs, pk=pk)
        if _is_superadmin(request.user)
        else get_object_or_404(qs, pk=pk, company=request.user.company)
    )

    is_ref = bool(obj.is_referrer)
    FormCls = ReferrerClientForm if is_ref else RefereeClientForm
    template = "dashboard/referrer_form.html" if is_ref else "dashboard/referee_form.html"

    form = FormCls(request.POST or None, instance=obj, request=request)

    if not _is_superadmin(request.user) and "company" in form.fields:
        form.fields["company"].disabled = True

    if request.method == "POST" and form.is_valid():
        c = form.save(commit=False)
        c.is_referrer = True if is_ref else False
        if not _is_superadmin(request.user):
            c.company = request.user.company
        try:
            c.save()
        except IntegrityError:
            if is_ref:
                form.add_error(
                    "last_name",
                    "Un parrain portant ce nom et ce prénom existe déjà dans cette entreprise.",
                )
            else:
                form.add_error(None, "Conflit d’unicité détecté pour ce client.")
        else:
            messages.success(request, "Client mis à jour.")
            return redirect("dashboard:clients_list")

    return render(
        request,
        template,
        {"form": form, "referrer": obj if is_ref else None, "is_update": True},
    )

@login_required
def client_delete(request, pk: int):
    _require_company_staff(request.user)

    obj = get_object_or_404(Client, pk=pk)
    if not _is_superadmin(request.user) and obj.company_id != request.user.company_id:
        raise PermissionDenied("Accès refusé.")

    if request.method == "POST":
        obj.delete()
        messages.success(request, "Client supprimé.")
        return redirect("dashboard:clients_list")

    return render(
        request,
        "dashboard/confirm_delete.html",
        {
            "title": "Supprimer le client",
            "message": f"Supprimer définitivement {obj.last_name} {obj.first_name} ?",
            "post_action": "dashboard:client_delete",
            "post_kwargs": {"pk": obj.pk},
            "back_url_name": "dashboard:clients_list",
            "back_url_kwargs": {},
        },
    )

# -------------------------------------------------------------
# Parrains : CRUD + API recherche
# -------------------------------------------------------------
@login_required
def referrer_create(request):
    """
    Créer un PARRAIN (client is_referrer=True).
    Superadmin choisit l’entreprise, sinon forcée à user.company.
    """
    _require_company_staff(request.user)
    form = ReferrerClientForm(request.POST or None, request=request)

    if request.method == "POST" and form.is_valid():
        try:
            ref = form.save(commit=False)  # le form force is_referrer=True
            if not _is_superadmin(request.user):
                ref.company = request.user.company
            ref.save()
        except IntegrityError:
            form.add_error(
                "last_name",
                "Un parrain portant ce nom et ce prénom existe déjà dans cette entreprise.",
            )
        else:
            messages.success(request, "Parrain créé avec succès.")
            return redirect("dashboard:clients_list")

    return render(request, "dashboard/referrer_form.html", {"form": form})

@login_required
def referrer_update(request, pk: int):
    """
    Modifier un PARRAIN (is_referrer=True) avec les mêmes règles de périmètre.
    """
    _require_company_staff(request.user)

    base_qs = Client.objects.select_related("company").filter(is_referrer=True)
    obj = (
        get_object_or_404(base_qs, pk=pk)
        if _is_superadmin(request.user)
        else get_object_or_404(base_qs, pk=pk, company=request.user.company)
    )

    form = ReferrerClientForm(request.POST or None, instance=obj, request=request)

    if request.method == "POST" and form.is_valid():
        try:
            ref = form.save(commit=False)
            ref.is_referrer = True
            if not _is_superadmin(request.user):
                ref.company = request.user.company
            ref.save()
        except IntegrityError:
            form.add_error(
                "last_name",
                "Un parrain portant ce nom et ce prénom existe déjà dans cette entreprise.",
            )
        else:
            messages.success(request, "Parrain modifié avec succès.")
            return redirect("dashboard:clients_list")

    return render(
        request, "dashboard/referrer_form.html", {"form": form, "referrer": obj, "is_update": True}
    )

@login_required
def referrer_lookup(request):
    """
    API JSON pour l’autocomplete des parrains.
    """
    _require_company_staff(request.user)

    q = (request.GET.get("q") or "").strip()
    id_param = request.GET.get("id")
    company_id = request.GET.get("company_id")

    qs = Client.objects.filter(is_referrer=True).select_related("company")

    if _is_superadmin(request.user):
        if company_id:
            qs = qs.filter(company_id=company_id)
    else:
        qs = qs.filter(company=request.user.company)

    if id_param:
        obj = qs.filter(pk=id_param).first()
        if not obj:
            from django.http import JsonResponse

            return JsonResponse({"ok": False, "error": "not_found"}, status=404)
        label = f"{obj.last_name} {obj.first_name}".strip() or (obj.email or "—")
        label += f" — {obj.email or '—'} ({obj.company.name if obj.company else '—'})"
        return JsonResponse({"ok": True, "result": {"id": obj.id, "label": label}})

    if q:
        qs = qs.filter(
            Q(last_name__icontains=q) | Q(first_name__icontains=q) | Q(email__icontains=q)
        )

    qs = qs.order_by("last_name", "first_name")[:20]

    def to_item(o):
        label = f"{o.last_name} {o.first_name}".strip() or (o.email or "—")
        label += f" — {o.email or '—'} ({o.company.name if o.company else '—'})"
        return {"id": o.id, "label": label}

    from django.http import JsonResponse

    return JsonResponse({"ok": True, "results": [to_item(o) for o in qs]})

# -------------------------------------------------------------
# Parrainage : création (recherche parrain + filleul inline)
# -------------------------------------------------------------
@login_required
@transaction.atomic
def referral_create(request, company_id=None):
    """
    1) Sélection d’un parrain via autocomplete,
    2) Saisie/repérage du filleul (création si besoin dans l’entreprise du parrain),
    3) Création du parrainage + 2 récompenses PENDING (parrain & filleul),
       puis envoi automatique du lien au parrain si possible.
    """
    # ---- Contexte entreprise pour l’autocomplete ----
    if _is_superadmin(request.user) and company_id:
        company_ctx = Company.objects.filter(pk=company_id).first()
    else:
        company_ctx = getattr(request.user, "company", None)

    ref_form = RefereeInlineForm(request.POST or None)
    referrer_error = None

    if request.method == "POST":
        # Parrain choisi (ID venant du champ caché)
        raw_referrer_id = (request.POST.get("referrer") or "").strip()

        referrer_qs = Client.objects.filter(is_referrer=True).select_related("company")
        if not _is_superadmin(request.user):
            referrer_qs = referrer_qs.filter(company=request.user.company)

        referrer = None
        if raw_referrer_id:
            try:
                referrer = referrer_qs.filter(pk=int(raw_referrer_id)).first()
            except (TypeError, ValueError):
                referrer = None

        if not referrer:
            referrer_error = "Sélectionnez un parrain valide dans la liste."
        elif ref_form.is_valid():
            # Créer / réutiliser le filleul dans l’entreprise du parrain
            company = referrer.company
            email = (ref_form.cleaned_data.get("email") or "").strip().lower()
            referee = (
                Client.objects.filter(company=company, email__iexact=email).first()
                if email
                else None
            )
            if referee is None:
                referee = ref_form.save_with_company(company)

            # Création du parrainage (valide les cohérences via ReferralForm)
            rf = ReferralForm(
                data={"referrer": referrer.pk, "referee": referee.pk},
                request=request,
                company=company,
            )
            if rf.is_valid():
                referral = rf.save(commit=False)
                referral.company = company
                try:
                    referral.save()
                except IntegrityError:
                    ref_form.add_error(None, "Ce filleul a déjà un parrainage dans cette entreprise.")
                else:
                    # Crée les 2 récompenses (parrain & filleul) — idempotent par (company, client, referral)
                    reward_parrain, reward_filleul = award_both_parties(referral=referral)

                    messages.success(
                        request,
                        f"Parrainage créé : {referrer} → {referee}. "
                        f"Récompenses : Parrain « {reward_parrain.label} » et Filleul « {reward_filleul.label} ».",
                    )

                    # Envoi du lien au parrain si on a un téléphone et un lien
                    claim_abs = (
                        request.build_absolute_uri(reward_parrain.claim_path)
                        if reward_parrain.claim_path
                        else ""
                    )

                    if referrer.phone and claim_abs:
                        # Envoi différé après commit (SMS via Twilio si configuré)
                        def _after_commit():
                            from os import getenv
                            try:
                                from twilio.rest import Client as TwilioClient  # type: ignore
                                sid = getenv("TWILIO_ACCOUNT_SID")
                                token = getenv("TWILIO_AUTH_TOKEN")
                                sender = getenv("TWILIO_SMS_FROM")
                                if sid and token and sender:
                                    TwilioClient(sid, token).messages.create(
                                        to=referrer.phone, from_=sender, body=f"{referrer.first_name or referrer.last_name}, voici votre lien cadeau : {claim_abs}"
                                    )
                                    messages.success(request, "Lien de récompense envoyé au parrain par SMS.")
                                else:
                                    messages.info(request, "Parrainage OK. SMS non envoyé (Twilio non configuré).")
                            except Exception as e:
                                messages.warning(request, f"Parrainage OK, SMS non envoyé : {e}")

                        transaction.on_commit(_after_commit)
                    else:
                        messages.info(request, "Parrainage OK. SMS non envoyé (numéro du parrain ou lien manquant).")

                    return redirect("dashboard:clients_list")
            else:
                err = rf.errors.get("referee")
                if err:
                    ref_form.add_error(None, err.as_text().replace("* ", ""))
                else:
                    messages.error(request, "Le parrainage n'a pas pu être créé. Corrigez les erreurs.")

    return render(
        request,
        "dashboard/referral_form.html",
        {"ref_form": ref_form, "referrer_error": referrer_error, "company": company_ctx},
    )

# -------------------------------------------------------------
# Parrainage : édition / suppression
# -------------------------------------------------------------
@login_required
def referral_update(request, pk: int):
    _require_company_staff(request.user)

    obj = get_object_or_404(Referral, pk=pk)
    if not _is_superadmin(request.user) and obj.company_id != request.user.company_id:
        raise PermissionDenied("Accès refusé.")

    current_company = None if _is_superadmin(request.user) else request.user.company

    if request.method == "POST":
        form = ReferralForm(request.POST, instance=obj, request=request, company=current_company)
        if form.is_valid():
            r = form.save(commit=False)
            r.company = r.referrer.company
            r.save()
            messages.success(request, "Parrainage mis à jour.")
            return redirect("dashboard:clients_list")
    else:
        form = ReferralForm(instance=obj, request=request, company=current_company)

    return render(request, "dashboard/referral_form.html", {"form": form})

@login_required
def referral_delete(request, pk: int):
    """
    Supprime un parrainage.
    Si back_client est fourni, retour à la fiche client, sinon à la liste des clients.
    """
    _require_company_staff(request.user)

    obj = get_object_or_404(Referral, pk=pk)
    if not _is_superadmin(request.user) and obj.company_id != getattr(request.user, "company_id", None):
        raise PermissionDenied("Accès refusé.")

    back_client_id = request.POST.get("back_client") or request.GET.get("back_client")
    back_url_name = "dashboard:client_detail" if back_client_id else "dashboard:clients_list"
    back_url_kwargs = {"pk": back_client_id} if back_client_id else {}

    if request.method == "POST":
        obj.delete()
        messages.success(request, "Parrainage supprimé.")
        return redirect(back_url_name, **back_url_kwargs)

    return render(
        request,
        "dashboard/confirm_delete.html",
        {
            "title": "Supprimer le parrainage",
            "message": "Confirmer la suppression de ce parrainage ?",
            "post_action": "dashboard:referral_delete",
            "post_kwargs": {"pk": obj.pk},
            "back_url_name": back_url_name,
            "back_url_kwargs": back_url_kwargs,
            "back_client_id": back_client_id,
        },
    )

# -------------------------------------------------------------
# Récompenses : création manuelle + validations
# -------------------------------------------------------------
@login_required
def reward_create(request, pk: int):
    """
    Création manuelle d’une Reward pour un client.
    """
    _require_company_staff(request.user)

    u = request.user
    client = get_object_or_404(
        Client, pk=pk, **({} if _is_superadmin(u) else {"company": u.company})
    )

    if request.method == "POST":
        form = RewardTemplateForm(request.POST)
        if form.is_valid():
            reward = form.save(commit=False)
            reward.client = client
            reward.company = client.company
            reward.save()
            messages.success(request, "Récompense créée.")
            return redirect("dashboard:client_detail", pk=client.pk)
    else:
        form = RewardTemplateForm()

    return render(request, "dashboard/reward_form.html", {"form": form, "client": client})

@login_required
@transaction.atomic
def validate_referral_and_award(request, referral_id: int):
    """
    Valide un parrainage et attribue une récompense au FILLEUL,
    puis redirige vers l’animation de tirage.
    """
    _require_company_staff(request.user)

    referral = get_object_or_404(
        Referral.objects.select_related("referee", "referrer", "company"), pk=referral_id
    )

    user_company = _company_for(request.user)
    if user_company and referral.company_id != user_company.id and not _is_superadmin(request.user):
        messages.error(request, "Ce parrainage n’appartient pas à votre entreprise.")
        return redirect("dashboard:clients_list")

    client = referral.referee
    # Exemple: tirage exact via un bucket/token déjà configuré (adapter si nécessaire)
    # Ici on clone simplement un template au même bucket
    token = RewardTemplate.objects.filter(company=referral.company).first().bucket  # (à adapter)
    tpl = get_object_or_404(RewardTemplate, company=referral.company, bucket=token)

    reward = Reward.objects.create(
        company=referral.company,
        client=client,
        referral=referral,
        label=tpl.label,
        bucket=token,
        cooldown_days=tpl.cooldown_days,
        state="PENDING",
    )

    messages.success(
        request, f"Parrainage validé. Récompense pour le filleul « {client} » : {tpl.label}."
    )
    return redirect("rewards:spin", reward_id=reward.id)

@login_required
def validate_referral_and_award_referrer(request, referral_id: int):
    """
    Valide un parrainage et attribue une récompense au PARRAIN ET au FILLEUL.
    """
    referral = get_object_or_404(
        Referral.objects.select_related("company", "referrer", "referee"), pk=referral_id
    )
    company: Company = referral.company

    user = request.user
    if not (_is_superadmin(user) or getattr(user, "company_id", None) == company.id):
        messages.error(request, "Accès refusé.")
        return redirect("dashboard:client_detail", pk=referral.referrer_id)

    reward_parrain, reward_filleul = award_both_parties(referral=referral)

    messages.success(
        request,
        f"Parrainage validé. Récompenses créées : Parrain « {reward_parrain.label} » "
        f"et Filleul « {reward_filleul.label} ».",
    )
    return redirect("dashboard:client_detail", pk=referral.referrer_id)
===== ./common/migrations/__init__.py =====
===== ./common/models.py =====
from django.db import models

# Create your models here.
===== ./common/__init__.py =====
===== ./common/apps.py =====
from django.apps import AppConfig


class CommonConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'common'
===== ./common/admin.py =====
from django.contrib import admin

# Register your models here.
===== ./common/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./common/views.py =====
from django.shortcuts import render

# Create your views here.
===== ./public/migrations/__init__.py =====
===== ./public/models.py =====
from django.db import models

# Create your models here.
===== ./public/__init__.py =====
===== ./public/apps.py =====
from django.apps import AppConfig


class PublicConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'public'
===== ./public/forms.py =====
# public/forms.py
from django import forms
from django.core.exceptions import ValidationError
from dashboard.models import Client
from core.forms.fields import InternationalPhoneFormField


class ReferrerForm(forms.ModelForm):
    # téléphone obligatoire côté public
    phone = InternationalPhoneFormField(required=True)

    def __init__(self, *args, company=None, **kwargs):
        super().__init__(*args, **kwargs)
        self.company = company  # injecté par la vue
        # champs requis
        self.fields["last_name"].required = True
        self.fields["first_name"].required = True
        self.fields["email"].required = True   # <- rendu obligatoire pour pouvoir envoyer un reset

    class Meta:
        model = Client
        fields = ["last_name", "first_name", "email", "phone"]
        widgets = {
            "last_name":  forms.TextInput(attrs={"placeholder": "Ex : Dupont", "class": "form-control"}),
            "first_name": forms.TextInput(attrs={"placeholder": "Ex : Marie",  "class": "form-control"}),
            "email":      forms.EmailInput(attrs={"placeholder": "Ex : marie@mail.com", "class": "form-control"}),
            # phone : géré par InternationalPhoneFormField
        }

    def clean(self):
        cleaned = super().clean()
        if not self.company:
            return cleaned

        last_name = (cleaned.get("last_name") or "").strip()
        first_name = (cleaned.get("first_name") or "").strip()
        if not last_name:
            # ta contrainte DB ne s’applique pas si last_name vide
            return cleaned

        # Réplique stricte de ta contrainte d’unicité (CI) pour les parrains
        exists = Client.objects.filter(
            company=self.company,
            is_referrer=True,
            last_name__iexact=last_name,
            first_name__iexact=first_name,
        ).exists()
        if exists:
            raise ValidationError("Un parrain portant ce nom existe déjà pour cette entreprise.")
        return cleaned
===== ./public/admin.py =====
from django.contrib import admin

# Register your models here.
===== ./public/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./public/urls.py =====
# public/urls.py
from django.urls import path
from . import views

app_name = "public"

urlpatterns = [
    path("p/<slug:slug>/", views.company_presentation, name="company_presentation"),
    path("p/<slug:slug>/register/", views.referrer_register, name="referrer_register"),
]
===== ./public/views.py =====
# public/views.py
from __future__ import annotations

from django.shortcuts import get_object_or_404, render, redirect
from django.contrib import messages
from django.db import IntegrityError, transaction

from django.contrib.auth import get_user_model
from django.utils.crypto import get_random_string

from accounts.models import Company
from dashboard.models import Client
from .forms import ReferrerForm
from rewards.models import RewardTemplate
from django.contrib.auth.forms import PasswordResetForm
from django.conf import settings


# ---------------------------
# Helpers
# ---------------------------

def _ensure_referrer_user(*, email: str, company: Company, first_name: str = "", last_name: str = ""):
    """
    Assure qu'un accounts.User existe pour cet email :
      - username = email
      - profile = CLIENT (rôle neutre = “aucun rôle”)
      - company = l’entreprise courante
      - mot de passe utilisable aléatoire si absent/inutilisable
    Retourne (user, created: bool)
    """
    User = get_user_model()
    email = (email or "").strip()
    if not email:
        return None, False

    u = User.objects.filter(email__iexact=email).first()
    if u:
        changed = False
        # mot de passe utilisable (si jamais on avait un unusable)
        if not u.has_usable_password():
            u.set_password(get_random_string(32)); changed = True
        # compléter les champs vides utiles
        if first_name and not u.first_name:
            u.first_name = first_name; changed = True
        if last_name and not u.last_name:
            u.last_name = last_name; changed = True
        # rôle neutre + rattachement
        if hasattr(u, "profile") and u.profile != User.Profile.CLIENT:
            u.profile = User.Profile.CLIENT; changed = True
        if hasattr(u, "company") and company and not u.company_id:
            u.company = company; changed = True
        if not u.is_active:
            u.is_active = True; changed = True
        if changed:
            u.save()
        return u, False

    # création
    u = User(
        username=email,           # AbstractUser -> username requis
        email=email,
        first_name=first_name or "",
        last_name=last_name or "",
        is_active=True,
    )
    if hasattr(u, "profile"):
        u.profile = User.Profile.CLIENT
    if hasattr(u, "company") and company:
        u.company = company
    u.set_password(get_random_string(32))
    u.save()
    return u, True


# ---------------------------
# Vues publiques
# ---------------------------

def company_presentation(request, slug: str):
    company = get_object_or_404(Company, slug=slug)
    form = ReferrerForm(company=company)

    # Récupère les 4 templates (ordre souhaité)
    order = ["SOUVENT", "MOYEN", "RARE", "TRES_RARE"]
    tpls = {t.bucket: t for t in RewardTemplate.objects.filter(company=company)}

    base_labels = []
    for b in order:
        lbl = (tpls.get(b).label or "").strip() if tpls.get(b) else ""
        base_labels.append(lbl or b.title())

    # 8 cases en répétant l’ordre (S, M, R, TR, S, M, R, TR)
    wheel_labels = (base_labels * ((8 + len(base_labels) - 1) // len(base_labels)))[:8]

    return render(request, "public/company_presentation.html", {
        "company": company,
        "form": form,
        "wheel_labels": wheel_labels,
    })

# public/views.py (extrait)
from django.shortcuts import get_object_or_404, render, redirect
from django.contrib import messages
from django.db import IntegrityError, transaction
from django.contrib.auth.forms import PasswordResetForm
from django.contrib.auth import get_user_model
from django.utils.crypto import get_random_string

from accounts.models import Company
from dashboard.models import Client
from .forms import ReferrerForm

def _ensure_referrer_user(*, email, company, first_name="", last_name=""):
    """Garantit un accounts.User avec mot de passe utilisable et profil 'CLIENT'."""
    User = get_user_model()
    email = (email or "").strip()
    if not email:
        return None, False

    u = User.objects.filter(email__iexact=email).first()
    if u:
        changed = False
        if not u.has_usable_password():
            u.set_password(get_random_string(32)); changed = True
        if first_name and not u.first_name:
            u.first_name = first_name; changed = True
        if last_name and not u.last_name:
            u.last_name = last_name; changed = True
        if hasattr(u, "profile") and u.profile != User.Profile.CLIENT:
            u.profile = User.Profile.CLIENT; changed = True
        if hasattr(u, "company") and company and not u.company_id:
            u.company = company; changed = True
        if not u.is_active:
            u.is_active = True; changed = True
        if changed:
            u.save()
        return u, False

    u = User(
        username=email,
        email=email,
        first_name=first_name or "",
        last_name=last_name or "",
        is_active=True,
    )
    if hasattr(u, "profile"):
        u.profile = User.Profile.CLIENT
    if hasattr(u, "company") and company:
        u.company = company
    u.set_password(get_random_string(32))
    u.save()
    return u, True


def _send_password_reset(request, email: str) -> bool:
    """Envoie l'email de réinitialisation si un User existe (comportement standard)."""
    if not email:
        return False
    frm = PasswordResetForm(data={"email": email})
    if not frm.is_valid():
        return False
    frm.save(
        request=request,
        use_https=request.is_secure(),
   
        subject_template_name="registration/password_reset_subject.txt",
        email_template_name="registration/password_reset_email.txt",
        html_email_template_name="registration/password_reset_email.html",
        from_email=settings.DEFAULT_FROM_EMAIL
    )
    return True


def referrer_register(request, slug: str):
    """
    Inscription d'un parrain depuis la page publique de présentation d'une entreprise.

    Règles métier :
      - Si l'e-mail correspond déjà à un parrain de cette entreprise -> ne recrée pas, mais envoie un e-mail de (ré)initialisation.
      - Si l'inscription est nouvelle -> crée le Client (parrain), puis crée/assure un accounts.User et envoie l'e-mail de (ré)initialisation.
      - Si le formulaire est invalide mais qu'un e-mail est fourni -> tente quand même d'assurer le compte user et d'envoyer l'e-mail.
      - En cas de race condition (IntegrityError) -> traite comme "déjà inscrit" et envoie l'e-mail.

    UX :
      - Succès (création) : message succès + info d'envoi e-mail -> redirect.
      - Déjà inscrit / invalide avec email : message info + redirect (ou render si on veut ré-afficher les erreurs).
    """
    company = get_object_or_404(Company, slug=slug)

    # GET → on renvoie vers la page de présentation (pas d'inscription en GET)
    if request.method != "POST":
        return redirect("public:company_presentation", slug=slug)

    form = ReferrerForm(request.POST, company=company)

    # Champs utiles (normalisés tôt)
    posted_email = (request.POST.get("email") or "").strip()
    posted_fn = (request.POST.get("first_name") or "").strip()
    posted_ln = (request.POST.get("last_name") or "").strip()

    if form.is_valid():
        # Est-ce déjà un parrain par e-mail ?
        already_by_email = bool(
            posted_email
            and Client.objects.filter(
                company=company, email__iexact=posted_email, is_referrer=True
            ).exists()
        )

        if not already_by_email:
            # Tentative de création du parrain
            ref = form.save(commit=False)
            ref.company = company
            ref.is_referrer = True

            try:
                with transaction.atomic():
                    ref.save()
            except IntegrityError:
                # Cas de concurrence/doublon : on bascule sur le flux "déjà inscrit"
                if posted_email:
                    _ensure_referrer_user(
                        email=posted_email, company=company,
                        first_name=posted_fn, last_name=posted_ln
                    )
                    _send_password_reset(request, posted_email)
                    messages.info(
                        request,
                        "Tu es déjà inscrit comme parrain. "
                        "Un e-mail de (ré)initialisation vient d’être envoyé s’il existe un compte."
                    )
                # On peut choisir de ré-afficher la page avec erreurs, mais le plus simple ici :
                return redirect("public:company_presentation", slug=slug)

            # Création OK → on assure le compte user puis on envoie le reset
            if posted_email:
                _ensure_referrer_user(
                    email=posted_email, company=company,
                    first_name=posted_fn, last_name=posted_ln
                )
                _send_password_reset(request, posted_email)

            messages.success(
                request,
                "Inscription confirmée. "
                "Un e-mail vient de t’être envoyé pour définir ton mot de passe."
            )
            return redirect("public:company_presentation", slug=slug)

        # already_by_email == True → on n’essaie pas de recréer, on envoie juste l’e-mail
        if posted_email:
            _ensure_referrer_user(
                email=posted_email, company=company,
                first_name=posted_fn, last_name=posted_ln
            )
            _send_password_reset(request, posted_email)

        messages.info(
            request,
            "Tu es déjà inscrit comme parrain. "
            "Un e-mail de (ré)initialisation vient d’être envoyé s’il existe un compte."
        )
        return redirect("public:company_presentation", slug=slug)

    # Formulaire invalide : si un e-mail a été fourni, on déclenche quand même le reset
    if posted_email:
        _ensure_referrer_user(
            email=posted_email, company=company,
            first_name=posted_fn, last_name=posted_ln
        )
        _send_password_reset(request, posted_email)
        messages.info(
            request,
            "Tu es déjà inscrit comme parrain (ou des informations sont invalides). "
            "Un e-mail de (ré)initialisation vient d’être envoyé s’il existe un compte."
        )

    # On ré-affiche la page avec les erreurs du formulaire
    return render(
        request,
        "public/company_presentation.html",
        {"company": company, "form": form, "form_errors": True},
    )




===== ./accounts/migrations/0002_company_logo_company_primary_color_and_more.py =====
# Generated by Django 5.0 on 2025-09-08 11:34

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.AddField(
            model_name='company',
            name='logo',
            field=models.ImageField(blank=True, null=True, upload_to='company_logos/'),
        ),
        migrations.AddField(
            model_name='company',
            name='primary_color',
            field=models.CharField(default='#ec4899', max_length=7, validators=[django.core.validators.RegexValidator(message='Couleur hex attendue, ex. #ec4899 ou #000', regex='^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$')]),
        ),
        migrations.AddField(
            model_name='company',
            name='secondary_color',
            field=models.CharField(default='#000000', max_length=7, validators=[django.core.validators.RegexValidator(message='Couleur hex attendue, ex. #ec4899 ou #000', regex='^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$')]),
        ),
        migrations.AddField(
            model_name='company',
            name='slogan',
            field=models.CharField(blank=True, max_length=255),
        ),
        migrations.AlterField(
            model_name='company',
            name='slug',
            field=models.SlugField(blank=True, max_length=160, unique=True),
        ),
    ]
===== ./accounts/migrations/__init__.py =====
===== ./accounts/migrations/0001_initial.py =====
# Generated by Django 5.0 on 2025-08-16 13:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('slug', models.SlugField(max_length=160, unique=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Entreprise',
                'verbose_name_plural': 'Entreprises',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile', models.CharField(choices=[('superadmin', 'Superadmin (plateforme)'), ('admin', 'Admin d’entreprise'), ('operateur', 'Opérateur'), ('client', 'Client (V1: non utilisable)')], default='client', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('company', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='accounts.company')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
===== ./accounts/signal.py =====
from django.db.models.signals import post_save
from django.dispatch import receiver
from accounts.models import Company
from rewards.services.probabilities import ensure_wheels_for_company

@receiver(post_save, sender=Company)
def init_probability_wheels(sender, instance: Company, created, **kwargs):
    if created:
        ensure_wheels_for_company(instance)


===== ./accounts/models.py =====
from django.contrib.auth.models import AbstractUser, PermissionsMixin
from django.db import models
from django.utils.translation import gettext_lazy as _
from django.utils.text import slugify

# accounts/models.py
from django.core.validators import RegexValidator
from django.db import models
from django.utils.text import slugify

hex_color_validator = RegexValidator(
    regex=r"^#([0-9A-Fa-f]{3}|[0-9A-Fa-f]{6})$",
    message="Couleur hex attendue, ex. #ec4899 ou #000",
)

class Company(models.Model):
    name = models.CharField(max_length=150, unique=True)
    # Rendez le slug "blank=True" pour pouvoir le laisser vide en admin et le laisser s'auto-remplir
    slug = models.SlugField(max_length=160, unique=True, blank=True)
    is_active = models.BooleanField(default=True)

    # --- Nouveaux champs (branding / présentation publique) ---
    slogan = models.CharField(max_length=255, blank=True)
    primary_color = models.CharField(
        max_length=7, default="#ec4899", validators=[hex_color_validator]
    )
    secondary_color = models.CharField(
        max_length=7, default="#000000", validators=[hex_color_validator]
    )
    logo = models.ImageField(upload_to="company_logos/", blank=True, null=True)
    # (facultatif) domaine dédié si un jour tu veux multi-domaine :
    # domain = models.CharField(max_length=255, blank=True, unique=True)

    def _build_unique_slug(self):
        base = slugify(self.name or "")
        slug = base or "entreprise"
        i = 1
        while Company.objects.filter(slug=slug).exclude(pk=self.pk).exists():
            i += 1
            slug = f"{base}-{i}"
        return slug

    def save(self, *args, **kwargs):
        # Auto-complète le slug s'il est vide (création ou slug effacé volontairement)
        if not self.slug:
            self.slug = self._build_unique_slug()
        super().save(*args, **kwargs)

    class Meta:
        verbose_name = "Entreprise"
        verbose_name_plural = "Entreprises"

    def __str__(self):
        return self.name



class User(AbstractUser, PermissionsMixin):
    class Profile(models.TextChoices):
        SUPERADMIN = "superadmin", "Superadmin (plateforme)"
        ADMIN = "admin", "Admin d’entreprise"
        OPERATEUR = "operateur", "Opérateur"
        CLIENT = "client", "Client (V1: non utilisable)"

    # Rôle
    profile = models.CharField(
        max_length=20,
        choices=Profile.choices,
        default=Profile.CLIENT,
    )

    # Rattachement éventuel à une entreprise (pas de company pour superadmin)
    company = models.ForeignKey(
        Company, on_delete=models.SET_NULL, null=True, blank=True, related_name="users"
    )

    # Contrainte business simple (optionnelle)
    def clean(self):
        from django.core.exceptions import ValidationError
        if self.profile == self.Profile.SUPERADMIN and self.company:
            raise ValidationError(_("Un superadmin ne doit pas être rattaché à une entreprise."))

    def is_superadmin(self) -> bool:
        return self.profile == self.Profile.SUPERADMIN

    def is_admin_entreprise(self) -> bool:
        return self.profile == self.Profile.ADMIN

    def is_operateur(self) -> bool:
        return self.profile == self.Profile.OPERATEUR

    def __str__(self):
        return f"{self.username} • {self.get_profile_display()}"
===== ./accounts/__init__.py =====
===== ./accounts/utils/password_reset.py =====
# accounts/utils/password_reset.py
from __future__ import annotations

from typing import Optional
from django.conf import settings
from django.contrib.auth.forms import PasswordResetForm


def send_password_reset_if_user_exists(
    request,
    email: str,
    *,
    subject_template: Optional[str] = "registration/password_reset_subject.txt",
    email_template: Optional[str] = "registration/password_reset_email.txt",
    html_email_template: Optional[str] = "registration/password_reset_email.html",
    from_email: Optional[str] = None,
) -> bool:
    """
    Envoie l'e-mail de réinitialisation SEULEMENT si un User actif avec mot de passe utilisable existe.
    Retourne True si l'e-mail a été effectivement tenté (au moins un destinataire).
    Exceptions SMTP non masquées (fail_silently=False) pour débogage.
    """
    email = (email or "").strip()
    if not email:
        return False

    form = PasswordResetForm(data={"email": email})
    if not form.is_valid():
        return False

    recipients = list(form.get_users(email))
    if not recipients:
        return False

    form.save(
        request=request,
        use_https=request.is_secure(),
        from_email=from_email or getattr(settings, "DEFAULT_FROM_EMAIL", None),
        subject_template_name=subject_template,
        email_template_name=email_template,
        html_email_template_name=html_email_template,
        fail_silently=False,
    )
    return True
===== ./accounts/apps.py =====
# accounts/apps.py
from django.apps import AppConfig

class AccountsConfig(AppConfig):
    default_auto_field = "django.db.models.BigAutoField"
    name = "accounts"
    verbose_name = "Comptes & Rôles"

 ===== ./accounts/forms.py =====
from django import forms
from django.contrib.auth.forms import UserCreationForm, UserChangeForm, AuthenticationForm
from .models import User, Company



class LoginForm(AuthenticationForm):
    username = forms.CharField(label="Nom d’utilisateur")
    password = forms.CharField(label="Mot de passe", widget=forms.PasswordInput)

class UserCreateForm(UserCreationForm):
    class Meta(UserCreationForm.Meta):
        model = User
        fields = ("username", "email", "first_name", "last_name", "profile", "company")

    def __init__(self, *args, **kwargs):
        self.request = kwargs.pop("request", None)   # <-- récupère request
        super().__init__(*args, **kwargs)

        if self.request and hasattr(self.request, "user"):
            u = self.request.user
            if u.is_superadmin():
                self.fields["company"].queryset = Company.objects.all()
            elif u.is_admin_entreprise():
                self.fields["company"].queryset = Company.objects.filter(pk=u.company_id)
                self.fields["company"].initial = u.company
                self.fields["company"].widget = forms.HiddenInput()  # <-- cache le champ pour l’admin
            else:
                self.fields["company"].queryset = Company.objects.none()

    def clean(self):
        cleaned = super().clean()
        profile = cleaned.get("profile")
        company = cleaned.get("company")
        if profile in ("admin", "operateur") and not company:
            self.add_error("company", "L’Admin/Opérateur doit être rattaché à une entreprise.")
        if profile == "superadmin" and company:
            self.add_error("company", "Le Superadmin ne doit pas être rattaché à une entreprise.")
        return cleaned


class UserUpdateForm(UserChangeForm):
    password = None
    class Meta:
        model = User
        fields = ("email", "first_name", "last_name", "profile", "company", "is_active")

    def __init__(self, *args, **kwargs):
        self.request = kwargs.pop("request", None)
        super().__init__(*args, **kwargs)
        if self.request and hasattr(self.request, "user"):
            u = self.request.user
            if u.is_superadmin():
                self.fields["company"].queryset = Company.objects.all()
            elif u.is_admin_entreprise():
                self.fields["company"].queryset = Company.objects.filter(pk=u.company_id)
            else:
                self.fields["company"].queryset = Company.objects.none()
===== ./accounts/admin.py =====
from django.contrib import admin
from django.contrib.auth.admin import UserAdmin as DjangoUserAdmin
from .models import User, Company

@admin.register(Company)
class CompanyAdmin(admin.ModelAdmin):
    list_display = ("name", "slug", "is_active")
    search_fields = ("name", "slug")
    list_filter = ("is_active",)
    prepopulated_fields = {"slug": ("name",)}

@admin.register(User)
class UserAdmin(DjangoUserAdmin):
    fieldsets = (
        (None, {'fields': ('username', 'password')}),
        ("Informations personnelles", {'fields': ('first_name', 'last_name', 'email')}),
        ("Rôle & Entreprise", {'fields': ('profile', 'company')}),
        ("Permissions", {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups', 'user_permissions')}),
        ("Dates importantes", {'fields': ('last_login', 'date_joined')}),
    )
    add_fieldsets = (
        (None, {'classes': ('wide',), 'fields': ('username', 'password1', 'password2', 'profile', 'company')}),
    )
    list_display = ('username', 'email', 'profile', 'company', 'is_active', 'is_staff')
    list_filter = ('profile', 'company', 'is_active', 'is_staff')
    search_fields = ('username', 'email', 'first_name', 'last_name')
    ordering = ('username',)
===== ./accounts/permissions.py =====
from django.core.exceptions import PermissionDenied

def require_superadmin(user):
    if not user.is_authenticated or not user.is_superadmin():
        raise PermissionDenied("Réservé au Superadmin.")

def require_company_admin_or_superadmin(user):
    if not user.is_authenticated:
        raise PermissionDenied()
    if user.is_superadmin():
        return
    if not user.is_admin_entreprise():
        raise PermissionDenied("Réservé à l’Admin d’entreprise (ou Superadmin).")
===== ./accounts/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./accounts/urls.py =====
from django.urls import path
from .views import (
    SignInView, logout_view,
    UserListView, UserCreateView, UserUpdateView, UserDeleteView,
    company_list, company_create, company_update,company_delete 
)
from . import views

app_name = "accounts"

urlpatterns = [
    # Auth
    path("login/", SignInView.as_view(), name="login"),
    path("logout/", logout_view, name="logout"),

    # Users CRUD
    path("users/", UserListView.as_view(), name="user_list"),
    path("users/create/", UserCreateView.as_view(), name="user_create"),
    path("users/<int:pk>/edit/", UserUpdateView.as_view(), name="user_edit"),
    path("users/<int:pk>/delete/", UserDeleteView.as_view(), name="user_delete"),

    # Companies (superadmin only)
    path("companies/", company_list, name="company_list"),
    path("companies/create/", company_create, name="company_create"),
    path("companies/<int:pk>/edit/", views.company_update, name="company_update"),
    path("companies/<int:pk>/delete/", views.company_delete, name="company_delete"),

]
===== ./accounts/views.py =====
from django.contrib.auth import logout
from django.contrib.auth.decorators import login_required
from django.contrib.auth.views import LoginView, LogoutView
from django.shortcuts import get_object_or_404, redirect, render
from django.urls import reverse, reverse_lazy
from django.views.generic import ListView, CreateView, UpdateView, DeleteView
from django.utils.decorators import method_decorator
from django.views.decorators.http import require_http_methods

from .forms import UserCreateForm, UserUpdateForm, LoginForm
from .models import User, Company
from .permissions import require_superadmin, require_company_admin_or_superadmin
from django.db.models import Q


@require_http_methods(["GET", "POST"])
def logout_view(request):
    logout(request)
    return redirect("accounts:login")


# --- Auth ---
class SignInView(LoginView):
    template_name = "accounts/login.html"
    authentication_form = LoginForm

class SignOutView(LogoutView):
    next_page = reverse_lazy("accounts:login")

# --- Utilities ---

def qs_users_for(request_user):
    """Restreint le queryset selon le rôle."""
    if request_user.is_superadmin():
        return User.objects.all()
    if request_user.is_admin_entreprise():
        return User.objects.filter(company=request_user.company).exclude(profile="superadmin")
    return User.objects.none()

# --- Users CRUD ---

@method_decorator(login_required, name="dispatch")
class UserListView(ListView):
    template_name = "accounts/users/list.html"
    context_object_name = "users"
    paginate_by = 20

    def get_queryset(self):
        qs = qs_users_for(self.request.user).select_related("company").order_by("username")

        # recherche texte
        q = (self.request.GET.get("q") or "").strip()
        if q:
            qs = qs.filter(
                Q(username__icontains=q) |
                Q(email__icontains=q) |
                Q(first_name__icontains=q) |
                Q(last_name__icontains=q)
            )

        # filtre entreprise (superadmin uniquement)
        company_id = (self.request.GET.get("company") or "").strip()
        if company_id and getattr(self.request.user, "is_superadmin", lambda: False)():
            qs = qs.filter(company_id=company_id)

        return qs

    def get_context_data(self, **kwargs):
        ctx = super().get_context_data(**kwargs)
        # valeurs courantes des filtres pour garder l’UI en phase
        ctx["current_q"] = (self.request.GET.get("q") or "").strip()
        ctx["current_company"] = (self.request.GET.get("company") or "").strip()
        # liste d’entreprises uniquement pour superadmin → permet d’afficher le <select> dans la topbar
        if getattr(self.request.user, "is_superadmin", lambda: False)():
            ctx["companies_for_filter"] = Company.objects.order_by("name")
        return ctx

    
@method_decorator(login_required, name="dispatch")
class UserCreateView(CreateView):
    template_name = "accounts/users/form.html"
    form_class = UserCreateForm

    def dispatch(self, request, *args, **kwargs):
        require_company_admin_or_superadmin(request.user)
        return super().dispatch(request, *args, **kwargs)

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs["request"] = self.request           # <-- pour filtrer le champ company
        return kwargs

    def form_valid(self, form):
        # Un admin ne peut créer que dans SA company (et pas de superadmin)
        if self.request.user.is_admin_entreprise():
            form.instance.company = self.request.user.company   # <-- attribution forcée
            if form.cleaned_data.get("profile") == "superadmin":
                form.add_error("profile", "Création de Superadmin interdite.")
                return self.form_invalid(form)
        return super().form_valid(form)

    def get_success_url(self):
        return reverse("accounts:user_list")


@method_decorator(login_required, name="dispatch")
class UserUpdateView(UpdateView):
    template_name = "accounts/users/form.html"
    form_class = UserUpdateForm
    model = User

    def dispatch(self, request, *args, **kwargs):
        require_company_admin_or_superadmin(request.user)
        return super().dispatch(request, *args, **kwargs)

    def get_form_kwargs(self):
        kwargs = super().get_form_kwargs()
        kwargs["request"] = self.request           # <-- pour limiter la liste des companies en édition
        return kwargs

    def get_object(self, queryset=None):
        obj = super().get_object(queryset)
        if self.request.user.is_admin_entreprise():
            if obj.company_id != self.request.user.company_id or obj.profile == "superadmin":
                from django.core.exceptions import PermissionDenied
                raise PermissionDenied("Accès refusé.")
        return obj

    def get_success_url(self):
        return reverse("accounts:user_list")

@method_decorator(login_required, name="dispatch")
class UserDeleteView(DeleteView):
    template_name = "accounts/users/confirm_delete.html"
    model = User

    def dispatch(self, request, *args, **kwargs):
        require_company_admin_or_superadmin(request.user)
        return super().dispatch(request, *args, **kwargs)

    def get_object(self, queryset=None):
        obj = super().get_object(queryset)
        if self.request.user.is_admin_entreprise():
            if obj.company_id != self.request.user.company_id or obj.profile == "superadmin":
                from django.core.exceptions import PermissionDenied
                raise PermissionDenied("Accès refusé.")
        return obj

    def get_success_url(self):
        return reverse("accounts:user_list")

# --- Company CRUD (réservé superadmin) ---

@login_required
def company_list(request):
    require_superadmin(request.user)
    companies = Company.objects.all().order_by("name")
    return render(request, "accounts/compagnies/list.html", {"companies": companies})

@login_required
def company_create(request):
    from django.forms import ModelForm, TextInput, CheckboxInput
    require_superadmin(request.user)

    class CompanyForm(ModelForm):
        class Meta:
            model = Company
            fields = ("name", "is_active")
            widgets = {
                "name": TextInput(attrs={"class": "form-control", "placeholder": "Nom"}),
                "is_active": CheckboxInput(attrs={"class": "form-check-input"}),
            }

    if request.method == "POST":
        form = CompanyForm(request.POST)
        if form.is_valid():
            form.save()
            return redirect("accounts:company_list")
    else:
        form = CompanyForm()
    return render(request, "accounts/compagnies/form.html", {"form": form})

@login_required
def company_update(request, pk):
    from django.forms import ModelForm
    require_superadmin(request.user)

    class CompanyForm(ModelForm):
        class Meta:
            model = Company
            fields = ("name", "is_active")

    company = get_object_or_404(Company, pk=pk)
    if request.method == "POST":
        form = CompanyForm(request.POST, instance=company)
        if form.is_valid():
            form.save()
            return redirect("accounts:company_list")
    else:
        form = CompanyForm(instance=company)
    return render(request, "accounts/compagnies/form.html", {"form": form, "company": company})


@login_required
def company_delete(request, pk):
    require_superadmin(request.user)
    company = get_object_or_404(Company, pk=pk)

    if request.method == "POST":
        company.delete()
        return redirect("accounts:company_list")

    return render(request, "accounts/compagnies/confirm_delete.html", {"company": company})
===== ./static/bootstrap/css/bootstrap.min.css =====
@charset "UTF-8";/*!
 * Bootstrap  v5.3.3 (https://getbootstrap.com/)
 * Copyright 2011-2024 The Bootstrap Authors
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
 */:root,[data-bs-theme=light]{--bs-blue:#0d6efd;--bs-indigo:#6610f2;--bs-purple:#6f42c1;--bs-pink:#d63384;--bs-red:#dc3545;--bs-orange:#fd7e14;--bs-yellow:#ffc107;--bs-green:#198754;--bs-teal:#20c997;--bs-cyan:#0dcaf0;--bs-black:#000;--bs-white:#fff;--bs-gray:#6c757d;--bs-gray-dark:#343a40;--bs-gray-100:#f8f9fa;--bs-gray-200:#e9ecef;--bs-gray-300:#dee2e6;--bs-gray-400:#ced4da;--bs-gray-500:#adb5bd;--bs-gray-600:#6c757d;--bs-gray-700:#495057;--bs-gray-800:#343a40;--bs-gray-900:#212529;--bs-primary:#0d6efd;--bs-secondary:#6c757d;--bs-success:#198754;--bs-info:#0dcaf0;--bs-warning:#ffc107;--bs-danger:#dc3545;--bs-light:#f8f9fa;--bs-dark:#212529;--bs-primary-rgb:13,110,253;--bs-secondary-rgb:108,117,125;--bs-success-rgb:25,135,84;--bs-info-rgb:13,202,240;--bs-warning-rgb:255,193,7;--bs-danger-rgb:220,53,69;--bs-light-rgb:248,249,250;--bs-dark-rgb:33,37,41;--bs-primary-text-emphasis:#052c65;--bs-secondary-text-emphasis:#2b2f32;--bs-success-text-emphasis:#0a3622;--bs-info-text-emphasis:#055160;--bs-warning-text-emphasis:#664d03;--bs-danger-text-emphasis:#58151c;--bs-light-text-emphasis:#495057;--bs-dark-text-emphasis:#495057;--bs-primary-bg-subtle:#cfe2ff;--bs-secondary-bg-subtle:#e2e3e5;--bs-success-bg-subtle:#d1e7dd;--bs-info-bg-subtle:#cff4fc;--bs-warning-bg-subtle:#fff3cd;--bs-danger-bg-subtle:#f8d7da;--bs-light-bg-subtle:#fcfcfd;--bs-dark-bg-subtle:#ced4da;--bs-primary-border-subtle:#9ec5fe;--bs-secondary-border-subtle:#c4c8cb;--bs-success-border-subtle:#a3cfbb;--bs-info-border-subtle:#9eeaf9;--bs-warning-border-subtle:#ffe69c;--bs-danger-border-subtle:#f1aeb5;--bs-light-border-subtle:#e9ecef;--bs-dark-border-subtle:#adb5bd;--bs-white-rgb:255,255,255;--bs-black-rgb:0,0,0;--bs-font-sans-serif:system-ui,-apple-system,"Segoe UI",Roboto,"Helvetica Neue","Noto Sans","Liberation Sans",Arial,sans-serif,"Apple Color Emoji","Segoe UI Emoji","Segoe UI Symbol","Noto Color Emoji";--bs-font-monospace:SFMono-Regular,Menlo,Monaco,Consolas,"Liberation Mono","Courier New",monospace;--bs-gradient:linear-gradient(180deg, rgba(255, 255, 255, 0.15), rgba(255, 255, 255, 0));--bs-body-font-family:var(--bs-font-sans-serif);--bs-body-font-size:1rem;--bs-body-font-weight:400;--bs-body-line-height:1.5;--bs-body-color:#212529;--bs-body-color-rgb:33,37,41;--bs-body-bg:#fff;--bs-body-bg-rgb:255,255,255;--bs-emphasis-color:#000;--bs-emphasis-color-rgb:0,0,0;--bs-secondary-color:rgba(33, 37, 41, 0.75);--bs-secondary-color-rgb:33,37,41;--bs-secondary-bg:#e9ecef;--bs-secondary-bg-rgb:233,236,239;--bs-tertiary-color:rgba(33, 37, 41, 0.5);--bs-tertiary-color-rgb:33,37,41;--bs-tertiary-bg:#f8f9fa;--bs-tertiary-bg-rgb:248,249,250;--bs-heading-color:inherit;--bs-link-color:#0d6efd;--bs-link-color-rgb:13,110,253;--bs-link-decoration:underline;--bs-link-hover-color:#0a58ca;--bs-link-hover-color-rgb:10,88,202;--bs-code-color:#d63384;--bs-highlight-color:#212529;--bs-highlight-bg:#fff3cd;--bs-border-width:1px;--bs-border-style:solid;--bs-border-color:#dee2e6;--bs-border-color-translucent:rgba(0, 0, 0, 0.175);--bs-border-radius:0.375rem;--bs-border-radius-sm:0.25rem;--bs-border-radius-lg:0.5rem;--bs-border-radius-xl:1rem;--bs-border-radius-xxl:2rem;--bs-border-radius-2xl:var(--bs-border-radius-xxl);--bs-border-radius-pill:50rem;--bs-box-shadow:0 0.5rem 1rem rgba(0, 0, 0, 0.15);--bs-box-shadow-sm:0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);--bs-box-shadow-lg:0 1rem 3rem rgba(0, 0, 0, 0.175);--bs-box-shadow-inset:inset 0 1px 2px rgba(0, 0, 0, 0.075);--bs-focus-ring-width:0.25rem;--bs-focus-ring-opacity:0.25;--bs-focus-ring-color:rgba(13, 110, 253, 0.25);--bs-form-valid-color:#198754;--bs-form-valid-border-color:#198754;--bs-form-invalid-color:#dc3545;--bs-form-invalid-border-color:#dc3545}[data-bs-theme=dark]{color-scheme:dark;--bs-body-color:#dee2e6;--bs-body-color-rgb:222,226,230;--bs-body-bg:#212529;--bs-body-bg-rgb:33,37,41;--bs-emphasis-color:#fff;--bs-emphasis-color-rgb:255,255,255;--bs-secondary-color:rgba(222, 226, 230, 0.75);--bs-secondary-color-rgb:222,226,230;--bs-secondary-bg:#343a40;--bs-secondary-bg-rgb:52,58,64;--bs-tertiary-color:rgba(222, 226, 230, 0.5);--bs-tertiary-color-rgb:222,226,230;--bs-tertiary-bg:#2b3035;--bs-tertiary-bg-rgb:43,48,53;--bs-primary-text-emphasis:#6ea8fe;--bs-secondary-text-emphasis:#a7acb1;--bs-success-text-emphasis:#75b798;--bs-info-text-emphasis:#6edff6;--bs-warning-text-emphasis:#ffda6a;--bs-danger-text-emphasis:#ea868f;--bs-light-text-emphasis:#f8f9fa;--bs-dark-text-emphasis:#dee2e6;--bs-primary-bg-subtle:#031633;--bs-secondary-bg-subtle:#161719;--bs-success-bg-subtle:#051b11;--bs-info-bg-subtle:#032830;--bs-warning-bg-subtle:#332701;--bs-danger-bg-subtle:#2c0b0e;--bs-light-bg-subtle:#343a40;--bs-dark-bg-subtle:#1a1d20;--bs-primary-border-subtle:#084298;--bs-secondary-border-subtle:#41464b;--bs-success-border-subtle:#0f5132;--bs-info-border-subtle:#087990;--bs-warning-border-subtle:#997404;--bs-danger-border-subtle:#842029;--bs-light-border-subtle:#495057;--bs-dark-border-subtle:#343a40;--bs-heading-color:inherit;--bs-link-color:#6ea8fe;--bs-link-hover-color:#8bb9fe;--bs-link-color-rgb:110,168,254;--bs-link-hover-color-rgb:139,185,254;--bs-code-color:#e685b5;--bs-highlight-color:#dee2e6;--bs-highlight-bg:#664d03;--bs-border-color:#495057;--bs-border-color-translucent:rgba(255, 255, 255, 0.15);--bs-form-valid-color:#75b798;--bs-form-valid-border-color:#75b798;--bs-form-invalid-color:#ea868f;--bs-form-invalid-border-color:#ea868f}*,::after,::before{box-sizing:border-box}@media (prefers-reduced-motion:no-preference){:root{scroll-behavior:smooth}}body{margin:0;font-family:var(--bs-body-font-family);font-size:var(--bs-body-font-size);font-weight:var(--bs-body-font-weight);line-height:var(--bs-body-line-height);color:var(--bs-body-color);text-align:var(--bs-body-text-align);background-color:var(--bs-body-bg);-webkit-text-size-adjust:100%;-webkit-tap-highlight-color:transparent}hr{margin:1rem 0;color:inherit;border:0;border-top:var(--bs-border-width) solid;opacity:.25}.h1,.h2,.h3,.h4,.h5,.h6,h1,h2,h3,h4,h5,h6{margin-top:0;margin-bottom:.5rem;font-weight:500;line-height:1.2;color:var(--bs-heading-color)}.h1,h1{font-size:calc(1.375rem + 1.5vw)}@media (min-width:1200px){.h1,h1{font-size:2.5rem}}.h2,h2{font-size:calc(1.325rem + .9vw)}@media (min-width:1200px){.h2,h2{font-size:2rem}}.h3,h3{font-size:calc(1.3rem + .6vw)}@media (min-width:1200px){.h3,h3{font-size:1.75rem}}.h4,h4{font-size:calc(1.275rem + .3vw)}@media (min-width:1200px){.h4,h4{font-size:1.5rem}}.h5,h5{font-size:1.25rem}.h6,h6{font-size:1rem}p{margin-top:0;margin-bottom:1rem}abbr[title]{-webkit-text-decoration:underline dotted;text-decoration:underline dotted;cursor:help;-webkit-text-decoration-skip-ink:none;text-decoration-skip-ink:none}address{margin-bottom:1rem;font-style:normal;line-height:inherit}ol,ul{padding-left:2rem}dl,ol,ul{margin-top:0;margin-bottom:1rem}ol ol,ol ul,ul ol,ul ul{margin-bottom:0}dt{font-weight:700}dd{margin-bottom:.5rem;margin-left:0}blockquote{margin:0 0 1rem}b,strong{font-weight:bolder}.small,small{font-size:.875em}.mark,mark{padding:.1875em;color:var(--bs-highlight-color);background-color:var(--bs-highlight-bg)}sub,sup{position:relative;font-size:.75em;line-height:0;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}a{color:rgba(var(--bs-link-color-rgb),var(--bs-link-opacity,1));text-decoration:underline}a:hover{--bs-link-color-rgb:var(--bs-link-hover-color-rgb)}a:not([href]):not([class]),a:not([href]):not([class]):hover{color:inherit;text-decoration:none}code,kbd,pre,samp{font-family:var(--bs-font-monospace);font-size:1em}pre{display:block;margin-top:0;margin-bottom:1rem;overflow:auto;font-size:.875em}pre code{font-size:inherit;color:inherit;word-break:normal}code{font-size:.875em;color:var(--bs-code-color);word-wrap:break-word}a>code{color:inherit}kbd{padding:.1875rem .375rem;font-size:.875em;color:var(--bs-body-bg);background-color:var(--bs-body-color);border-radius:.25rem}kbd kbd{padding:0;font-size:1em}figure{margin:0 0 1rem}img,svg{vertical-align:middle}table{caption-side:bottom;border-collapse:collapse}caption{padding-top:.5rem;padding-bottom:.5rem;color:var(--bs-secondary-color);text-align:left}th{text-align:inherit;text-align:-webkit-match-parent}tbody,td,tfoot,th,thead,tr{border-color:inherit;border-style:solid;border-width:0}label{display:inline-block}button{border-radius:0}button:focus:not(:focus-visible){outline:0}button,input,optgroup,select,textarea{margin:0;font-family:inherit;font-size:inherit;line-height:inherit}button,select{text-transform:none}[role=button]{cursor:pointer}select{word-wrap:normal}select:disabled{opacity:1}[list]:not([type=date]):not([type=datetime-local]):not([type=month]):not([type=week]):not([type=time])::-webkit-calendar-picker-indicator{display:none!important}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]:not(:disabled),[type=reset]:not(:disabled),[type=submit]:not(:disabled),button:not(:disabled){cursor:pointer}::-moz-focus-inner{padding:0;border-style:none}textarea{resize:vertical}fieldset{min-width:0;padding:0;margin:0;border:0}legend{float:left;width:100%;padding:0;margin-bottom:.5rem;font-size:calc(1.275rem + .3vw);line-height:inherit}@media (min-width:1200px){legend{font-size:1.5rem}}legend+*{clear:left}::-webkit-datetime-edit-day-field,::-webkit-datetime-edit-fields-wrapper,::-webkit-datetime-edit-hour-field,::-webkit-datetime-edit-minute,::-webkit-datetime-edit-month-field,::-webkit-datetime-edit-text,::-webkit-datetime-edit-year-field{padding:0}::-webkit-inner-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}::-webkit-search-decoration{-webkit-appearance:none}::-webkit-color-swatch-wrapper{padding:0}::-webkit-file-upload-button{font:inherit;-webkit-appearance:button}::file-selector-button{font:inherit;-webkit-appearance:button}output{display:inline-block}iframe{border:0}summary{display:list-item;cursor:pointer}progress{vertical-align:baseline}[hidden]{display:none!important}.lead{font-size:1.25rem;font-weight:300}.display-1{font-size:calc(1.625rem + 4.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-1{font-size:5rem}}.display-2{font-size:calc(1.575rem + 3.9vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-2{font-size:4.5rem}}.display-3{font-size:calc(1.525rem + 3.3vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-3{font-size:4rem}}.display-4{font-size:calc(1.475rem + 2.7vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-4{font-size:3.5rem}}.display-5{font-size:calc(1.425rem + 2.1vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-5{font-size:3rem}}.display-6{font-size:calc(1.375rem + 1.5vw);font-weight:300;line-height:1.2}@media (min-width:1200px){.display-6{font-size:2.5rem}}.list-unstyled{padding-left:0;list-style:none}.list-inline{padding-left:0;list-style:none}.list-inline-item{display:inline-block}.list-inline-item:not(:last-child){margin-right:.5rem}.initialism{font-size:.875em;text-transform:uppercase}.blockquote{margin-bottom:1rem;font-size:1.25rem}.blockquote>:last-child{margin-bottom:0}.blockquote-footer{margin-top:-1rem;margin-bottom:1rem;font-size:.875em;color:#6c757d}.blockquote-footer::before{content:"— "}.img-fluid{max-width:100%;height:auto}.img-thumbnail{padding:.25rem;background-color:var(--bs-body-bg);border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);max-width:100%;height:auto}.figure{display:inline-block}.figure-img{margin-bottom:.5rem;line-height:1}.figure-caption{font-size:.875em;color:var(--bs-secondary-color)}.container,.container-fluid,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{--bs-gutter-x:1.5rem;--bs-gutter-y:0;width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-right:auto;margin-left:auto}@media (min-width:576px){.container,.container-sm{max-width:540px}}@media (min-width:768px){.container,.container-md,.container-sm{max-width:720px}}@media (min-width:992px){.container,.container-lg,.container-md,.container-sm{max-width:960px}}@media (min-width:1200px){.container,.container-lg,.container-md,.container-sm,.container-xl{max-width:1140px}}@media (min-width:1400px){.container,.container-lg,.container-md,.container-sm,.container-xl,.container-xxl{max-width:1320px}}:root{--bs-breakpoint-xs:0;--bs-breakpoint-sm:576px;--bs-breakpoint-md:768px;--bs-breakpoint-lg:992px;--bs-breakpoint-xl:1200px;--bs-breakpoint-xxl:1400px}.row{--bs-gutter-x:1.5rem;--bs-gutter-y:0;display:flex;flex-wrap:wrap;margin-top:calc(-1 * var(--bs-gutter-y));margin-right:calc(-.5 * var(--bs-gutter-x));margin-left:calc(-.5 * var(--bs-gutter-x))}.row>*{flex-shrink:0;width:100%;max-width:100%;padding-right:calc(var(--bs-gutter-x) * .5);padding-left:calc(var(--bs-gutter-x) * .5);margin-top:var(--bs-gutter-y)}.col{flex:1 0 0%}.row-cols-auto>*{flex:0 0 auto;width:auto}.row-cols-1>*{flex:0 0 auto;width:100%}.row-cols-2>*{flex:0 0 auto;width:50%}.row-cols-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-4>*{flex:0 0 auto;width:25%}.row-cols-5>*{flex:0 0 auto;width:20%}.row-cols-6>*{flex:0 0 auto;width:16.66666667%}.col-auto{flex:0 0 auto;width:auto}.col-1{flex:0 0 auto;width:8.33333333%}.col-2{flex:0 0 auto;width:16.66666667%}.col-3{flex:0 0 auto;width:25%}.col-4{flex:0 0 auto;width:33.33333333%}.col-5{flex:0 0 auto;width:41.66666667%}.col-6{flex:0 0 auto;width:50%}.col-7{flex:0 0 auto;width:58.33333333%}.col-8{flex:0 0 auto;width:66.66666667%}.col-9{flex:0 0 auto;width:75%}.col-10{flex:0 0 auto;width:83.33333333%}.col-11{flex:0 0 auto;width:91.66666667%}.col-12{flex:0 0 auto;width:100%}.offset-1{margin-left:8.33333333%}.offset-2{margin-left:16.66666667%}.offset-3{margin-left:25%}.offset-4{margin-left:33.33333333%}.offset-5{margin-left:41.66666667%}.offset-6{margin-left:50%}.offset-7{margin-left:58.33333333%}.offset-8{margin-left:66.66666667%}.offset-9{margin-left:75%}.offset-10{margin-left:83.33333333%}.offset-11{margin-left:91.66666667%}.g-0,.gx-0{--bs-gutter-x:0}.g-0,.gy-0{--bs-gutter-y:0}.g-1,.gx-1{--bs-gutter-x:0.25rem}.g-1,.gy-1{--bs-gutter-y:0.25rem}.g-2,.gx-2{--bs-gutter-x:0.5rem}.g-2,.gy-2{--bs-gutter-y:0.5rem}.g-3,.gx-3{--bs-gutter-x:1rem}.g-3,.gy-3{--bs-gutter-y:1rem}.g-4,.gx-4{--bs-gutter-x:1.5rem}.g-4,.gy-4{--bs-gutter-y:1.5rem}.g-5,.gx-5{--bs-gutter-x:3rem}.g-5,.gy-5{--bs-gutter-y:3rem}@media (min-width:576px){.col-sm{flex:1 0 0%}.row-cols-sm-auto>*{flex:0 0 auto;width:auto}.row-cols-sm-1>*{flex:0 0 auto;width:100%}.row-cols-sm-2>*{flex:0 0 auto;width:50%}.row-cols-sm-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-sm-4>*{flex:0 0 auto;width:25%}.row-cols-sm-5>*{flex:0 0 auto;width:20%}.row-cols-sm-6>*{flex:0 0 auto;width:16.66666667%}.col-sm-auto{flex:0 0 auto;width:auto}.col-sm-1{flex:0 0 auto;width:8.33333333%}.col-sm-2{flex:0 0 auto;width:16.66666667%}.col-sm-3{flex:0 0 auto;width:25%}.col-sm-4{flex:0 0 auto;width:33.33333333%}.col-sm-5{flex:0 0 auto;width:41.66666667%}.col-sm-6{flex:0 0 auto;width:50%}.col-sm-7{flex:0 0 auto;width:58.33333333%}.col-sm-8{flex:0 0 auto;width:66.66666667%}.col-sm-9{flex:0 0 auto;width:75%}.col-sm-10{flex:0 0 auto;width:83.33333333%}.col-sm-11{flex:0 0 auto;width:91.66666667%}.col-sm-12{flex:0 0 auto;width:100%}.offset-sm-0{margin-left:0}.offset-sm-1{margin-left:8.33333333%}.offset-sm-2{margin-left:16.66666667%}.offset-sm-3{margin-left:25%}.offset-sm-4{margin-left:33.33333333%}.offset-sm-5{margin-left:41.66666667%}.offset-sm-6{margin-left:50%}.offset-sm-7{margin-left:58.33333333%}.offset-sm-8{margin-left:66.66666667%}.offset-sm-9{margin-left:75%}.offset-sm-10{margin-left:83.33333333%}.offset-sm-11{margin-left:91.66666667%}.g-sm-0,.gx-sm-0{--bs-gutter-x:0}.g-sm-0,.gy-sm-0{--bs-gutter-y:0}.g-sm-1,.gx-sm-1{--bs-gutter-x:0.25rem}.g-sm-1,.gy-sm-1{--bs-gutter-y:0.25rem}.g-sm-2,.gx-sm-2{--bs-gutter-x:0.5rem}.g-sm-2,.gy-sm-2{--bs-gutter-y:0.5rem}.g-sm-3,.gx-sm-3{--bs-gutter-x:1rem}.g-sm-3,.gy-sm-3{--bs-gutter-y:1rem}.g-sm-4,.gx-sm-4{--bs-gutter-x:1.5rem}.g-sm-4,.gy-sm-4{--bs-gutter-y:1.5rem}.g-sm-5,.gx-sm-5{--bs-gutter-x:3rem}.g-sm-5,.gy-sm-5{--bs-gutter-y:3rem}}@media (min-width:768px){.col-md{flex:1 0 0%}.row-cols-md-auto>*{flex:0 0 auto;width:auto}.row-cols-md-1>*{flex:0 0 auto;width:100%}.row-cols-md-2>*{flex:0 0 auto;width:50%}.row-cols-md-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-md-4>*{flex:0 0 auto;width:25%}.row-cols-md-5>*{flex:0 0 auto;width:20%}.row-cols-md-6>*{flex:0 0 auto;width:16.66666667%}.col-md-auto{flex:0 0 auto;width:auto}.col-md-1{flex:0 0 auto;width:8.33333333%}.col-md-2{flex:0 0 auto;width:16.66666667%}.col-md-3{flex:0 0 auto;width:25%}.col-md-4{flex:0 0 auto;width:33.33333333%}.col-md-5{flex:0 0 auto;width:41.66666667%}.col-md-6{flex:0 0 auto;width:50%}.col-md-7{flex:0 0 auto;width:58.33333333%}.col-md-8{flex:0 0 auto;width:66.66666667%}.col-md-9{flex:0 0 auto;width:75%}.col-md-10{flex:0 0 auto;width:83.33333333%}.col-md-11{flex:0 0 auto;width:91.66666667%}.col-md-12{flex:0 0 auto;width:100%}.offset-md-0{margin-left:0}.offset-md-1{margin-left:8.33333333%}.offset-md-2{margin-left:16.66666667%}.offset-md-3{margin-left:25%}.offset-md-4{margin-left:33.33333333%}.offset-md-5{margin-left:41.66666667%}.offset-md-6{margin-left:50%}.offset-md-7{margin-left:58.33333333%}.offset-md-8{margin-left:66.66666667%}.offset-md-9{margin-left:75%}.offset-md-10{margin-left:83.33333333%}.offset-md-11{margin-left:91.66666667%}.g-md-0,.gx-md-0{--bs-gutter-x:0}.g-md-0,.gy-md-0{--bs-gutter-y:0}.g-md-1,.gx-md-1{--bs-gutter-x:0.25rem}.g-md-1,.gy-md-1{--bs-gutter-y:0.25rem}.g-md-2,.gx-md-2{--bs-gutter-x:0.5rem}.g-md-2,.gy-md-2{--bs-gutter-y:0.5rem}.g-md-3,.gx-md-3{--bs-gutter-x:1rem}.g-md-3,.gy-md-3{--bs-gutter-y:1rem}.g-md-4,.gx-md-4{--bs-gutter-x:1.5rem}.g-md-4,.gy-md-4{--bs-gutter-y:1.5rem}.g-md-5,.gx-md-5{--bs-gutter-x:3rem}.g-md-5,.gy-md-5{--bs-gutter-y:3rem}}@media (min-width:992px){.col-lg{flex:1 0 0%}.row-cols-lg-auto>*{flex:0 0 auto;width:auto}.row-cols-lg-1>*{flex:0 0 auto;width:100%}.row-cols-lg-2>*{flex:0 0 auto;width:50%}.row-cols-lg-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-lg-4>*{flex:0 0 auto;width:25%}.row-cols-lg-5>*{flex:0 0 auto;width:20%}.row-cols-lg-6>*{flex:0 0 auto;width:16.66666667%}.col-lg-auto{flex:0 0 auto;width:auto}.col-lg-1{flex:0 0 auto;width:8.33333333%}.col-lg-2{flex:0 0 auto;width:16.66666667%}.col-lg-3{flex:0 0 auto;width:25%}.col-lg-4{flex:0 0 auto;width:33.33333333%}.col-lg-5{flex:0 0 auto;width:41.66666667%}.col-lg-6{flex:0 0 auto;width:50%}.col-lg-7{flex:0 0 auto;width:58.33333333%}.col-lg-8{flex:0 0 auto;width:66.66666667%}.col-lg-9{flex:0 0 auto;width:75%}.col-lg-10{flex:0 0 auto;width:83.33333333%}.col-lg-11{flex:0 0 auto;width:91.66666667%}.col-lg-12{flex:0 0 auto;width:100%}.offset-lg-0{margin-left:0}.offset-lg-1{margin-left:8.33333333%}.offset-lg-2{margin-left:16.66666667%}.offset-lg-3{margin-left:25%}.offset-lg-4{margin-left:33.33333333%}.offset-lg-5{margin-left:41.66666667%}.offset-lg-6{margin-left:50%}.offset-lg-7{margin-left:58.33333333%}.offset-lg-8{margin-left:66.66666667%}.offset-lg-9{margin-left:75%}.offset-lg-10{margin-left:83.33333333%}.offset-lg-11{margin-left:91.66666667%}.g-lg-0,.gx-lg-0{--bs-gutter-x:0}.g-lg-0,.gy-lg-0{--bs-gutter-y:0}.g-lg-1,.gx-lg-1{--bs-gutter-x:0.25rem}.g-lg-1,.gy-lg-1{--bs-gutter-y:0.25rem}.g-lg-2,.gx-lg-2{--bs-gutter-x:0.5rem}.g-lg-2,.gy-lg-2{--bs-gutter-y:0.5rem}.g-lg-3,.gx-lg-3{--bs-gutter-x:1rem}.g-lg-3,.gy-lg-3{--bs-gutter-y:1rem}.g-lg-4,.gx-lg-4{--bs-gutter-x:1.5rem}.g-lg-4,.gy-lg-4{--bs-gutter-y:1.5rem}.g-lg-5,.gx-lg-5{--bs-gutter-x:3rem}.g-lg-5,.gy-lg-5{--bs-gutter-y:3rem}}@media (min-width:1200px){.col-xl{flex:1 0 0%}.row-cols-xl-auto>*{flex:0 0 auto;width:auto}.row-cols-xl-1>*{flex:0 0 auto;width:100%}.row-cols-xl-2>*{flex:0 0 auto;width:50%}.row-cols-xl-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-xl-4>*{flex:0 0 auto;width:25%}.row-cols-xl-5>*{flex:0 0 auto;width:20%}.row-cols-xl-6>*{flex:0 0 auto;width:16.66666667%}.col-xl-auto{flex:0 0 auto;width:auto}.col-xl-1{flex:0 0 auto;width:8.33333333%}.col-xl-2{flex:0 0 auto;width:16.66666667%}.col-xl-3{flex:0 0 auto;width:25%}.col-xl-4{flex:0 0 auto;width:33.33333333%}.col-xl-5{flex:0 0 auto;width:41.66666667%}.col-xl-6{flex:0 0 auto;width:50%}.col-xl-7{flex:0 0 auto;width:58.33333333%}.col-xl-8{flex:0 0 auto;width:66.66666667%}.col-xl-9{flex:0 0 auto;width:75%}.col-xl-10{flex:0 0 auto;width:83.33333333%}.col-xl-11{flex:0 0 auto;width:91.66666667%}.col-xl-12{flex:0 0 auto;width:100%}.offset-xl-0{margin-left:0}.offset-xl-1{margin-left:8.33333333%}.offset-xl-2{margin-left:16.66666667%}.offset-xl-3{margin-left:25%}.offset-xl-4{margin-left:33.33333333%}.offset-xl-5{margin-left:41.66666667%}.offset-xl-6{margin-left:50%}.offset-xl-7{margin-left:58.33333333%}.offset-xl-8{margin-left:66.66666667%}.offset-xl-9{margin-left:75%}.offset-xl-10{margin-left:83.33333333%}.offset-xl-11{margin-left:91.66666667%}.g-xl-0,.gx-xl-0{--bs-gutter-x:0}.g-xl-0,.gy-xl-0{--bs-gutter-y:0}.g-xl-1,.gx-xl-1{--bs-gutter-x:0.25rem}.g-xl-1,.gy-xl-1{--bs-gutter-y:0.25rem}.g-xl-2,.gx-xl-2{--bs-gutter-x:0.5rem}.g-xl-2,.gy-xl-2{--bs-gutter-y:0.5rem}.g-xl-3,.gx-xl-3{--bs-gutter-x:1rem}.g-xl-3,.gy-xl-3{--bs-gutter-y:1rem}.g-xl-4,.gx-xl-4{--bs-gutter-x:1.5rem}.g-xl-4,.gy-xl-4{--bs-gutter-y:1.5rem}.g-xl-5,.gx-xl-5{--bs-gutter-x:3rem}.g-xl-5,.gy-xl-5{--bs-gutter-y:3rem}}@media (min-width:1400px){.col-xxl{flex:1 0 0%}.row-cols-xxl-auto>*{flex:0 0 auto;width:auto}.row-cols-xxl-1>*{flex:0 0 auto;width:100%}.row-cols-xxl-2>*{flex:0 0 auto;width:50%}.row-cols-xxl-3>*{flex:0 0 auto;width:33.33333333%}.row-cols-xxl-4>*{flex:0 0 auto;width:25%}.row-cols-xxl-5>*{flex:0 0 auto;width:20%}.row-cols-xxl-6>*{flex:0 0 auto;width:16.66666667%}.col-xxl-auto{flex:0 0 auto;width:auto}.col-xxl-1{flex:0 0 auto;width:8.33333333%}.col-xxl-2{flex:0 0 auto;width:16.66666667%}.col-xxl-3{flex:0 0 auto;width:25%}.col-xxl-4{flex:0 0 auto;width:33.33333333%}.col-xxl-5{flex:0 0 auto;width:41.66666667%}.col-xxl-6{flex:0 0 auto;width:50%}.col-xxl-7{flex:0 0 auto;width:58.33333333%}.col-xxl-8{flex:0 0 auto;width:66.66666667%}.col-xxl-9{flex:0 0 auto;width:75%}.col-xxl-10{flex:0 0 auto;width:83.33333333%}.col-xxl-11{flex:0 0 auto;width:91.66666667%}.col-xxl-12{flex:0 0 auto;width:100%}.offset-xxl-0{margin-left:0}.offset-xxl-1{margin-left:8.33333333%}.offset-xxl-2{margin-left:16.66666667%}.offset-xxl-3{margin-left:25%}.offset-xxl-4{margin-left:33.33333333%}.offset-xxl-5{margin-left:41.66666667%}.offset-xxl-6{margin-left:50%}.offset-xxl-7{margin-left:58.33333333%}.offset-xxl-8{margin-left:66.66666667%}.offset-xxl-9{margin-left:75%}.offset-xxl-10{margin-left:83.33333333%}.offset-xxl-11{margin-left:91.66666667%}.g-xxl-0,.gx-xxl-0{--bs-gutter-x:0}.g-xxl-0,.gy-xxl-0{--bs-gutter-y:0}.g-xxl-1,.gx-xxl-1{--bs-gutter-x:0.25rem}.g-xxl-1,.gy-xxl-1{--bs-gutter-y:0.25rem}.g-xxl-2,.gx-xxl-2{--bs-gutter-x:0.5rem}.g-xxl-2,.gy-xxl-2{--bs-gutter-y:0.5rem}.g-xxl-3,.gx-xxl-3{--bs-gutter-x:1rem}.g-xxl-3,.gy-xxl-3{--bs-gutter-y:1rem}.g-xxl-4,.gx-xxl-4{--bs-gutter-x:1.5rem}.g-xxl-4,.gy-xxl-4{--bs-gutter-y:1.5rem}.g-xxl-5,.gx-xxl-5{--bs-gutter-x:3rem}.g-xxl-5,.gy-xxl-5{--bs-gutter-y:3rem}}.table{--bs-table-color-type:initial;--bs-table-bg-type:initial;--bs-table-color-state:initial;--bs-table-bg-state:initial;--bs-table-color:var(--bs-emphasis-color);--bs-table-bg:var(--bs-body-bg);--bs-table-border-color:var(--bs-border-color);--bs-table-accent-bg:transparent;--bs-table-striped-color:var(--bs-emphasis-color);--bs-table-striped-bg:rgba(var(--bs-emphasis-color-rgb), 0.05);--bs-table-active-color:var(--bs-emphasis-color);--bs-table-active-bg:rgba(var(--bs-emphasis-color-rgb), 0.1);--bs-table-hover-color:var(--bs-emphasis-color);--bs-table-hover-bg:rgba(var(--bs-emphasis-color-rgb), 0.075);width:100%;margin-bottom:1rem;vertical-align:top;border-color:var(--bs-table-border-color)}.table>:not(caption)>*>*{padding:.5rem .5rem;color:var(--bs-table-color-state,var(--bs-table-color-type,var(--bs-table-color)));background-color:var(--bs-table-bg);border-bottom-width:var(--bs-border-width);box-shadow:inset 0 0 0 9999px var(--bs-table-bg-state,var(--bs-table-bg-type,var(--bs-table-accent-bg)))}.table>tbody{vertical-align:inherit}.table>thead{vertical-align:bottom}.table-group-divider{border-top:calc(var(--bs-border-width) * 2) solid currentcolor}.caption-top{caption-side:top}.table-sm>:not(caption)>*>*{padding:.25rem .25rem}.table-bordered>:not(caption)>*{border-width:var(--bs-border-width) 0}.table-bordered>:not(caption)>*>*{border-width:0 var(--bs-border-width)}.table-borderless>:not(caption)>*>*{border-bottom-width:0}.table-borderless>:not(:first-child){border-top-width:0}.table-striped>tbody>tr:nth-of-type(odd)>*{--bs-table-color-type:var(--bs-table-striped-color);--bs-table-bg-type:var(--bs-table-striped-bg)}.table-striped-columns>:not(caption)>tr>:nth-child(2n){--bs-table-color-type:var(--bs-table-striped-color);--bs-table-bg-type:var(--bs-table-striped-bg)}.table-active{--bs-table-color-state:var(--bs-table-active-color);--bs-table-bg-state:var(--bs-table-active-bg)}.table-hover>tbody>tr:hover>*{--bs-table-color-state:var(--bs-table-hover-color);--bs-table-bg-state:var(--bs-table-hover-bg)}.table-primary{--bs-table-color:#000;--bs-table-bg:#cfe2ff;--bs-table-border-color:#a6b5cc;--bs-table-striped-bg:#c5d7f2;--bs-table-striped-color:#000;--bs-table-active-bg:#bacbe6;--bs-table-active-color:#000;--bs-table-hover-bg:#bfd1ec;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-secondary{--bs-table-color:#000;--bs-table-bg:#e2e3e5;--bs-table-border-color:#b5b6b7;--bs-table-striped-bg:#d7d8da;--bs-table-striped-color:#000;--bs-table-active-bg:#cbccce;--bs-table-active-color:#000;--bs-table-hover-bg:#d1d2d4;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-success{--bs-table-color:#000;--bs-table-bg:#d1e7dd;--bs-table-border-color:#a7b9b1;--bs-table-striped-bg:#c7dbd2;--bs-table-striped-color:#000;--bs-table-active-bg:#bcd0c7;--bs-table-active-color:#000;--bs-table-hover-bg:#c1d6cc;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-info{--bs-table-color:#000;--bs-table-bg:#cff4fc;--bs-table-border-color:#a6c3ca;--bs-table-striped-bg:#c5e8ef;--bs-table-striped-color:#000;--bs-table-active-bg:#badce3;--bs-table-active-color:#000;--bs-table-hover-bg:#bfe2e9;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-warning{--bs-table-color:#000;--bs-table-bg:#fff3cd;--bs-table-border-color:#ccc2a4;--bs-table-striped-bg:#f2e7c3;--bs-table-striped-color:#000;--bs-table-active-bg:#e6dbb9;--bs-table-active-color:#000;--bs-table-hover-bg:#ece1be;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-danger{--bs-table-color:#000;--bs-table-bg:#f8d7da;--bs-table-border-color:#c6acae;--bs-table-striped-bg:#eccccf;--bs-table-striped-color:#000;--bs-table-active-bg:#dfc2c4;--bs-table-active-color:#000;--bs-table-hover-bg:#e5c7ca;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-light{--bs-table-color:#000;--bs-table-bg:#f8f9fa;--bs-table-border-color:#c6c7c8;--bs-table-striped-bg:#ecedee;--bs-table-striped-color:#000;--bs-table-active-bg:#dfe0e1;--bs-table-active-color:#000;--bs-table-hover-bg:#e5e6e7;--bs-table-hover-color:#000;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-dark{--bs-table-color:#fff;--bs-table-bg:#212529;--bs-table-border-color:#4d5154;--bs-table-striped-bg:#2c3034;--bs-table-striped-color:#fff;--bs-table-active-bg:#373b3e;--bs-table-active-color:#fff;--bs-table-hover-bg:#323539;--bs-table-hover-color:#fff;color:var(--bs-table-color);border-color:var(--bs-table-border-color)}.table-responsive{overflow-x:auto;-webkit-overflow-scrolling:touch}@media (max-width:575.98px){.table-responsive-sm{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:767.98px){.table-responsive-md{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:991.98px){.table-responsive-lg{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1199.98px){.table-responsive-xl{overflow-x:auto;-webkit-overflow-scrolling:touch}}@media (max-width:1399.98px){.table-responsive-xxl{overflow-x:auto;-webkit-overflow-scrolling:touch}}.form-label{margin-bottom:.5rem}.col-form-label{padding-top:calc(.375rem + var(--bs-border-width));padding-bottom:calc(.375rem + var(--bs-border-width));margin-bottom:0;font-size:inherit;line-height:1.5}.col-form-label-lg{padding-top:calc(.5rem + var(--bs-border-width));padding-bottom:calc(.5rem + var(--bs-border-width));font-size:1.25rem}.col-form-label-sm{padding-top:calc(.25rem + var(--bs-border-width));padding-bottom:calc(.25rem + var(--bs-border-width));font-size:.875rem}.form-text{margin-top:.25rem;font-size:.875em;color:var(--bs-secondary-color)}.form-control{display:block;width:100%;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--bs-body-bg);background-clip:padding-box;border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control{transition:none}}.form-control[type=file]{overflow:hidden}.form-control[type=file]:not(:disabled):not([readonly]){cursor:pointer}.form-control:focus{color:var(--bs-body-color);background-color:var(--bs-body-bg);border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-control::-webkit-date-and-time-value{min-width:85px;height:1.5em;margin:0}.form-control::-webkit-datetime-edit{display:block;padding:0}.form-control::-moz-placeholder{color:var(--bs-secondary-color);opacity:1}.form-control::placeholder{color:var(--bs-secondary-color);opacity:1}.form-control:disabled{background-color:var(--bs-secondary-bg);opacity:1}.form-control::-webkit-file-upload-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:var(--bs-body-color);background-color:var(--bs-tertiary-bg);pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:var(--bs-border-width);border-radius:0;-webkit-transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}.form-control::file-selector-button{padding:.375rem .75rem;margin:-.375rem -.75rem;-webkit-margin-end:.75rem;margin-inline-end:.75rem;color:var(--bs-body-color);background-color:var(--bs-tertiary-bg);pointer-events:none;border-color:inherit;border-style:solid;border-width:0;border-inline-end-width:var(--bs-border-width);border-radius:0;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-control::-webkit-file-upload-button{-webkit-transition:none;transition:none}.form-control::file-selector-button{transition:none}}.form-control:hover:not(:disabled):not([readonly])::-webkit-file-upload-button{background-color:var(--bs-secondary-bg)}.form-control:hover:not(:disabled):not([readonly])::file-selector-button{background-color:var(--bs-secondary-bg)}.form-control-plaintext{display:block;width:100%;padding:.375rem 0;margin-bottom:0;line-height:1.5;color:var(--bs-body-color);background-color:transparent;border:solid transparent;border-width:var(--bs-border-width) 0}.form-control-plaintext:focus{outline:0}.form-control-plaintext.form-control-lg,.form-control-plaintext.form-control-sm{padding-right:0;padding-left:0}.form-control-sm{min-height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2));padding:.25rem .5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.form-control-sm::-webkit-file-upload-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-sm::file-selector-button{padding:.25rem .5rem;margin:-.25rem -.5rem;-webkit-margin-end:.5rem;margin-inline-end:.5rem}.form-control-lg{min-height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2));padding:.5rem 1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}.form-control-lg::-webkit-file-upload-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}.form-control-lg::file-selector-button{padding:.5rem 1rem;margin:-.5rem -1rem;-webkit-margin-end:1rem;margin-inline-end:1rem}textarea.form-control{min-height:calc(1.5em + .75rem + calc(var(--bs-border-width) * 2))}textarea.form-control-sm{min-height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2))}textarea.form-control-lg{min-height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2))}.form-control-color{width:3rem;height:calc(1.5em + .75rem + calc(var(--bs-border-width) * 2));padding:.375rem}.form-control-color:not(:disabled):not([readonly]){cursor:pointer}.form-control-color::-moz-color-swatch{border:0!important;border-radius:var(--bs-border-radius)}.form-control-color::-webkit-color-swatch{border:0!important;border-radius:var(--bs-border-radius)}.form-control-color.form-control-sm{height:calc(1.5em + .5rem + calc(var(--bs-border-width) * 2))}.form-control-color.form-control-lg{height:calc(1.5em + 1rem + calc(var(--bs-border-width) * 2))}.form-select{--bs-form-select-bg-img:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e");display:block;width:100%;padding:.375rem 2.25rem .375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--bs-body-bg);background-image:var(--bs-form-select-bg-img),var(--bs-form-select-bg-icon,none);background-repeat:no-repeat;background-position:right .75rem center;background-size:16px 12px;border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius);transition:border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-select{transition:none}}.form-select:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-select[multiple],.form-select[size]:not([size="1"]){padding-right:.75rem;background-image:none}.form-select:disabled{background-color:var(--bs-secondary-bg)}.form-select:-moz-focusring{color:transparent;text-shadow:0 0 0 var(--bs-body-color)}.form-select-sm{padding-top:.25rem;padding-bottom:.25rem;padding-left:.5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.form-select-lg{padding-top:.5rem;padding-bottom:.5rem;padding-left:1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}[data-bs-theme=dark] .form-select{--bs-form-select-bg-img:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23dee2e6' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='m2 5 6 6 6-6'/%3e%3c/svg%3e")}.form-check{display:block;min-height:1.5rem;padding-left:1.5em;margin-bottom:.125rem}.form-check .form-check-input{float:left;margin-left:-1.5em}.form-check-reverse{padding-right:1.5em;padding-left:0;text-align:right}.form-check-reverse .form-check-input{float:right;margin-right:-1.5em;margin-left:0}.form-check-input{--bs-form-check-bg:var(--bs-body-bg);flex-shrink:0;width:1em;height:1em;margin-top:.25em;vertical-align:top;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--bs-form-check-bg);background-image:var(--bs-form-check-bg-image);background-repeat:no-repeat;background-position:center;background-size:contain;border:var(--bs-border-width) solid var(--bs-border-color);-webkit-print-color-adjust:exact;color-adjust:exact;print-color-adjust:exact}.form-check-input[type=checkbox]{border-radius:.25em}.form-check-input[type=radio]{border-radius:50%}.form-check-input:active{filter:brightness(90%)}.form-check-input:focus{border-color:#86b7fe;outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.form-check-input:checked{background-color:#0d6efd;border-color:#0d6efd}.form-check-input:checked[type=checkbox]{--bs-form-check-bg-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e")}.form-check-input:checked[type=radio]{--bs-form-check-bg-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e")}.form-check-input[type=checkbox]:indeterminate{background-color:#0d6efd;border-color:#0d6efd;--bs-form-check-bg-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10h8'/%3e%3c/svg%3e")}.form-check-input:disabled{pointer-events:none;filter:none;opacity:.5}.form-check-input:disabled~.form-check-label,.form-check-input[disabled]~.form-check-label{cursor:default;opacity:.5}.form-switch{padding-left:2.5em}.form-switch .form-check-input{--bs-form-switch-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%280, 0, 0, 0.25%29'/%3e%3c/svg%3e");width:2em;margin-left:-2.5em;background-image:var(--bs-form-switch-bg);background-position:left center;border-radius:2em;transition:background-position .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-switch .form-check-input{transition:none}}.form-switch .form-check-input:focus{--bs-form-switch-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%2386b7fe'/%3e%3c/svg%3e")}.form-switch .form-check-input:checked{background-position:right center;--bs-form-switch-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e")}.form-switch.form-check-reverse{padding-right:2.5em;padding-left:0}.form-switch.form-check-reverse .form-check-input{margin-right:-2.5em;margin-left:0}.form-check-inline{display:inline-block;margin-right:1rem}.btn-check{position:absolute;clip:rect(0,0,0,0);pointer-events:none}.btn-check:disabled+.btn,.btn-check[disabled]+.btn{pointer-events:none;filter:none;opacity:.65}[data-bs-theme=dark] .form-switch .form-check-input:not(:checked):not(:focus){--bs-form-switch-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='rgba%28255, 255, 255, 0.25%29'/%3e%3c/svg%3e")}.form-range{width:100%;height:1.5rem;padding:0;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent}.form-range:focus{outline:0}.form-range:focus::-webkit-slider-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range:focus::-moz-range-thumb{box-shadow:0 0 0 1px #fff,0 0 0 .25rem rgba(13,110,253,.25)}.form-range::-moz-focus-outer{border:0}.form-range::-webkit-slider-thumb{width:1rem;height:1rem;margin-top:-.25rem;-webkit-appearance:none;appearance:none;background-color:#0d6efd;border:0;border-radius:1rem;-webkit-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-range::-webkit-slider-thumb{-webkit-transition:none;transition:none}}.form-range::-webkit-slider-thumb:active{background-color:#b6d4fe}.form-range::-webkit-slider-runnable-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:var(--bs-secondary-bg);border-color:transparent;border-radius:1rem}.form-range::-moz-range-thumb{width:1rem;height:1rem;-moz-appearance:none;appearance:none;background-color:#0d6efd;border:0;border-radius:1rem;-moz-transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out;transition:background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.form-range::-moz-range-thumb{-moz-transition:none;transition:none}}.form-range::-moz-range-thumb:active{background-color:#b6d4fe}.form-range::-moz-range-track{width:100%;height:.5rem;color:transparent;cursor:pointer;background-color:var(--bs-secondary-bg);border-color:transparent;border-radius:1rem}.form-range:disabled{pointer-events:none}.form-range:disabled::-webkit-slider-thumb{background-color:var(--bs-secondary-color)}.form-range:disabled::-moz-range-thumb{background-color:var(--bs-secondary-color)}.form-floating{position:relative}.form-floating>.form-control,.form-floating>.form-control-plaintext,.form-floating>.form-select{height:calc(3.5rem + calc(var(--bs-border-width) * 2));min-height:calc(3.5rem + calc(var(--bs-border-width) * 2));line-height:1.25}.form-floating>label{position:absolute;top:0;left:0;z-index:2;height:100%;padding:1rem .75rem;overflow:hidden;text-align:start;text-overflow:ellipsis;white-space:nowrap;pointer-events:none;border:var(--bs-border-width) solid transparent;transform-origin:0 0;transition:opacity .1s ease-in-out,transform .1s ease-in-out}@media (prefers-reduced-motion:reduce){.form-floating>label{transition:none}}.form-floating>.form-control,.form-floating>.form-control-plaintext{padding:1rem .75rem}.form-floating>.form-control-plaintext::-moz-placeholder,.form-floating>.form-control::-moz-placeholder{color:transparent}.form-floating>.form-control-plaintext::placeholder,.form-floating>.form-control::placeholder{color:transparent}.form-floating>.form-control-plaintext:not(:-moz-placeholder-shown),.form-floating>.form-control:not(:-moz-placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control-plaintext:focus,.form-floating>.form-control-plaintext:not(:placeholder-shown),.form-floating>.form-control:focus,.form-floating>.form-control:not(:placeholder-shown){padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control-plaintext:-webkit-autofill,.form-floating>.form-control:-webkit-autofill{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-select{padding-top:1.625rem;padding-bottom:.625rem}.form-floating>.form-control:not(:-moz-placeholder-shown)~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control-plaintext~label,.form-floating>.form-control:focus~label,.form-floating>.form-control:not(:placeholder-shown)~label,.form-floating>.form-select~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control:not(:-moz-placeholder-shown)~label::after{position:absolute;inset:1rem 0.375rem;z-index:-1;height:1.5em;content:"";background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius)}.form-floating>.form-control-plaintext~label::after,.form-floating>.form-control:focus~label::after,.form-floating>.form-control:not(:placeholder-shown)~label::after,.form-floating>.form-select~label::after{position:absolute;inset:1rem 0.375rem;z-index:-1;height:1.5em;content:"";background-color:var(--bs-body-bg);border-radius:var(--bs-border-radius)}.form-floating>.form-control:-webkit-autofill~label{color:rgba(var(--bs-body-color-rgb),.65);transform:scale(.85) translateY(-.5rem) translateX(.15rem)}.form-floating>.form-control-plaintext~label{border-width:var(--bs-border-width) 0}.form-floating>.form-control:disabled~label,.form-floating>:disabled~label{color:#6c757d}.form-floating>.form-control:disabled~label::after,.form-floating>:disabled~label::after{background-color:var(--bs-secondary-bg)}.input-group{position:relative;display:flex;flex-wrap:wrap;align-items:stretch;width:100%}.input-group>.form-control,.input-group>.form-floating,.input-group>.form-select{position:relative;flex:1 1 auto;width:1%;min-width:0}.input-group>.form-control:focus,.input-group>.form-floating:focus-within,.input-group>.form-select:focus{z-index:5}.input-group .btn{position:relative;z-index:2}.input-group .btn:focus{z-index:5}.input-group-text{display:flex;align-items:center;padding:.375rem .75rem;font-size:1rem;font-weight:400;line-height:1.5;color:var(--bs-body-color);text-align:center;white-space:nowrap;background-color:var(--bs-tertiary-bg);border:var(--bs-border-width) solid var(--bs-border-color);border-radius:var(--bs-border-radius)}.input-group-lg>.btn,.input-group-lg>.form-control,.input-group-lg>.form-select,.input-group-lg>.input-group-text{padding:.5rem 1rem;font-size:1.25rem;border-radius:var(--bs-border-radius-lg)}.input-group-sm>.btn,.input-group-sm>.form-control,.input-group-sm>.form-select,.input-group-sm>.input-group-text{padding:.25rem .5rem;font-size:.875rem;border-radius:var(--bs-border-radius-sm)}.input-group-lg>.form-select,.input-group-sm>.form-select{padding-right:3rem}.input-group:not(.has-validation)>.dropdown-toggle:nth-last-child(n+3),.input-group:not(.has-validation)>.form-floating:not(:last-child)>.form-control,.input-group:not(.has-validation)>.form-floating:not(:last-child)>.form-select,.input-group:not(.has-validation)>:not(:last-child):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating){border-top-right-radius:0;border-bottom-right-radius:0}.input-group.has-validation>.dropdown-toggle:nth-last-child(n+4),.input-group.has-validation>.form-floating:nth-last-child(n+3)>.form-control,.input-group.has-validation>.form-floating:nth-last-child(n+3)>.form-select,.input-group.has-validation>:nth-last-child(n+3):not(.dropdown-toggle):not(.dropdown-menu):not(.form-floating){border-top-right-radius:0;border-bottom-right-radius:0}.input-group>:not(:first-child):not(.dropdown-menu):not(.valid-tooltip):not(.valid-feedback):not(.invalid-tooltip):not(.invalid-feedback){margin-left:calc(var(--bs-border-width) * -1);border-top-left-radius:0;border-bottom-left-radius:0}.input-group>.form-floating:not(:first-child)>.form-control,.input-group>.form-floating:not(:first-child)>.form-select{border-top-left-radius:0;border-bottom-left-radius:0}.valid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:var(--bs-form-valid-color)}.valid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:var(--bs-success);border-radius:var(--bs-border-radius)}.is-valid~.valid-feedback,.is-valid~.valid-tooltip,.was-validated :valid~.valid-feedback,.was-validated :valid~.valid-tooltip{display:block}.form-control.is-valid,.was-validated .form-control:valid{border-color:var(--bs-form-valid-border-color);padding-right:calc(1.5em + .75rem);background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-valid:focus,.was-validated .form-control:valid:focus{border-color:var(--bs-form-valid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.was-validated textarea.form-control:valid,textarea.form-control.is-valid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-valid,.was-validated .form-select:valid{border-color:var(--bs-form-valid-border-color)}.form-select.is-valid:not([multiple]):not([size]),.form-select.is-valid:not([multiple])[size="1"],.was-validated .form-select:valid:not([multiple]):not([size]),.was-validated .form-select:valid:not([multiple])[size="1"]{--bs-form-select-bg-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e");padding-right:4.125rem;background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-valid:focus,.was-validated .form-select:valid:focus{border-color:var(--bs-form-valid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.form-control-color.is-valid,.was-validated .form-control-color:valid{width:calc(3rem + calc(1.5em + .75rem))}.form-check-input.is-valid,.was-validated .form-check-input:valid{border-color:var(--bs-form-valid-border-color)}.form-check-input.is-valid:checked,.was-validated .form-check-input:valid:checked{background-color:var(--bs-form-valid-color)}.form-check-input.is-valid:focus,.was-validated .form-check-input:valid:focus{box-shadow:0 0 0 .25rem rgba(var(--bs-success-rgb),.25)}.form-check-input.is-valid~.form-check-label,.was-validated .form-check-input:valid~.form-check-label{color:var(--bs-form-valid-color)}.form-check-inline .form-check-input~.valid-feedback{margin-left:.5em}.input-group>.form-control:not(:focus).is-valid,.input-group>.form-floating:not(:focus-within).is-valid,.input-group>.form-select:not(:focus).is-valid,.was-validated .input-group>.form-control:not(:focus):valid,.was-validated .input-group>.form-floating:not(:focus-within):valid,.was-validated .input-group>.form-select:not(:focus):valid{z-index:3}.invalid-feedback{display:none;width:100%;margin-top:.25rem;font-size:.875em;color:var(--bs-form-invalid-color)}.invalid-tooltip{position:absolute;top:100%;z-index:5;display:none;max-width:100%;padding:.25rem .5rem;margin-top:.1rem;font-size:.875rem;color:#fff;background-color:var(--bs-danger);border-radius:var(--bs-border-radius)}.is-invalid~.invalid-feedback,.is-invalid~.invalid-tooltip,.was-validated :invalid~.invalid-feedback,.was-validated :invalid~.invalid-tooltip{display:block}.form-control.is-invalid,.was-validated .form-control:invalid{border-color:var(--bs-form-invalid-border-color);padding-right:calc(1.5em + .75rem);background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");background-repeat:no-repeat;background-position:right calc(.375em + .1875rem) center;background-size:calc(.75em + .375rem) calc(.75em + .375rem)}.form-control.is-invalid:focus,.was-validated .form-control:invalid:focus{border-color:var(--bs-form-invalid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.was-validated textarea.form-control:invalid,textarea.form-control.is-invalid{padding-right:calc(1.5em + .75rem);background-position:top calc(.375em + .1875rem) right calc(.375em + .1875rem)}.form-select.is-invalid,.was-validated .form-select:invalid{border-color:var(--bs-form-invalid-border-color)}.form-select.is-invalid:not([multiple]):not([size]),.form-select.is-invalid:not([multiple])[size="1"],.was-validated .form-select:invalid:not([multiple]):not([size]),.was-validated .form-select:invalid:not([multiple])[size="1"]{--bs-form-select-bg-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e");padding-right:4.125rem;background-position:right .75rem center,center right 2.25rem;background-size:16px 12px,calc(.75em + .375rem) calc(.75em + .375rem)}.form-select.is-invalid:focus,.was-validated .form-select:invalid:focus{border-color:var(--bs-form-invalid-border-color);box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.form-control-color.is-invalid,.was-validated .form-control-color:invalid{width:calc(3rem + calc(1.5em + .75rem))}.form-check-input.is-invalid,.was-validated .form-check-input:invalid{border-color:var(--bs-form-invalid-border-color)}.form-check-input.is-invalid:checked,.was-validated .form-check-input:invalid:checked{background-color:var(--bs-form-invalid-color)}.form-check-input.is-invalid:focus,.was-validated .form-check-input:invalid:focus{box-shadow:0 0 0 .25rem rgba(var(--bs-danger-rgb),.25)}.form-check-input.is-invalid~.form-check-label,.was-validated .form-check-input:invalid~.form-check-label{color:var(--bs-form-invalid-color)}.form-check-inline .form-check-input~.invalid-feedback{margin-left:.5em}.input-group>.form-control:not(:focus).is-invalid,.input-group>.form-floating:not(:focus-within).is-invalid,.input-group>.form-select:not(:focus).is-invalid,.was-validated .input-group>.form-control:not(:focus):invalid,.was-validated .input-group>.form-floating:not(:focus-within):invalid,.was-validated .input-group>.form-select:not(:focus):invalid{z-index:4}.btn{--bs-btn-padding-x:0.75rem;--bs-btn-padding-y:0.375rem;--bs-btn-font-family: ;--bs-btn-font-size:1rem;--bs-btn-font-weight:400;--bs-btn-line-height:1.5;--bs-btn-color:var(--bs-body-color);--bs-btn-bg:transparent;--bs-btn-border-width:var(--bs-border-width);--bs-btn-border-color:transparent;--bs-btn-border-radius:var(--bs-border-radius);--bs-btn-hover-border-color:transparent;--bs-btn-box-shadow:inset 0 1px 0 rgba(255, 255, 255, 0.15),0 1px 1px rgba(0, 0, 0, 0.075);--bs-btn-disabled-opacity:0.65;--bs-btn-focus-box-shadow:0 0 0 0.25rem rgba(var(--bs-btn-focus-shadow-rgb), .5);display:inline-block;padding:var(--bs-btn-padding-y) var(--bs-btn-padding-x);font-family:var(--bs-btn-font-family);font-size:var(--bs-btn-font-size);font-weight:var(--bs-btn-font-weight);line-height:var(--bs-btn-line-height);color:var(--bs-btn-color);text-align:center;text-decoration:none;vertical-align:middle;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;user-select:none;border:var(--bs-btn-border-width) solid var(--bs-btn-border-color);border-radius:var(--bs-btn-border-radius);background-color:var(--bs-btn-bg);transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.btn{transition:none}}.btn:hover{color:var(--bs-btn-hover-color);background-color:var(--bs-btn-hover-bg);border-color:var(--bs-btn-hover-border-color)}.btn-check+.btn:hover{color:var(--bs-btn-color);background-color:var(--bs-btn-bg);border-color:var(--bs-btn-border-color)}.btn:focus-visible{color:var(--bs-btn-hover-color);background-color:var(--bs-btn-hover-bg);border-color:var(--bs-btn-hover-border-color);outline:0;box-shadow:var(--bs-btn-focus-box-shadow)}.btn-check:focus-visible+.btn{border-color:var(--bs-btn-hover-border-color);outline:0;box-shadow:var(--bs-btn-focus-box-shadow)}.btn-check:checked+.btn,.btn.active,.btn.show,.btn:first-child:active,:not(.btn-check)+.btn:active{color:var(--bs-btn-active-color);background-color:var(--bs-btn-active-bg);border-color:var(--bs-btn-active-border-color)}.btn-check:checked+.btn:focus-visible,.btn.active:focus-visible,.btn.show:focus-visible,.btn:first-child:active:focus-visible,:not(.btn-check)+.btn:active:focus-visible{box-shadow:var(--bs-btn-focus-box-shadow)}.btn-check:checked:focus-visible+.btn{box-shadow:var(--bs-btn-focus-box-shadow)}.btn.disabled,.btn:disabled,fieldset:disabled .btn{color:var(--bs-btn-disabled-color);pointer-events:none;background-color:var(--bs-btn-disabled-bg);border-color:var(--bs-btn-disabled-border-color);opacity:var(--bs-btn-disabled-opacity)}.btn-primary{--bs-btn-color:#fff;--bs-btn-bg:#0d6efd;--bs-btn-border-color:#0d6efd;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#0b5ed7;--bs-btn-hover-border-color:#0a58ca;--bs-btn-focus-shadow-rgb:49,132,253;--bs-btn-active-color:#fff;--bs-btn-active-bg:#0a58ca;--bs-btn-active-border-color:#0a53be;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#0d6efd;--bs-btn-disabled-border-color:#0d6efd}.btn-secondary{--bs-btn-color:#fff;--bs-btn-bg:#6c757d;--bs-btn-border-color:#6c757d;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#5c636a;--bs-btn-hover-border-color:#565e64;--bs-btn-focus-shadow-rgb:130,138,145;--bs-btn-active-color:#fff;--bs-btn-active-bg:#565e64;--bs-btn-active-border-color:#51585e;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#6c757d;--bs-btn-disabled-border-color:#6c757d}.btn-success{--bs-btn-color:#fff;--bs-btn-bg:#198754;--bs-btn-border-color:#198754;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#157347;--bs-btn-hover-border-color:#146c43;--bs-btn-focus-shadow-rgb:60,153,110;--bs-btn-active-color:#fff;--bs-btn-active-bg:#146c43;--bs-btn-active-border-color:#13653f;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#198754;--bs-btn-disabled-border-color:#198754}.btn-info{--bs-btn-color:#000;--bs-btn-bg:#0dcaf0;--bs-btn-border-color:#0dcaf0;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#31d2f2;--bs-btn-hover-border-color:#25cff2;--bs-btn-focus-shadow-rgb:11,172,204;--bs-btn-active-color:#000;--bs-btn-active-bg:#3dd5f3;--bs-btn-active-border-color:#25cff2;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#0dcaf0;--bs-btn-disabled-border-color:#0dcaf0}.btn-warning{--bs-btn-color:#000;--bs-btn-bg:#ffc107;--bs-btn-border-color:#ffc107;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#ffca2c;--bs-btn-hover-border-color:#ffc720;--bs-btn-focus-shadow-rgb:217,164,6;--bs-btn-active-color:#000;--bs-btn-active-bg:#ffcd39;--bs-btn-active-border-color:#ffc720;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#ffc107;--bs-btn-disabled-border-color:#ffc107}.btn-danger{--bs-btn-color:#fff;--bs-btn-bg:#dc3545;--bs-btn-border-color:#dc3545;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#bb2d3b;--bs-btn-hover-border-color:#b02a37;--bs-btn-focus-shadow-rgb:225,83,97;--bs-btn-active-color:#fff;--bs-btn-active-bg:#b02a37;--bs-btn-active-border-color:#a52834;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#dc3545;--bs-btn-disabled-border-color:#dc3545}.btn-light{--bs-btn-color:#000;--bs-btn-bg:#f8f9fa;--bs-btn-border-color:#f8f9fa;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#d3d4d5;--bs-btn-hover-border-color:#c6c7c8;--bs-btn-focus-shadow-rgb:211,212,213;--bs-btn-active-color:#000;--bs-btn-active-bg:#c6c7c8;--bs-btn-active-border-color:#babbbc;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#000;--bs-btn-disabled-bg:#f8f9fa;--bs-btn-disabled-border-color:#f8f9fa}.btn-dark{--bs-btn-color:#fff;--bs-btn-bg:#212529;--bs-btn-border-color:#212529;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#424649;--bs-btn-hover-border-color:#373b3e;--bs-btn-focus-shadow-rgb:66,70,73;--bs-btn-active-color:#fff;--bs-btn-active-bg:#4d5154;--bs-btn-active-border-color:#373b3e;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#fff;--bs-btn-disabled-bg:#212529;--bs-btn-disabled-border-color:#212529}.btn-outline-primary{--bs-btn-color:#0d6efd;--bs-btn-border-color:#0d6efd;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#0d6efd;--bs-btn-hover-border-color:#0d6efd;--bs-btn-focus-shadow-rgb:13,110,253;--bs-btn-active-color:#fff;--bs-btn-active-bg:#0d6efd;--bs-btn-active-border-color:#0d6efd;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#0d6efd;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#0d6efd;--bs-gradient:none}.btn-outline-secondary{--bs-btn-color:#6c757d;--bs-btn-border-color:#6c757d;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#6c757d;--bs-btn-hover-border-color:#6c757d;--bs-btn-focus-shadow-rgb:108,117,125;--bs-btn-active-color:#fff;--bs-btn-active-bg:#6c757d;--bs-btn-active-border-color:#6c757d;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#6c757d;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#6c757d;--bs-gradient:none}.btn-outline-success{--bs-btn-color:#198754;--bs-btn-border-color:#198754;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#198754;--bs-btn-hover-border-color:#198754;--bs-btn-focus-shadow-rgb:25,135,84;--bs-btn-active-color:#fff;--bs-btn-active-bg:#198754;--bs-btn-active-border-color:#198754;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#198754;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#198754;--bs-gradient:none}.btn-outline-info{--bs-btn-color:#0dcaf0;--bs-btn-border-color:#0dcaf0;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#0dcaf0;--bs-btn-hover-border-color:#0dcaf0;--bs-btn-focus-shadow-rgb:13,202,240;--bs-btn-active-color:#000;--bs-btn-active-bg:#0dcaf0;--bs-btn-active-border-color:#0dcaf0;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#0dcaf0;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#0dcaf0;--bs-gradient:none}.btn-outline-warning{--bs-btn-color:#ffc107;--bs-btn-border-color:#ffc107;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#ffc107;--bs-btn-hover-border-color:#ffc107;--bs-btn-focus-shadow-rgb:255,193,7;--bs-btn-active-color:#000;--bs-btn-active-bg:#ffc107;--bs-btn-active-border-color:#ffc107;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#ffc107;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#ffc107;--bs-gradient:none}.btn-outline-danger{--bs-btn-color:#dc3545;--bs-btn-border-color:#dc3545;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#dc3545;--bs-btn-hover-border-color:#dc3545;--bs-btn-focus-shadow-rgb:220,53,69;--bs-btn-active-color:#fff;--bs-btn-active-bg:#dc3545;--bs-btn-active-border-color:#dc3545;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#dc3545;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#dc3545;--bs-gradient:none}.btn-outline-light{--bs-btn-color:#f8f9fa;--bs-btn-border-color:#f8f9fa;--bs-btn-hover-color:#000;--bs-btn-hover-bg:#f8f9fa;--bs-btn-hover-border-color:#f8f9fa;--bs-btn-focus-shadow-rgb:248,249,250;--bs-btn-active-color:#000;--bs-btn-active-bg:#f8f9fa;--bs-btn-active-border-color:#f8f9fa;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#f8f9fa;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#f8f9fa;--bs-gradient:none}.btn-outline-dark{--bs-btn-color:#212529;--bs-btn-border-color:#212529;--bs-btn-hover-color:#fff;--bs-btn-hover-bg:#212529;--bs-btn-hover-border-color:#212529;--bs-btn-focus-shadow-rgb:33,37,41;--bs-btn-active-color:#fff;--bs-btn-active-bg:#212529;--bs-btn-active-border-color:#212529;--bs-btn-active-shadow:inset 0 3px 5px rgba(0, 0, 0, 0.125);--bs-btn-disabled-color:#212529;--bs-btn-disabled-bg:transparent;--bs-btn-disabled-border-color:#212529;--bs-gradient:none}.btn-link{--bs-btn-font-weight:400;--bs-btn-color:var(--bs-link-color);--bs-btn-bg:transparent;--bs-btn-border-color:transparent;--bs-btn-hover-color:var(--bs-link-hover-color);--bs-btn-hover-border-color:transparent;--bs-btn-active-color:var(--bs-link-hover-color);--bs-btn-active-border-color:transparent;--bs-btn-disabled-color:#6c757d;--bs-btn-disabled-border-color:transparent;--bs-btn-box-shadow:0 0 0 #000;--bs-btn-focus-shadow-rgb:49,132,253;text-decoration:underline}.btn-link:focus-visible{color:var(--bs-btn-color)}.btn-link:hover{color:var(--bs-btn-hover-color)}.btn-group-lg>.btn,.btn-lg{--bs-btn-padding-y:0.5rem;--bs-btn-padding-x:1rem;--bs-btn-font-size:1.25rem;--bs-btn-border-radius:var(--bs-border-radius-lg)}.btn-group-sm>.btn,.btn-sm{--bs-btn-padding-y:0.25rem;--bs-btn-padding-x:0.5rem;--bs-btn-font-size:0.875rem;--bs-btn-border-radius:var(--bs-border-radius-sm)}.fade{transition:opacity .15s linear}@media (prefers-reduced-motion:reduce){.fade{transition:none}}.fade:not(.show){opacity:0}.collapse:not(.show){display:none}.collapsing{height:0;overflow:hidden;transition:height .35s ease}@media (prefers-reduced-motion:reduce){.collapsing{transition:none}}.collapsing.collapse-horizontal{width:0;height:auto;transition:width .35s ease}@media (prefers-reduced-motion:reduce){.collapsing.collapse-horizontal{transition:none}}.dropdown,.dropdown-center,.dropend,.dropstart,.dropup,.dropup-center{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty::after{margin-left:0}.dropdown-menu{--bs-dropdown-zindex:1000;--bs-dropdown-min-width:10rem;--bs-dropdown-padding-x:0;--bs-dropdown-padding-y:0.5rem;--bs-dropdown-spacer:0.125rem;--bs-dropdown-font-size:1rem;--bs-dropdown-color:var(--bs-body-color);--bs-dropdown-bg:var(--bs-body-bg);--bs-dropdown-border-color:var(--bs-border-color-translucent);--bs-dropdown-border-radius:var(--bs-border-radius);--bs-dropdown-border-width:var(--bs-border-width);--bs-dropdown-inner-border-radius:calc(var(--bs-border-radius) - var(--bs-border-width));--bs-dropdown-divider-bg:var(--bs-border-color-translucent);--bs-dropdown-divider-margin-y:0.5rem;--bs-dropdown-box-shadow:var(--bs-box-shadow);--bs-dropdown-link-color:var(--bs-body-color);--bs-dropdown-link-hover-color:var(--bs-body-color);--bs-dropdown-link-hover-bg:var(--bs-tertiary-bg);--bs-dropdown-link-active-color:#fff;--bs-dropdown-link-active-bg:#0d6efd;--bs-dropdown-link-disabled-color:var(--bs-tertiary-color);--bs-dropdown-item-padding-x:1rem;--bs-dropdown-item-padding-y:0.25rem;--bs-dropdown-header-color:#6c757d;--bs-dropdown-header-padding-x:1rem;--bs-dropdown-header-padding-y:0.5rem;position:absolute;z-index:var(--bs-dropdown-zindex);display:none;min-width:var(--bs-dropdown-min-width);padding:var(--bs-dropdown-padding-y) var(--bs-dropdown-padding-x);margin:0;font-size:var(--bs-dropdown-font-size);color:var(--bs-dropdown-color);text-align:left;list-style:none;background-color:var(--bs-dropdown-bg);background-clip:padding-box;border:var(--bs-dropdown-border-width) solid var(--bs-dropdown-border-color);border-radius:var(--bs-dropdown-border-radius)}.dropdown-menu[data-bs-popper]{top:100%;left:0;margin-top:var(--bs-dropdown-spacer)}.dropdown-menu-start{--bs-position:start}.dropdown-menu-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-end{--bs-position:end}.dropdown-menu-end[data-bs-popper]{right:0;left:auto}@media (min-width:576px){.dropdown-menu-sm-start{--bs-position:start}.dropdown-menu-sm-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-sm-end{--bs-position:end}.dropdown-menu-sm-end[data-bs-popper]{right:0;left:auto}}@media (min-width:768px){.dropdown-menu-md-start{--bs-position:start}.dropdown-menu-md-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-md-end{--bs-position:end}.dropdown-menu-md-end[data-bs-popper]{right:0;left:auto}}@media (min-width:992px){.dropdown-menu-lg-start{--bs-position:start}.dropdown-menu-lg-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-lg-end{--bs-position:end}.dropdown-menu-lg-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1200px){.dropdown-menu-xl-start{--bs-position:start}.dropdown-menu-xl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xl-end{--bs-position:end}.dropdown-menu-xl-end[data-bs-popper]{right:0;left:auto}}@media (min-width:1400px){.dropdown-menu-xxl-start{--bs-position:start}.dropdown-menu-xxl-start[data-bs-popper]{right:auto;left:0}.dropdown-menu-xxl-end{--bs-position:end}.dropdown-menu-xxl-end[data-bs-popper]{right:0;left:auto}}.dropup .dropdown-menu[data-bs-popper]{top:auto;bottom:100%;margin-top:0;margin-bottom:var(--bs-dropdown-spacer)}.dropup .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-menu[data-bs-popper]{top:0;right:auto;left:100%;margin-top:0;margin-left:var(--bs-dropdown-spacer)}.dropend .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropend .dropdown-toggle:empty::after{margin-left:0}.dropend .dropdown-toggle::after{vertical-align:0}.dropstart .dropdown-menu[data-bs-popper]{top:0;right:100%;left:auto;margin-top:0;margin-right:var(--bs-dropdown-spacer)}.dropstart .dropdown-toggle::after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:""}.dropstart .dropdown-toggle::after{display:none}.dropstart .dropdown-toggle::before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:"";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropstart .dropdown-toggle:empty::after{margin-left:0}.dropstart .dropdown-toggle::before{vertical-align:0}.dropdown-divider{height:0;margin:var(--bs-dropdown-divider-margin-y) 0;overflow:hidden;border-top:1px solid var(--bs-dropdown-divider-bg);opacity:1}.dropdown-item{display:block;width:100%;padding:var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);clear:both;font-weight:400;color:var(--bs-dropdown-link-color);text-align:inherit;text-decoration:none;white-space:nowrap;background-color:transparent;border:0;border-radius:var(--bs-dropdown-item-border-radius,0)}.dropdown-item:focus,.dropdown-item:hover{color:var(--bs-dropdown-link-hover-color);background-color:var(--bs-dropdown-link-hover-bg)}.dropdown-item.active,.dropdown-item:active{color:var(--bs-dropdown-link-active-color);text-decoration:none;background-color:var(--bs-dropdown-link-active-bg)}.dropdown-item.disabled,.dropdown-item:disabled{color:var(--bs-dropdown-link-disabled-color);pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:var(--bs-dropdown-header-padding-y) var(--bs-dropdown-header-padding-x);margin-bottom:0;font-size:.875rem;color:var(--bs-dropdown-header-color);white-space:nowrap}.dropdown-item-text{display:block;padding:var(--bs-dropdown-item-padding-y) var(--bs-dropdown-item-padding-x);color:var(--bs-dropdown-link-color)}.dropdown-menu-dark{--bs-dropdown-color:#dee2e6;--bs-dropdown-bg:#343a40;--bs-dropdown-border-color:var(--bs-border-color-translucent);--bs-dropdown-box-shadow: ;--bs-dropdown-link-color:#dee2e6;--bs-dropdown-link-hover-color:#fff;--bs-dropdown-divider-bg:var(--bs-border-color-translucent);--bs-dropdown-link-hover-bg:rgba(255, 255, 255, 0.15);--bs-dropdown-link-active-color:#fff;--bs-dropdown-link-active-bg:#0d6efd;--bs-dropdown-link-disabled-color:#adb5bd;--bs-dropdown-header-color:#adb5bd}.btn-group,.btn-group-vertical{position:relative;display:inline-flex;vertical-align:middle}.btn-group-vertical>.btn,.btn-group>.btn{position:relative;flex:1 1 auto}.btn-group-vertical>.btn-check:checked+.btn,.btn-group-vertical>.btn-check:focus+.btn,.btn-group-vertical>.btn.active,.btn-group-vertical>.btn:active,.btn-group-vertical>.btn:focus,.btn-group-vertical>.btn:hover,.btn-group>.btn-check:checked+.btn,.btn-group>.btn-check:focus+.btn,.btn-group>.btn.active,.btn-group>.btn:active,.btn-group>.btn:focus,.btn-group>.btn:hover{z-index:1}.btn-toolbar{display:flex;flex-wrap:wrap;justify-content:flex-start}.btn-toolbar .input-group{width:auto}.btn-group{border-radius:var(--bs-border-radius)}.btn-group>.btn-group:not(:first-child),.btn-group>:not(.btn-check:first-child)+.btn{margin-left:calc(var(--bs-border-width) * -1)}.btn-group>.btn-group:not(:last-child)>.btn,.btn-group>.btn.dropdown-toggle-split:first-child,.btn-group>.btn:not(:last-child):not(.dropdown-toggle){border-top-right-radius:0;border-bottom-right-radius:0}.btn-group>.btn-group:not(:first-child)>.btn,.btn-group>.btn:nth-child(n+3),.btn-group>:not(.btn-check)+.btn{border-top-left-radius:0;border-bottom-left-radius:0}.dropdown-toggle-split{padding-right:.5625rem;padding-left:.5625rem}.dropdown-toggle-split::after,.dropend .dropdown-toggle-split::after,.dropup .dropdown-toggle-split::after{margin-left:0}.dropstart .dropdown-toggle-split::before{margin-right:0}.btn-group-sm>.btn+.dropdown-toggle-split,.btn-sm+.dropdown-toggle-split{padding-right:.375rem;padding-left:.375rem}.btn-group-lg>.btn+.dropdown-toggle-split,.btn-lg+.dropdown-toggle-split{padding-right:.75rem;padding-left:.75rem}.btn-group-vertical{flex-direction:column;align-items:flex-start;justify-content:center}.btn-group-vertical>.btn,.btn-group-vertical>.btn-group{width:100%}.btn-group-vertical>.btn-group:not(:first-child),.btn-group-vertical>.btn:not(:first-child){margin-top:calc(var(--bs-border-width) * -1)}.btn-group-vertical>.btn-group:not(:last-child)>.btn,.btn-group-vertical>.btn:not(:last-child):not(.dropdown-toggle){border-bottom-right-radius:0;border-bottom-left-radius:0}.btn-group-vertical>.btn-group:not(:first-child)>.btn,.btn-group-vertical>.btn~.btn{border-top-left-radius:0;border-top-right-radius:0}.nav{--bs-nav-link-padding-x:1rem;--bs-nav-link-padding-y:0.5rem;--bs-nav-link-font-weight: ;--bs-nav-link-color:var(--bs-link-color);--bs-nav-link-hover-color:var(--bs-link-hover-color);--bs-nav-link-disabled-color:var(--bs-secondary-color);display:flex;flex-wrap:wrap;padding-left:0;margin-bottom:0;list-style:none}.nav-link{display:block;padding:var(--bs-nav-link-padding-y) var(--bs-nav-link-padding-x);font-size:var(--bs-nav-link-font-size);font-weight:var(--bs-nav-link-font-weight);color:var(--bs-nav-link-color);text-decoration:none;background:0 0;border:0;transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out}@media (prefers-reduced-motion:reduce){.nav-link{transition:none}}.nav-link:focus,.nav-link:hover{color:var(--bs-nav-link-hover-color)}.nav-link:focus-visible{outline:0;box-shadow:0 0 0 .25rem rgba(13,110,253,.25)}.nav-link.disabled,.nav-link:disabled{color:var(--bs-nav-link-disabled-color);pointer-events:none;cursor:default}.nav-tabs{--bs-nav-tabs-border-width:var(--bs-border-width);--bs-nav-tabs-border-color:var(--bs-border-color);--bs-nav-tabs-border-radius:var(--bs-border-radius);--bs-nav-tabs-link-hover-border-color:var(--bs-secondary-bg) var(--bs-secondary-bg) var(--bs-border-color);--bs-nav-tabs-link-active-color:var(--bs-emphasis-color);--bs-nav-tabs-link-active-bg:var(--bs-body-bg);--bs-nav-tabs-link-active-border-color:var(--bs-border-color) var(--bs-border-color) var(--bs-body-bg);border-bottom:var(--bs-nav-tabs-border-width) solid var(--bs-nav-tabs-border-color)}.nav-tabs .nav-link{margin-bottom:calc(-1 * var(--bs-nav-tabs-border-width));border:var(--bs-nav-tabs-border-width) solid transparent;border-top-left-radius:var(--bs-nav-tabs-border-radius);border-top-right-radius:var(--bs-nav-tabs-border-radius)}.nav-tabs .nav-link:focus,.nav-tabs .nav-link:hover{isolation:isolate;border-color:var(--bs-nav-tabs-link-hover-border-color)}.nav-tabs .nav-item.show .nav-link,.nav-tabs .nav-link.active{color:var(--bs-nav-tabs-link-active-color);background-color:var(--bs-nav-tabs-link-active-bg);border-color:var(--bs-nav-tabs-link-active-border-color)}.nav-tabs .dropdown-menu{margin-top:calc(-1 * var(--bs-nav-tabs-border-width));border-top-left-radius:0;border-top-right-radius:0}.nav-pills{--bs-nav-pills-border-radius:var(--bs-border-radius);--bs-nav-pills-link-active-color:#fff;--bs-nav-pills-link-active-bg:#0d6efd}.nav-pills .nav-link{border-radius:var(--bs-nav-pills-border-radius)}.nav-pills .nav-link.active,.nav-pills .show>.nav-link{color:var(--bs-nav-pills-link-active-color);background-color:var(--bs-nav-pills-link-active-bg)}.nav-underline{--bs-nav-underline-gap:1rem;--bs-nav-underline-border-width:0.125rem;--bs-nav-underline-link-active-color:var(--bs-emphasis-color);gap:var(--bs-nav-underline-gap)}.nav-underline .nav-link{padding-right:0;padding-left:0;border-bottom:var(--bs-nav-underline-border-width) solid transparent}.nav-underline .nav-link:focus,.nav-underline .nav-link:hover{border-bottom-color:currentcolor}.nav-underline .nav-link.active,.nav-underline .show>.nav-link{font-weight:700;color:var(--bs-nav-underline-link-active-color);border-bottom-color:currentcolor}.nav-fill .nav-item,.nav-fill>.nav-link{flex:1 1 auto;text-align:center}.nav-justified .nav-item,.nav-justified>.nav-link{flex-basis:0;flex-grow:1;text-align:center}.nav-fill .nav-item .nav-link,.nav-justified .nav-item .nav-link{width:100%}.tab-content>.tab-pane{display:none}.tab-content>.active{display:block}.navbar{--bs-navbar-padding-x:0;--bs-navbar-padding-y:0.5rem;--bs-navbar-color:rgba(var(--bs-emphasis-color-rgb), 0.65);--bs-navbar-hover-color:rgba(var(--bs-emphasis-color-rgb), 0.8);--bs-navbar-disabled-color:rgba(var(--bs-emphasis-color-rgb), 0.3);--bs-navbar-active-color:rgba(var(--bs-emphasis-color-rgb), 1);--bs-navbar-brand-padding-y:0.3125rem;--bs-navbar-brand-margin-end:1rem;--bs-navbar-brand-font-size:1.25rem;--bs-navbar-brand-color:rgba(var(--bs-emphasis-color-rgb), 1);--bs-navbar-brand-hover-color:rgba(var(--bs-emphasis-color-rgb), 1);--bs-navbar-nav-link-padding-x:0.5rem;--bs-navbar-toggler-padding-y:0.25rem;--bs-navbar-toggler-padding-x:0.75rem;--bs-navbar-toggler-font-size:1.25rem;--bs-navbar-toggler-icon-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%2833, 37, 41, 0.75%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e");--bs-navbar-toggler-border-color:rgba(var(--bs-emphasis-color-rgb), 0.15);--bs-navbar-toggler-border-radius:var(--bs-border-radius);--bs-navbar-toggler-focus-width:0.25rem;--bs-navbar-toggler-transition:box-shadow 0.15s ease-in-out;position:relative;display:flex;flex-wrap:wrap;align-items:center;justify-content:space-between;padding:var(--bs-navbar-padding-y) var(--bs-navbar-padding-x)}.navbar>.container,.navbar>.container-fluid,.navbar>.container-lg,.navbar>.container-md,.navbar>.container-sm,.navbar>.container-xl,.navbar>.container-xxl{display:flex;flex-wrap:inherit;align-items:center;justify-content:space-between}.navbar-brand{padding-top:var(--bs-navbar-brand-padding-y);padding-bottom:var(--bs-navbar-brand-padding-y);margin-right:var(--bs-navbar-brand-margin-end);font-size:var(--bs-navbar-brand-font-size);color:var(--bs-navbar-brand-color);text-decoration:none;white-space:nowrap}.navbar-brand:focus,.navbar-brand:hover{color:var(--bs-navbar-brand-hover-color)}.navbar-nav{--bs-nav-link-padding-x:0;--bs-nav-link-padding-y:0.5rem;--bs-nav-link-font-weight: ;--bs-nav-link-color:var(--bs-navbar-color);--bs-nav-link-hover-color:var(--bs-navbar-hover-color);--bs-nav-link-disabled-color:var(--bs-navbar-disabled-color);display:flex;flex-direction:column;padding-left:0;margin-bottom:0;list-style:none}.navbar-nav .nav-link.active,.navbar-nav .nav-link.show{color:var(--bs-navbar-active-color)}.navbar-nav .dropdown-menu{position:static}.navbar-text{padding-top:.5rem;padding-bottom:.5rem;color:var(--bs-navbar-color)}.navbar-text a,.navbar-text a:focus,.navbar-text a:hover{color:var(--bs-navbar-active-color)}.navbar-collapse{flex-basis:100%;flex-grow:1;align-items:center}.navbar-toggler{padding:var(--bs-navbar-toggler-padding-y) var(--bs-navbar-toggler-padding-x);font-size:var(--bs-navbar-toggler-font-size);line-height:1;color:var(--bs-navbar-color);background-color:transparent;border:var(--bs-border-width) solid var(--bs-navbar-toggler-border-color);border-radius:var(--bs-navbar-toggler-border-radius);transition:var(--bs-navbar-toggler-transition)}@media (prefers-reduced-motion:reduce){.navbar-toggler{transition:none}}.navbar-toggler:hover{text-decoration:none}.navbar-toggler:focus{text-decoration:none;outline:0;box-shadow:0 0 0 var(--bs-navbar-toggler-focus-width)}.navbar-toggler-icon{display:inline-block;width:1.5em;height:1.5em;vertical-align:middle;background-image:var(--bs-navbar-toggler-icon-bg);background-repeat:no-repeat;background-position:center;background-size:100%}.navbar-nav-scroll{max-height:var(--bs-scroll-height,75vh);overflow-y:auto}@media (min-width:576px){.navbar-expand-sm{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-sm .navbar-nav{flex-direction:row}.navbar-expand-sm .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-sm .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand-sm .navbar-nav-scroll{overflow:visible}.navbar-expand-sm .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-sm .navbar-toggler{display:none}.navbar-expand-sm .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand-sm .offcanvas .offcanvas-header{display:none}.navbar-expand-sm .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:768px){.navbar-expand-md{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-md .navbar-nav{flex-direction:row}.navbar-expand-md .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-md .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand-md .navbar-nav-scroll{overflow:visible}.navbar-expand-md .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-md .navbar-toggler{display:none}.navbar-expand-md .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand-md .offcanvas .offcanvas-header{display:none}.navbar-expand-md .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:992px){.navbar-expand-lg{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-lg .navbar-nav{flex-direction:row}.navbar-expand-lg .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-lg .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand-lg .navbar-nav-scroll{overflow:visible}.navbar-expand-lg .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-lg .navbar-toggler{display:none}.navbar-expand-lg .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand-lg .offcanvas .offcanvas-header{display:none}.navbar-expand-lg .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1200px){.navbar-expand-xl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xl .navbar-nav{flex-direction:row}.navbar-expand-xl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xl .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand-xl .navbar-nav-scroll{overflow:visible}.navbar-expand-xl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xl .navbar-toggler{display:none}.navbar-expand-xl .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand-xl .offcanvas .offcanvas-header{display:none}.navbar-expand-xl .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}@media (min-width:1400px){.navbar-expand-xxl{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand-xxl .navbar-nav{flex-direction:row}.navbar-expand-xxl .navbar-nav .dropdown-menu{position:absolute}.navbar-expand-xxl .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand-xxl .navbar-nav-scroll{overflow:visible}.navbar-expand-xxl .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand-xxl .navbar-toggler{display:none}.navbar-expand-xxl .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand-xxl .offcanvas .offcanvas-header{display:none}.navbar-expand-xxl .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}}.navbar-expand{flex-wrap:nowrap;justify-content:flex-start}.navbar-expand .navbar-nav{flex-direction:row}.navbar-expand .navbar-nav .dropdown-menu{position:absolute}.navbar-expand .navbar-nav .nav-link{padding-right:var(--bs-navbar-nav-link-padding-x);padding-left:var(--bs-navbar-nav-link-padding-x)}.navbar-expand .navbar-nav-scroll{overflow:visible}.navbar-expand .navbar-collapse{display:flex!important;flex-basis:auto}.navbar-expand .navbar-toggler{display:none}.navbar-expand .offcanvas{position:static;z-index:auto;flex-grow:1;width:auto!important;height:auto!important;visibility:visible!important;background-color:transparent!important;border:0!important;transform:none!important;transition:none}.navbar-expand .offcanvas .offcanvas-header{display:none}.navbar-expand .offcanvas .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible}.navbar-dark,.navbar[data-bs-theme=dark]{--bs-navbar-color:rgba(255, 255, 255, 0.55);--bs-navbar-hover-color:rgba(255, 255, 255, 0.75);--bs-navbar-disabled-color:rgba(255, 255, 255, 0.25);--bs-navbar-active-color:#fff;--bs-navbar-brand-color:#fff;--bs-navbar-brand-hover-color:#fff;--bs-navbar-toggler-border-color:rgba(255, 255, 255, 0.1);--bs-navbar-toggler-icon-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e")}[data-bs-theme=dark] .navbar-toggler-icon{--bs-navbar-toggler-icon-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 30 30'%3e%3cpath stroke='rgba%28255, 255, 255, 0.55%29' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/%3e%3c/svg%3e")}.card{--bs-card-spacer-y:1rem;--bs-card-spacer-x:1rem;--bs-card-title-spacer-y:0.5rem;--bs-card-title-color: ;--bs-card-subtitle-color: ;--bs-card-border-width:var(--bs-border-width);--bs-card-border-color:var(--bs-border-color-translucent);--bs-card-border-radius:var(--bs-border-radius);--bs-card-box-shadow: ;--bs-card-inner-border-radius:calc(var(--bs-border-radius) - (var(--bs-border-width)));--bs-card-cap-padding-y:0.5rem;--bs-card-cap-padding-x:1rem;--bs-card-cap-bg:rgba(var(--bs-body-color-rgb), 0.03);--bs-card-cap-color: ;--bs-card-height: ;--bs-card-color: ;--bs-card-bg:var(--bs-body-bg);--bs-card-img-overlay-padding:1rem;--bs-card-group-margin:0.75rem;position:relative;display:flex;flex-direction:column;min-width:0;height:var(--bs-card-height);color:var(--bs-body-color);word-wrap:break-word;background-color:var(--bs-card-bg);background-clip:border-box;border:var(--bs-card-border-width) solid var(--bs-card-border-color);border-radius:var(--bs-card-border-radius)}.card>hr{margin-right:0;margin-left:0}.card>.list-group{border-top:inherit;border-bottom:inherit}.card>.list-group:first-child{border-top-width:0;border-top-left-radius:var(--bs-card-inner-border-radius);border-top-right-radius:var(--bs-card-inner-border-radius)}.card>.list-group:last-child{border-bottom-width:0;border-bottom-right-radius:var(--bs-card-inner-border-radius);border-bottom-left-radius:var(--bs-card-inner-border-radius)}.card>.card-header+.list-group,.card>.list-group+.card-footer{border-top:0}.card-body{flex:1 1 auto;padding:var(--bs-card-spacer-y) var(--bs-card-spacer-x);color:var(--bs-card-color)}.card-title{margin-bottom:var(--bs-card-title-spacer-y);color:var(--bs-card-title-color)}.card-subtitle{margin-top:calc(-.5 * var(--bs-card-title-spacer-y));margin-bottom:0;color:var(--bs-card-subtitle-color)}.card-text:last-child{margin-bottom:0}.card-link+.card-link{margin-left:var(--bs-card-spacer-x)}.card-header{padding:var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);margin-bottom:0;color:var(--bs-card-cap-color);background-color:var(--bs-card-cap-bg);border-bottom:var(--bs-card-border-width) solid var(--bs-card-border-color)}.card-header:first-child{border-radius:var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius) 0 0}.card-footer{padding:var(--bs-card-cap-padding-y) var(--bs-card-cap-padding-x);color:var(--bs-card-cap-color);background-color:var(--bs-card-cap-bg);border-top:var(--bs-card-border-width) solid var(--bs-card-border-color)}.card-footer:last-child{border-radius:0 0 var(--bs-card-inner-border-radius) var(--bs-card-inner-border-radius)}.card-header-tabs{margin-right:calc(-.5 * var(--bs-card-cap-padding-x));margin-bottom:calc(-1 * var(--bs-card-cap-padding-y));margin-left:calc(-.5 * var(--bs-card-cap-padding-x));border-bottom:0}.card-header-tabs .nav-link.active{background-color:var(--bs-card-bg);border-bottom-color:var(--bs-card-bg)}.card-header-pills{margin-right:calc(-.5 * var(--bs-card-cap-padding-x));margin-left:calc(-.5 * var(--bs-card-cap-padding-x))}.card-img-overlay{position:absolute;top:0;right:0;bottom:0;left:0;padding:var(--bs-card-img-overlay-padding);border-radius:var(--bs-card-inner-border-radius)}.card-img,.card-img-bottom,.card-img-top{width:100%}.card-img,.card-img-top{border-top-left-radius:var(--bs-card-inner-border-radius);border-top-right-radius:var(--bs-card-inner-border-radius)}.card-img,.card-img-bottom{border-bottom-right-radius:var(--bs-card-inner-border-radius);border-bottom-left-radius:var(--bs-card-inner-border-radius)}.card-group>.card{margin-bottom:var(--bs-card-group-margin)}@media (min-width:576px){.card-group{display:flex;flex-flow:row wrap}.card-group>.card{flex:1 0 0%;margin-bottom:0}.card-group>.card+.card{margin-left:0;border-left:0}.card-group>.card:not(:last-child){border-top-right-radius:0;border-bottom-right-radius:0}.card-group>.card:not(:last-child) .card-header,.card-group>.card:not(:last-child) .card-img-top{border-top-right-radius:0}.card-group>.card:not(:last-child) .card-footer,.card-group>.card:not(:last-child) .card-img-bottom{border-bottom-right-radius:0}.card-group>.card:not(:first-child){border-top-left-radius:0;border-bottom-left-radius:0}.card-group>.card:not(:first-child) .card-header,.card-group>.card:not(:first-child) .card-img-top{border-top-left-radius:0}.card-group>.card:not(:first-child) .card-footer,.card-group>.card:not(:first-child) .card-img-bottom{border-bottom-left-radius:0}}.accordion{--bs-accordion-color:var(--bs-body-color);--bs-accordion-bg:var(--bs-body-bg);--bs-accordion-transition:color 0.15s ease-in-out,background-color 0.15s ease-in-out,border-color 0.15s ease-in-out,box-shadow 0.15s ease-in-out,border-radius 0.15s ease;--bs-accordion-border-color:var(--bs-border-color);--bs-accordion-border-width:var(--bs-border-width);--bs-accordion-border-radius:var(--bs-border-radius);--bs-accordion-inner-border-radius:calc(var(--bs-border-radius) - (var(--bs-border-width)));--bs-accordion-btn-padding-x:1.25rem;--bs-accordion-btn-padding-y:1rem;--bs-accordion-btn-color:var(--bs-body-color);--bs-accordion-btn-bg:var(--bs-accordion-bg);--bs-accordion-btn-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='none' stroke='%23212529' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M2 5L8 11L14 5'/%3e%3c/svg%3e");--bs-accordion-btn-icon-width:1.25rem;--bs-accordion-btn-icon-transform:rotate(-180deg);--bs-accordion-btn-icon-transition:transform 0.2s ease-in-out;--bs-accordion-btn-active-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='none' stroke='%23052c65' stroke-linecap='round' stroke-linejoin='round'%3e%3cpath d='M2 5L8 11L14 5'/%3e%3c/svg%3e");--bs-accordion-btn-focus-box-shadow:0 0 0 0.25rem rgba(13, 110, 253, 0.25);--bs-accordion-body-padding-x:1.25rem;--bs-accordion-body-padding-y:1rem;--bs-accordion-active-color:var(--bs-primary-text-emphasis);--bs-accordion-active-bg:var(--bs-primary-bg-subtle)}.accordion-button{position:relative;display:flex;align-items:center;width:100%;padding:var(--bs-accordion-btn-padding-y) var(--bs-accordion-btn-padding-x);font-size:1rem;color:var(--bs-accordion-btn-color);text-align:left;background-color:var(--bs-accordion-btn-bg);border:0;border-radius:0;overflow-anchor:none;transition:var(--bs-accordion-transition)}@media (prefers-reduced-motion:reduce){.accordion-button{transition:none}}.accordion-button:not(.collapsed){color:var(--bs-accordion-active-color);background-color:var(--bs-accordion-active-bg);box-shadow:inset 0 calc(-1 * var(--bs-accordion-border-width)) 0 var(--bs-accordion-border-color)}.accordion-button:not(.collapsed)::after{background-image:var(--bs-accordion-btn-active-icon);transform:var(--bs-accordion-btn-icon-transform)}.accordion-button::after{flex-shrink:0;width:var(--bs-accordion-btn-icon-width);height:var(--bs-accordion-btn-icon-width);margin-left:auto;content:"";background-image:var(--bs-accordion-btn-icon);background-repeat:no-repeat;background-size:var(--bs-accordion-btn-icon-width);transition:var(--bs-accordion-btn-icon-transition)}@media (prefers-reduced-motion:reduce){.accordion-button::after{transition:none}}.accordion-button:hover{z-index:2}.accordion-button:focus{z-index:3;outline:0;box-shadow:var(--bs-accordion-btn-focus-box-shadow)}.accordion-header{margin-bottom:0}.accordion-item{color:var(--bs-accordion-color);background-color:var(--bs-accordion-bg);border:var(--bs-accordion-border-width) solid var(--bs-accordion-border-color)}.accordion-item:first-of-type{border-top-left-radius:var(--bs-accordion-border-radius);border-top-right-radius:var(--bs-accordion-border-radius)}.accordion-item:first-of-type>.accordion-header .accordion-button{border-top-left-radius:var(--bs-accordion-inner-border-radius);border-top-right-radius:var(--bs-accordion-inner-border-radius)}.accordion-item:not(:first-of-type){border-top:0}.accordion-item:last-of-type{border-bottom-right-radius:var(--bs-accordion-border-radius);border-bottom-left-radius:var(--bs-accordion-border-radius)}.accordion-item:last-of-type>.accordion-header .accordion-button.collapsed{border-bottom-right-radius:var(--bs-accordion-inner-border-radius);border-bottom-left-radius:var(--bs-accordion-inner-border-radius)}.accordion-item:last-of-type>.accordion-collapse{border-bottom-right-radius:var(--bs-accordion-border-radius);border-bottom-left-radius:var(--bs-accordion-border-radius)}.accordion-body{padding:var(--bs-accordion-body-padding-y) var(--bs-accordion-body-padding-x)}.accordion-flush>.accordion-item{border-right:0;border-left:0;border-radius:0}.accordion-flush>.accordion-item:first-child{border-top:0}.accordion-flush>.accordion-item:last-child{border-bottom:0}.accordion-flush>.accordion-item>.accordion-header .accordion-button,.accordion-flush>.accordion-item>.accordion-header .accordion-button.collapsed{border-radius:0}.accordion-flush>.accordion-item>.accordion-collapse{border-radius:0}[data-bs-theme=dark] .accordion-button::after{--bs-accordion-btn-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%236ea8fe'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e");--bs-accordion-btn-active-icon:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%236ea8fe'%3e%3cpath fill-rule='evenodd' d='M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e")}.breadcrumb{--bs-breadcrumb-padding-x:0;--bs-breadcrumb-padding-y:0;--bs-breadcrumb-margin-bottom:1rem;--bs-breadcrumb-bg: ;--bs-breadcrumb-border-radius: ;--bs-breadcrumb-divider-color:var(--bs-secondary-color);--bs-breadcrumb-item-padding-x:0.5rem;--bs-breadcrumb-item-active-color:var(--bs-secondary-color);display:flex;flex-wrap:wrap;padding:var(--bs-breadcrumb-padding-y) var(--bs-breadcrumb-padding-x);margin-bottom:var(--bs-breadcrumb-margin-bottom);font-size:var(--bs-breadcrumb-font-size);list-style:none;background-color:var(--bs-breadcrumb-bg);border-radius:var(--bs-breadcrumb-border-radius)}.breadcrumb-item+.breadcrumb-item{padding-left:var(--bs-breadcrumb-item-padding-x)}.breadcrumb-item+.breadcrumb-item::before{float:left;padding-right:var(--bs-breadcrumb-item-padding-x);color:var(--bs-breadcrumb-divider-color);content:var(--bs-breadcrumb-divider, "/")}.breadcrumb-item.active{color:var(--bs-breadcrumb-item-active-color)}.pagination{--bs-pagination-padding-x:0.75rem;--bs-pagination-padding-y:0.375rem;--bs-pagination-font-size:1rem;--bs-pagination-color:var(--bs-link-color);--bs-pagination-bg:var(--bs-body-bg);--bs-pagination-border-width:var(--bs-border-width);--bs-pagination-border-color:var(--bs-border-color);--bs-pagination-border-radius:var(--bs-border-radius);--bs-pagination-hover-color:var(--bs-link-hover-color);--bs-pagination-hover-bg:var(--bs-tertiary-bg);--bs-pagination-hover-border-color:var(--bs-border-color);--bs-pagination-focus-color:var(--bs-link-hover-color);--bs-pagination-focus-bg:var(--bs-secondary-bg);--bs-pagination-focus-box-shadow:0 0 0 0.25rem rgba(13, 110, 253, 0.25);--bs-pagination-active-color:#fff;--bs-pagination-active-bg:#0d6efd;--bs-pagination-active-border-color:#0d6efd;--bs-pagination-disabled-color:var(--bs-secondary-color);--bs-pagination-disabled-bg:var(--bs-secondary-bg);--bs-pagination-disabled-border-color:var(--bs-border-color);display:flex;padding-left:0;list-style:none}.page-link{position:relative;display:block;padding:var(--bs-pagination-padding-y) var(--bs-pagination-padding-x);font-size:var(--bs-pagination-font-size);color:var(--bs-pagination-color);text-decoration:none;background-color:var(--bs-pagination-bg);border:var(--bs-pagination-border-width) solid var(--bs-pagination-border-color);transition:color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out}@media (prefers-reduced-motion:reduce){.page-link{transition:none}}.page-link:hover{z-index:2;color:var(--bs-pagination-hover-color);background-color:var(--bs-pagination-hover-bg);border-color:var(--bs-pagination-hover-border-color)}.page-link:focus{z-index:3;color:var(--bs-pagination-focus-color);background-color:var(--bs-pagination-focus-bg);outline:0;box-shadow:var(--bs-pagination-focus-box-shadow)}.active>.page-link,.page-link.active{z-index:3;color:var(--bs-pagination-active-color);background-color:var(--bs-pagination-active-bg);border-color:var(--bs-pagination-active-border-color)}.disabled>.page-link,.page-link.disabled{color:var(--bs-pagination-disabled-color);pointer-events:none;background-color:var(--bs-pagination-disabled-bg);border-color:var(--bs-pagination-disabled-border-color)}.page-item:not(:first-child) .page-link{margin-left:calc(var(--bs-border-width) * -1)}.page-item:first-child .page-link{border-top-left-radius:var(--bs-pagination-border-radius);border-bottom-left-radius:var(--bs-pagination-border-radius)}.page-item:last-child .page-link{border-top-right-radius:var(--bs-pagination-border-radius);border-bottom-right-radius:var(--bs-pagination-border-radius)}.pagination-lg{--bs-pagination-padding-x:1.5rem;--bs-pagination-padding-y:0.75rem;--bs-pagination-font-size:1.25rem;--bs-pagination-border-radius:var(--bs-border-radius-lg)}.pagination-sm{--bs-pagination-padding-x:0.5rem;--bs-pagination-padding-y:0.25rem;--bs-pagination-font-size:0.875rem;--bs-pagination-border-radius:var(--bs-border-radius-sm)}.badge{--bs-badge-padding-x:0.65em;--bs-badge-padding-y:0.35em;--bs-badge-font-size:0.75em;--bs-badge-font-weight:700;--bs-badge-color:#fff;--bs-badge-border-radius:var(--bs-border-radius);display:inline-block;padding:var(--bs-badge-padding-y) var(--bs-badge-padding-x);font-size:var(--bs-badge-font-size);font-weight:var(--bs-badge-font-weight);line-height:1;color:var(--bs-badge-color);text-align:center;white-space:nowrap;vertical-align:baseline;border-radius:var(--bs-badge-border-radius)}.badge:empty{display:none}.btn .badge{position:relative;top:-1px}.alert{--bs-alert-bg:transparent;--bs-alert-padding-x:1rem;--bs-alert-padding-y:1rem;--bs-alert-margin-bottom:1rem;--bs-alert-color:inherit;--bs-alert-border-color:transparent;--bs-alert-border:var(--bs-border-width) solid var(--bs-alert-border-color);--bs-alert-border-radius:var(--bs-border-radius);--bs-alert-link-color:inherit;position:relative;padding:var(--bs-alert-padding-y) var(--bs-alert-padding-x);margin-bottom:var(--bs-alert-margin-bottom);color:var(--bs-alert-color);background-color:var(--bs-alert-bg);border:var(--bs-alert-border);border-radius:var(--bs-alert-border-radius)}.alert-heading{color:inherit}.alert-link{font-weight:700;color:var(--bs-alert-link-color)}.alert-dismissible{padding-right:3rem}.alert-dismissible .btn-close{position:absolute;top:0;right:0;z-index:2;padding:1.25rem 1rem}.alert-primary{--bs-alert-color:var(--bs-primary-text-emphasis);--bs-alert-bg:var(--bs-primary-bg-subtle);--bs-alert-border-color:var(--bs-primary-border-subtle);--bs-alert-link-color:var(--bs-primary-text-emphasis)}.alert-secondary{--bs-alert-color:var(--bs-secondary-text-emphasis);--bs-alert-bg:var(--bs-secondary-bg-subtle);--bs-alert-border-color:var(--bs-secondary-border-subtle);--bs-alert-link-color:var(--bs-secondary-text-emphasis)}.alert-success{--bs-alert-color:var(--bs-success-text-emphasis);--bs-alert-bg:var(--bs-success-bg-subtle);--bs-alert-border-color:var(--bs-success-border-subtle);--bs-alert-link-color:var(--bs-success-text-emphasis)}.alert-info{--bs-alert-color:var(--bs-info-text-emphasis);--bs-alert-bg:var(--bs-info-bg-subtle);--bs-alert-border-color:var(--bs-info-border-subtle);--bs-alert-link-color:var(--bs-info-text-emphasis)}.alert-warning{--bs-alert-color:var(--bs-warning-text-emphasis);--bs-alert-bg:var(--bs-warning-bg-subtle);--bs-alert-border-color:var(--bs-warning-border-subtle);--bs-alert-link-color:var(--bs-warning-text-emphasis)}.alert-danger{--bs-alert-color:var(--bs-danger-text-emphasis);--bs-alert-bg:var(--bs-danger-bg-subtle);--bs-alert-border-color:var(--bs-danger-border-subtle);--bs-alert-link-color:var(--bs-danger-text-emphasis)}.alert-light{--bs-alert-color:var(--bs-light-text-emphasis);--bs-alert-bg:var(--bs-light-bg-subtle);--bs-alert-border-color:var(--bs-light-border-subtle);--bs-alert-link-color:var(--bs-light-text-emphasis)}.alert-dark{--bs-alert-color:var(--bs-dark-text-emphasis);--bs-alert-bg:var(--bs-dark-bg-subtle);--bs-alert-border-color:var(--bs-dark-border-subtle);--bs-alert-link-color:var(--bs-dark-text-emphasis)}@keyframes progress-bar-stripes{0%{background-position-x:1rem}}.progress,.progress-stacked{--bs-progress-height:1rem;--bs-progress-font-size:0.75rem;--bs-progress-bg:var(--bs-secondary-bg);--bs-progress-border-radius:var(--bs-border-radius);--bs-progress-box-shadow:var(--bs-box-shadow-inset);--bs-progress-bar-color:#fff;--bs-progress-bar-bg:#0d6efd;--bs-progress-bar-transition:width 0.6s ease;display:flex;height:var(--bs-progress-height);overflow:hidden;font-size:var(--bs-progress-font-size);background-color:var(--bs-progress-bg);border-radius:var(--bs-progress-border-radius)}.progress-bar{display:flex;flex-direction:column;justify-content:center;overflow:hidden;color:var(--bs-progress-bar-color);text-align:center;white-space:nowrap;background-color:var(--bs-progress-bar-bg);transition:var(--bs-progress-bar-transition)}@media (prefers-reduced-motion:reduce){.progress-bar{transition:none}}.progress-bar-striped{background-image:linear-gradient(45deg,rgba(255,255,255,.15) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.15) 50%,rgba(255,255,255,.15) 75%,transparent 75%,transparent);background-size:var(--bs-progress-height) var(--bs-progress-height)}.progress-stacked>.progress{overflow:visible}.progress-stacked>.progress>.progress-bar{width:100%}.progress-bar-animated{animation:1s linear infinite progress-bar-stripes}@media (prefers-reduced-motion:reduce){.progress-bar-animated{animation:none}}.list-group{--bs-list-group-color:var(--bs-body-color);--bs-list-group-bg:var(--bs-body-bg);--bs-list-group-border-color:var(--bs-border-color);--bs-list-group-border-width:var(--bs-border-width);--bs-list-group-border-radius:var(--bs-border-radius);--bs-list-group-item-padding-x:1rem;--bs-list-group-item-padding-y:0.5rem;--bs-list-group-action-color:var(--bs-secondary-color);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-tertiary-bg);--bs-list-group-action-active-color:var(--bs-body-color);--bs-list-group-action-active-bg:var(--bs-secondary-bg);--bs-list-group-disabled-color:var(--bs-secondary-color);--bs-list-group-disabled-bg:var(--bs-body-bg);--bs-list-group-active-color:#fff;--bs-list-group-active-bg:#0d6efd;--bs-list-group-active-border-color:#0d6efd;display:flex;flex-direction:column;padding-left:0;margin-bottom:0;border-radius:var(--bs-list-group-border-radius)}.list-group-numbered{list-style-type:none;counter-reset:section}.list-group-numbered>.list-group-item::before{content:counters(section, ".") ". ";counter-increment:section}.list-group-item-action{width:100%;color:var(--bs-list-group-action-color);text-align:inherit}.list-group-item-action:focus,.list-group-item-action:hover{z-index:1;color:var(--bs-list-group-action-hover-color);text-decoration:none;background-color:var(--bs-list-group-action-hover-bg)}.list-group-item-action:active{color:var(--bs-list-group-action-active-color);background-color:var(--bs-list-group-action-active-bg)}.list-group-item{position:relative;display:block;padding:var(--bs-list-group-item-padding-y) var(--bs-list-group-item-padding-x);color:var(--bs-list-group-color);text-decoration:none;background-color:var(--bs-list-group-bg);border:var(--bs-list-group-border-width) solid var(--bs-list-group-border-color)}.list-group-item:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.list-group-item:last-child{border-bottom-right-radius:inherit;border-bottom-left-radius:inherit}.list-group-item.disabled,.list-group-item:disabled{color:var(--bs-list-group-disabled-color);pointer-events:none;background-color:var(--bs-list-group-disabled-bg)}.list-group-item.active{z-index:2;color:var(--bs-list-group-active-color);background-color:var(--bs-list-group-active-bg);border-color:var(--bs-list-group-active-border-color)}.list-group-item+.list-group-item{border-top-width:0}.list-group-item+.list-group-item.active{margin-top:calc(-1 * var(--bs-list-group-border-width));border-top-width:var(--bs-list-group-border-width)}.list-group-horizontal{flex-direction:row}.list-group-horizontal>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal>.list-group-item.active{margin-top:0}.list-group-horizontal>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}@media (min-width:576px){.list-group-horizontal-sm{flex-direction:row}.list-group-horizontal-sm>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal-sm>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal-sm>.list-group-item.active{margin-top:0}.list-group-horizontal-sm>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal-sm>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}}@media (min-width:768px){.list-group-horizontal-md{flex-direction:row}.list-group-horizontal-md>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal-md>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal-md>.list-group-item.active{margin-top:0}.list-group-horizontal-md>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal-md>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}}@media (min-width:992px){.list-group-horizontal-lg{flex-direction:row}.list-group-horizontal-lg>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal-lg>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal-lg>.list-group-item.active{margin-top:0}.list-group-horizontal-lg>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal-lg>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}}@media (min-width:1200px){.list-group-horizontal-xl{flex-direction:row}.list-group-horizontal-xl>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal-xl>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal-xl>.list-group-item.active{margin-top:0}.list-group-horizontal-xl>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal-xl>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}}@media (min-width:1400px){.list-group-horizontal-xxl{flex-direction:row}.list-group-horizontal-xxl>.list-group-item:first-child:not(:last-child){border-bottom-left-radius:var(--bs-list-group-border-radius);border-top-right-radius:0}.list-group-horizontal-xxl>.list-group-item:last-child:not(:first-child){border-top-right-radius:var(--bs-list-group-border-radius);border-bottom-left-radius:0}.list-group-horizontal-xxl>.list-group-item.active{margin-top:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item{border-top-width:var(--bs-list-group-border-width);border-left-width:0}.list-group-horizontal-xxl>.list-group-item+.list-group-item.active{margin-left:calc(-1 * var(--bs-list-group-border-width));border-left-width:var(--bs-list-group-border-width)}}.list-group-flush{border-radius:0}.list-group-flush>.list-group-item{border-width:0 0 var(--bs-list-group-border-width)}.list-group-flush>.list-group-item:last-child{border-bottom-width:0}.list-group-item-primary{--bs-list-group-color:var(--bs-primary-text-emphasis);--bs-list-group-bg:var(--bs-primary-bg-subtle);--bs-list-group-border-color:var(--bs-primary-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-primary-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-primary-border-subtle);--bs-list-group-active-color:var(--bs-primary-bg-subtle);--bs-list-group-active-bg:var(--bs-primary-text-emphasis);--bs-list-group-active-border-color:var(--bs-primary-text-emphasis)}.list-group-item-secondary{--bs-list-group-color:var(--bs-secondary-text-emphasis);--bs-list-group-bg:var(--bs-secondary-bg-subtle);--bs-list-group-border-color:var(--bs-secondary-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-secondary-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-secondary-border-subtle);--bs-list-group-active-color:var(--bs-secondary-bg-subtle);--bs-list-group-active-bg:var(--bs-secondary-text-emphasis);--bs-list-group-active-border-color:var(--bs-secondary-text-emphasis)}.list-group-item-success{--bs-list-group-color:var(--bs-success-text-emphasis);--bs-list-group-bg:var(--bs-success-bg-subtle);--bs-list-group-border-color:var(--bs-success-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-success-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-success-border-subtle);--bs-list-group-active-color:var(--bs-success-bg-subtle);--bs-list-group-active-bg:var(--bs-success-text-emphasis);--bs-list-group-active-border-color:var(--bs-success-text-emphasis)}.list-group-item-info{--bs-list-group-color:var(--bs-info-text-emphasis);--bs-list-group-bg:var(--bs-info-bg-subtle);--bs-list-group-border-color:var(--bs-info-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-info-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-info-border-subtle);--bs-list-group-active-color:var(--bs-info-bg-subtle);--bs-list-group-active-bg:var(--bs-info-text-emphasis);--bs-list-group-active-border-color:var(--bs-info-text-emphasis)}.list-group-item-warning{--bs-list-group-color:var(--bs-warning-text-emphasis);--bs-list-group-bg:var(--bs-warning-bg-subtle);--bs-list-group-border-color:var(--bs-warning-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-warning-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-warning-border-subtle);--bs-list-group-active-color:var(--bs-warning-bg-subtle);--bs-list-group-active-bg:var(--bs-warning-text-emphasis);--bs-list-group-active-border-color:var(--bs-warning-text-emphasis)}.list-group-item-danger{--bs-list-group-color:var(--bs-danger-text-emphasis);--bs-list-group-bg:var(--bs-danger-bg-subtle);--bs-list-group-border-color:var(--bs-danger-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-danger-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-danger-border-subtle);--bs-list-group-active-color:var(--bs-danger-bg-subtle);--bs-list-group-active-bg:var(--bs-danger-text-emphasis);--bs-list-group-active-border-color:var(--bs-danger-text-emphasis)}.list-group-item-light{--bs-list-group-color:var(--bs-light-text-emphasis);--bs-list-group-bg:var(--bs-light-bg-subtle);--bs-list-group-border-color:var(--bs-light-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-light-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-light-border-subtle);--bs-list-group-active-color:var(--bs-light-bg-subtle);--bs-list-group-active-bg:var(--bs-light-text-emphasis);--bs-list-group-active-border-color:var(--bs-light-text-emphasis)}.list-group-item-dark{--bs-list-group-color:var(--bs-dark-text-emphasis);--bs-list-group-bg:var(--bs-dark-bg-subtle);--bs-list-group-border-color:var(--bs-dark-border-subtle);--bs-list-group-action-hover-color:var(--bs-emphasis-color);--bs-list-group-action-hover-bg:var(--bs-dark-border-subtle);--bs-list-group-action-active-color:var(--bs-emphasis-color);--bs-list-group-action-active-bg:var(--bs-dark-border-subtle);--bs-list-group-active-color:var(--bs-dark-bg-subtle);--bs-list-group-active-bg:var(--bs-dark-text-emphasis);--bs-list-group-active-border-color:var(--bs-dark-text-emphasis)}.btn-close{--bs-btn-close-color:#000;--bs-btn-close-bg:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23000'%3e%3cpath d='M.293.293a1 1 0 0 1 1.414 0L8 6.586 14.293.293a1 1 0 1 1 1.414 1.414L9.414 8l6.293 6.293a1 1 0 0 1-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 0 1-1.414-1.414L6.586 8 .293 1.707a1 1 0 0 1 0-1.414z'/%3e%3c/svg%3e");--bs-btn-close-opacity:0.5;--bs-btn-close-hover-opacity:0.75;--bs-btn-close-focus-shadow:0 0 0 0.25rem rgba(13, 110, 253, 0.25);--bs-btn-close-focus-opacity:1;--bs-btn-close-disabled-opacity:0.25;--bs-btn-close-white-filter:invert(1) grayscale(100%) brightness(200%);box-sizing:content-box;width:1em;height:1em;padding:.25em .25em;color:var(--bs-btn-close-color);background:transparent var(--bs-btn-close-bg) center/1em auto no-repeat;border:0;border-radius:.375rem;opacity:var(--bs-btn-close-opacity)}.btn-close:hover{color:var(--bs-btn-close-color);text-decoration:none;opacity:var(--bs-btn-close-hover-opacity)}.btn-close:focus{outline:0;box-shadow:var(--bs-btn-close-focus-shadow);opacity:var(--bs-btn-close-focus-opacity)}.btn-close.disabled,.btn-close:disabled{pointer-events:none;-webkit-user-select:none;-moz-user-select:none;user-select:none;opacity:var(--bs-btn-close-disabled-opacity)}.btn-close-white{filter:var(--bs-btn-close-white-filter)}[data-bs-theme=dark] .btn-close{filter:var(--bs-btn-close-white-filter)}.toast{--bs-toast-zindex:1090;--bs-toast-padding-x:0.75rem;--bs-toast-padding-y:0.5rem;--bs-toast-spacing:1.5rem;--bs-toast-max-width:350px;--bs-toast-font-size:0.875rem;--bs-toast-color: ;--bs-toast-bg:rgba(var(--bs-body-bg-rgb), 0.85);--bs-toast-border-width:var(--bs-border-width);--bs-toast-border-color:var(--bs-border-color-translucent);--bs-toast-border-radius:var(--bs-border-radius);--bs-toast-box-shadow:var(--bs-box-shadow);--bs-toast-header-color:var(--bs-secondary-color);--bs-toast-header-bg:rgba(var(--bs-body-bg-rgb), 0.85);--bs-toast-header-border-color:var(--bs-border-color-translucent);width:var(--bs-toast-max-width);max-width:100%;font-size:var(--bs-toast-font-size);color:var(--bs-toast-color);pointer-events:auto;background-color:var(--bs-toast-bg);background-clip:padding-box;border:var(--bs-toast-border-width) solid var(--bs-toast-border-color);box-shadow:var(--bs-toast-box-shadow);border-radius:var(--bs-toast-border-radius)}.toast.showing{opacity:0}.toast:not(.show){display:none}.toast-container{--bs-toast-zindex:1090;position:absolute;z-index:var(--bs-toast-zindex);width:-webkit-max-content;width:-moz-max-content;width:max-content;max-width:100%;pointer-events:none}.toast-container>:not(:last-child){margin-bottom:var(--bs-toast-spacing)}.toast-header{display:flex;align-items:center;padding:var(--bs-toast-padding-y) var(--bs-toast-padding-x);color:var(--bs-toast-header-color);background-color:var(--bs-toast-header-bg);background-clip:padding-box;border-bottom:var(--bs-toast-border-width) solid var(--bs-toast-header-border-color);border-top-left-radius:calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width));border-top-right-radius:calc(var(--bs-toast-border-radius) - var(--bs-toast-border-width))}.toast-header .btn-close{margin-right:calc(-.5 * var(--bs-toast-padding-x));margin-left:var(--bs-toast-padding-x)}.toast-body{padding:var(--bs-toast-padding-x);word-wrap:break-word}.modal{--bs-modal-zindex:1055;--bs-modal-width:500px;--bs-modal-padding:1rem;--bs-modal-margin:0.5rem;--bs-modal-color: ;--bs-modal-bg:var(--bs-body-bg);--bs-modal-border-color:var(--bs-border-color-translucent);--bs-modal-border-width:var(--bs-border-width);--bs-modal-border-radius:var(--bs-border-radius-lg);--bs-modal-box-shadow:var(--bs-box-shadow-sm);--bs-modal-inner-border-radius:calc(var(--bs-border-radius-lg) - (var(--bs-border-width)));--bs-modal-header-padding-x:1rem;--bs-modal-header-padding-y:1rem;--bs-modal-header-padding:1rem 1rem;--bs-modal-header-border-color:var(--bs-border-color);--bs-modal-header-border-width:var(--bs-border-width);--bs-modal-title-line-height:1.5;--bs-modal-footer-gap:0.5rem;--bs-modal-footer-bg: ;--bs-modal-footer-border-color:var(--bs-border-color);--bs-modal-footer-border-width:var(--bs-border-width);position:fixed;top:0;left:0;z-index:var(--bs-modal-zindex);display:none;width:100%;height:100%;overflow-x:hidden;overflow-y:auto;outline:0}.modal-dialog{position:relative;width:auto;margin:var(--bs-modal-margin);pointer-events:none}.modal.fade .modal-dialog{transition:transform .3s ease-out;transform:translate(0,-50px)}@media (prefers-reduced-motion:reduce){.modal.fade .modal-dialog{transition:none}}.modal.show .modal-dialog{transform:none}.modal.modal-static .modal-dialog{transform:scale(1.02)}.modal-dialog-scrollable{height:calc(100% - var(--bs-modal-margin) * 2)}.modal-dialog-scrollable .modal-content{max-height:100%;overflow:hidden}.modal-dialog-scrollable .modal-body{overflow-y:auto}.modal-dialog-centered{display:flex;align-items:center;min-height:calc(100% - var(--bs-modal-margin) * 2)}.modal-content{position:relative;display:flex;flex-direction:column;width:100%;color:var(--bs-modal-color);pointer-events:auto;background-color:var(--bs-modal-bg);background-clip:padding-box;border:var(--bs-modal-border-width) solid var(--bs-modal-border-color);border-radius:var(--bs-modal-border-radius);outline:0}.modal-backdrop{--bs-backdrop-zindex:1050;--bs-backdrop-bg:#000;--bs-backdrop-opacity:0.5;position:fixed;top:0;left:0;z-index:var(--bs-backdrop-zindex);width:100vw;height:100vh;background-color:var(--bs-backdrop-bg)}.modal-backdrop.fade{opacity:0}.modal-backdrop.show{opacity:var(--bs-backdrop-opacity)}.modal-header{display:flex;flex-shrink:0;align-items:center;padding:var(--bs-modal-header-padding);border-bottom:var(--bs-modal-header-border-width) solid var(--bs-modal-header-border-color);border-top-left-radius:var(--bs-modal-inner-border-radius);border-top-right-radius:var(--bs-modal-inner-border-radius)}.modal-header .btn-close{padding:calc(var(--bs-modal-header-padding-y) * .5) calc(var(--bs-modal-header-padding-x) * .5);margin:calc(-.5 * var(--bs-modal-header-padding-y)) calc(-.5 * var(--bs-modal-header-padding-x)) calc(-.5 * var(--bs-modal-header-padding-y)) auto}.modal-title{margin-bottom:0;line-height:var(--bs-modal-title-line-height)}.modal-body{position:relative;flex:1 1 auto;padding:var(--bs-modal-padding)}.modal-footer{display:flex;flex-shrink:0;flex-wrap:wrap;align-items:center;justify-content:flex-end;padding:calc(var(--bs-modal-padding) - var(--bs-modal-footer-gap) * .5);background-color:var(--bs-modal-footer-bg);border-top:var(--bs-modal-footer-border-width) solid var(--bs-modal-footer-border-color);border-bottom-right-radius:var(--bs-modal-inner-border-radius);border-bottom-left-radius:var(--bs-modal-inner-border-radius)}.modal-footer>*{margin:calc(var(--bs-modal-footer-gap) * .5)}@media (min-width:576px){.modal{--bs-modal-margin:1.75rem;--bs-modal-box-shadow:var(--bs-box-shadow)}.modal-dialog{max-width:var(--bs-modal-width);margin-right:auto;margin-left:auto}.modal-sm{--bs-modal-width:300px}}@media (min-width:992px){.modal-lg,.modal-xl{--bs-modal-width:800px}}@media (min-width:1200px){.modal-xl{--bs-modal-width:1140px}}.modal-fullscreen{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen .modal-footer,.modal-fullscreen .modal-header{border-radius:0}.modal-fullscreen .modal-body{overflow-y:auto}@media (max-width:575.98px){.modal-fullscreen-sm-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-sm-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-sm-down .modal-footer,.modal-fullscreen-sm-down .modal-header{border-radius:0}.modal-fullscreen-sm-down .modal-body{overflow-y:auto}}@media (max-width:767.98px){.modal-fullscreen-md-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-md-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-md-down .modal-footer,.modal-fullscreen-md-down .modal-header{border-radius:0}.modal-fullscreen-md-down .modal-body{overflow-y:auto}}@media (max-width:991.98px){.modal-fullscreen-lg-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-lg-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-lg-down .modal-footer,.modal-fullscreen-lg-down .modal-header{border-radius:0}.modal-fullscreen-lg-down .modal-body{overflow-y:auto}}@media (max-width:1199.98px){.modal-fullscreen-xl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xl-down .modal-footer,.modal-fullscreen-xl-down .modal-header{border-radius:0}.modal-fullscreen-xl-down .modal-body{overflow-y:auto}}@media (max-width:1399.98px){.modal-fullscreen-xxl-down{width:100vw;max-width:none;height:100%;margin:0}.modal-fullscreen-xxl-down .modal-content{height:100%;border:0;border-radius:0}.modal-fullscreen-xxl-down .modal-footer,.modal-fullscreen-xxl-down .modal-header{border-radius:0}.modal-fullscreen-xxl-down .modal-body{overflow-y:auto}}.tooltip{--bs-tooltip-zindex:1080;--bs-tooltip-max-width:200px;--bs-tooltip-padding-x:0.5rem;--bs-tooltip-padding-y:0.25rem;--bs-tooltip-margin: ;--bs-tooltip-font-size:0.875rem;--bs-tooltip-color:var(--bs-body-bg);--bs-tooltip-bg:var(--bs-emphasis-color);--bs-tooltip-border-radius:var(--bs-border-radius);--bs-tooltip-opacity:0.9;--bs-tooltip-arrow-width:0.8rem;--bs-tooltip-arrow-height:0.4rem;z-index:var(--bs-tooltip-zindex);display:block;margin:var(--bs-tooltip-margin);font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;white-space:normal;word-spacing:normal;line-break:auto;font-size:var(--bs-tooltip-font-size);word-wrap:break-word;opacity:0}.tooltip.show{opacity:var(--bs-tooltip-opacity)}.tooltip .tooltip-arrow{display:block;width:var(--bs-tooltip-arrow-width);height:var(--bs-tooltip-arrow-height)}.tooltip .tooltip-arrow::before{position:absolute;content:"";border-color:transparent;border-style:solid}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow,.bs-tooltip-top .tooltip-arrow{bottom:calc(-1 * var(--bs-tooltip-arrow-height))}.bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before,.bs-tooltip-top .tooltip-arrow::before{top:-1px;border-width:var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * .5) 0;border-top-color:var(--bs-tooltip-bg)}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow,.bs-tooltip-end .tooltip-arrow{left:calc(-1 * var(--bs-tooltip-arrow-height));width:var(--bs-tooltip-arrow-height);height:var(--bs-tooltip-arrow-width)}.bs-tooltip-auto[data-popper-placement^=right] .tooltip-arrow::before,.bs-tooltip-end .tooltip-arrow::before{right:-1px;border-width:calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height) calc(var(--bs-tooltip-arrow-width) * .5) 0;border-right-color:var(--bs-tooltip-bg)}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow,.bs-tooltip-bottom .tooltip-arrow{top:calc(-1 * var(--bs-tooltip-arrow-height))}.bs-tooltip-auto[data-popper-placement^=bottom] .tooltip-arrow::before,.bs-tooltip-bottom .tooltip-arrow::before{bottom:-1px;border-width:0 calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height);border-bottom-color:var(--bs-tooltip-bg)}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow,.bs-tooltip-start .tooltip-arrow{right:calc(-1 * var(--bs-tooltip-arrow-height));width:var(--bs-tooltip-arrow-height);height:var(--bs-tooltip-arrow-width)}.bs-tooltip-auto[data-popper-placement^=left] .tooltip-arrow::before,.bs-tooltip-start .tooltip-arrow::before{left:-1px;border-width:calc(var(--bs-tooltip-arrow-width) * .5) 0 calc(var(--bs-tooltip-arrow-width) * .5) var(--bs-tooltip-arrow-height);border-left-color:var(--bs-tooltip-bg)}.tooltip-inner{max-width:var(--bs-tooltip-max-width);padding:var(--bs-tooltip-padding-y) var(--bs-tooltip-padding-x);color:var(--bs-tooltip-color);text-align:center;background-color:var(--bs-tooltip-bg);border-radius:var(--bs-tooltip-border-radius)}.popover{--bs-popover-zindex:1070;--bs-popover-max-width:276px;--bs-popover-font-size:0.875rem;--bs-popover-bg:var(--bs-body-bg);--bs-popover-border-width:var(--bs-border-width);--bs-popover-border-color:var(--bs-border-color-translucent);--bs-popover-border-radius:var(--bs-border-radius-lg);--bs-popover-inner-border-radius:calc(var(--bs-border-radius-lg) - var(--bs-border-width));--bs-popover-box-shadow:var(--bs-box-shadow);--bs-popover-header-padding-x:1rem;--bs-popover-header-padding-y:0.5rem;--bs-popover-header-font-size:1rem;--bs-popover-header-color:inherit;--bs-popover-header-bg:var(--bs-secondary-bg);--bs-popover-body-padding-x:1rem;--bs-popover-body-padding-y:1rem;--bs-popover-body-color:var(--bs-body-color);--bs-popover-arrow-width:1rem;--bs-popover-arrow-height:0.5rem;--bs-popover-arrow-border:var(--bs-popover-border-color);z-index:var(--bs-popover-zindex);display:block;max-width:var(--bs-popover-max-width);font-family:var(--bs-font-sans-serif);font-style:normal;font-weight:400;line-height:1.5;text-align:left;text-align:start;text-decoration:none;text-shadow:none;text-transform:none;letter-spacing:normal;word-break:normal;white-space:normal;word-spacing:normal;line-break:auto;font-size:var(--bs-popover-font-size);word-wrap:break-word;background-color:var(--bs-popover-bg);background-clip:padding-box;border:var(--bs-popover-border-width) solid var(--bs-popover-border-color);border-radius:var(--bs-popover-border-radius)}.popover .popover-arrow{display:block;width:var(--bs-popover-arrow-width);height:var(--bs-popover-arrow-height)}.popover .popover-arrow::after,.popover .popover-arrow::before{position:absolute;display:block;content:"";border-color:transparent;border-style:solid;border-width:0}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow,.bs-popover-top>.popover-arrow{bottom:calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width))}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::after,.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::before,.bs-popover-top>.popover-arrow::after,.bs-popover-top>.popover-arrow::before{border-width:var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * .5) 0}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::before,.bs-popover-top>.popover-arrow::before{bottom:0;border-top-color:var(--bs-popover-arrow-border)}.bs-popover-auto[data-popper-placement^=top]>.popover-arrow::after,.bs-popover-top>.popover-arrow::after{bottom:var(--bs-popover-border-width);border-top-color:var(--bs-popover-bg)}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow,.bs-popover-end>.popover-arrow{left:calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));width:var(--bs-popover-arrow-height);height:var(--bs-popover-arrow-width)}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::after,.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::before,.bs-popover-end>.popover-arrow::after,.bs-popover-end>.popover-arrow::before{border-width:calc(var(--bs-popover-arrow-width) * .5) var(--bs-popover-arrow-height) calc(var(--bs-popover-arrow-width) * .5) 0}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::before,.bs-popover-end>.popover-arrow::before{left:0;border-right-color:var(--bs-popover-arrow-border)}.bs-popover-auto[data-popper-placement^=right]>.popover-arrow::after,.bs-popover-end>.popover-arrow::after{left:var(--bs-popover-border-width);border-right-color:var(--bs-popover-bg)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow,.bs-popover-bottom>.popover-arrow{top:calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width))}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::after,.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::before,.bs-popover-bottom>.popover-arrow::after,.bs-popover-bottom>.popover-arrow::before{border-width:0 calc(var(--bs-popover-arrow-width) * .5) var(--bs-popover-arrow-height)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::before,.bs-popover-bottom>.popover-arrow::before{top:0;border-bottom-color:var(--bs-popover-arrow-border)}.bs-popover-auto[data-popper-placement^=bottom]>.popover-arrow::after,.bs-popover-bottom>.popover-arrow::after{top:var(--bs-popover-border-width);border-bottom-color:var(--bs-popover-bg)}.bs-popover-auto[data-popper-placement^=bottom] .popover-header::before,.bs-popover-bottom .popover-header::before{position:absolute;top:0;left:50%;display:block;width:var(--bs-popover-arrow-width);margin-left:calc(-.5 * var(--bs-popover-arrow-width));content:"";border-bottom:var(--bs-popover-border-width) solid var(--bs-popover-header-bg)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow,.bs-popover-start>.popover-arrow{right:calc(-1 * (var(--bs-popover-arrow-height)) - var(--bs-popover-border-width));width:var(--bs-popover-arrow-height);height:var(--bs-popover-arrow-width)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::after,.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::before,.bs-popover-start>.popover-arrow::after,.bs-popover-start>.popover-arrow::before{border-width:calc(var(--bs-popover-arrow-width) * .5) 0 calc(var(--bs-popover-arrow-width) * .5) var(--bs-popover-arrow-height)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::before,.bs-popover-start>.popover-arrow::before{right:0;border-left-color:var(--bs-popover-arrow-border)}.bs-popover-auto[data-popper-placement^=left]>.popover-arrow::after,.bs-popover-start>.popover-arrow::after{right:var(--bs-popover-border-width);border-left-color:var(--bs-popover-bg)}.popover-header{padding:var(--bs-popover-header-padding-y) var(--bs-popover-header-padding-x);margin-bottom:0;font-size:var(--bs-popover-header-font-size);color:var(--bs-popover-header-color);background-color:var(--bs-popover-header-bg);border-bottom:var(--bs-popover-border-width) solid var(--bs-popover-border-color);border-top-left-radius:var(--bs-popover-inner-border-radius);border-top-right-radius:var(--bs-popover-inner-border-radius)}.popover-header:empty{display:none}.popover-body{padding:var(--bs-popover-body-padding-y) var(--bs-popover-body-padding-x);color:var(--bs-popover-body-color)}.carousel{position:relative}.carousel.pointer-event{touch-action:pan-y}.carousel-inner{position:relative;width:100%;overflow:hidden}.carousel-inner::after{display:block;clear:both;content:""}.carousel-item{position:relative;display:none;float:left;width:100%;margin-right:-100%;-webkit-backface-visibility:hidden;backface-visibility:hidden;transition:transform .6s ease-in-out}@media (prefers-reduced-motion:reduce){.carousel-item{transition:none}}.carousel-item-next,.carousel-item-prev,.carousel-item.active{display:block}.active.carousel-item-end,.carousel-item-next:not(.carousel-item-start){transform:translateX(100%)}.active.carousel-item-start,.carousel-item-prev:not(.carousel-item-end){transform:translateX(-100%)}.carousel-fade .carousel-item{opacity:0;transition-property:opacity;transform:none}.carousel-fade .carousel-item-next.carousel-item-start,.carousel-fade .carousel-item-prev.carousel-item-end,.carousel-fade .carousel-item.active{z-index:1;opacity:1}.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{z-index:0;opacity:0;transition:opacity 0s .6s}@media (prefers-reduced-motion:reduce){.carousel-fade .active.carousel-item-end,.carousel-fade .active.carousel-item-start{transition:none}}.carousel-control-next,.carousel-control-prev{position:absolute;top:0;bottom:0;z-index:1;display:flex;align-items:center;justify-content:center;width:15%;padding:0;color:#fff;text-align:center;background:0 0;border:0;opacity:.5;transition:opacity .15s ease}@media (prefers-reduced-motion:reduce){.carousel-control-next,.carousel-control-prev{transition:none}}.carousel-control-next:focus,.carousel-control-next:hover,.carousel-control-prev:focus,.carousel-control-prev:hover{color:#fff;text-decoration:none;outline:0;opacity:.9}.carousel-control-prev{left:0}.carousel-control-next{right:0}.carousel-control-next-icon,.carousel-control-prev-icon{display:inline-block;width:2rem;height:2rem;background-repeat:no-repeat;background-position:50%;background-size:100% 100%}.carousel-control-prev-icon{background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z'/%3e%3c/svg%3e")}.carousel-control-next-icon{background-image:url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='%23fff'%3e%3cpath d='M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z'/%3e%3c/svg%3e")}.carousel-indicators{position:absolute;right:0;bottom:0;left:0;z-index:2;display:flex;justify-content:center;padding:0;margin-right:15%;margin-bottom:1rem;margin-left:15%}.carousel-indicators [data-bs-target]{box-sizing:content-box;flex:0 1 auto;width:30px;height:3px;padding:0;margin-right:3px;margin-left:3px;text-indent:-999px;cursor:pointer;background-color:#fff;background-clip:padding-box;border:0;border-top:10px solid transparent;border-bottom:10px solid transparent;opacity:.5;transition:opacity .6s ease}@media (prefers-reduced-motion:reduce){.carousel-indicators [data-bs-target]{transition:none}}.carousel-indicators .active{opacity:1}.carousel-caption{position:absolute;right:15%;bottom:1.25rem;left:15%;padding-top:1.25rem;padding-bottom:1.25rem;color:#fff;text-align:center}.carousel-dark .carousel-control-next-icon,.carousel-dark .carousel-control-prev-icon{filter:invert(1) grayscale(100)}.carousel-dark .carousel-indicators [data-bs-target]{background-color:#000}.carousel-dark .carousel-caption{color:#000}[data-bs-theme=dark] .carousel .carousel-control-next-icon,[data-bs-theme=dark] .carousel .carousel-control-prev-icon,[data-bs-theme=dark].carousel .carousel-control-next-icon,[data-bs-theme=dark].carousel .carousel-control-prev-icon{filter:invert(1) grayscale(100)}[data-bs-theme=dark] .carousel .carousel-indicators [data-bs-target],[data-bs-theme=dark].carousel .carousel-indicators [data-bs-target]{background-color:#000}[data-bs-theme=dark] .carousel .carousel-caption,[data-bs-theme=dark].carousel .carousel-caption{color:#000}.spinner-border,.spinner-grow{display:inline-block;width:var(--bs-spinner-width);height:var(--bs-spinner-height);vertical-align:var(--bs-spinner-vertical-align);border-radius:50%;animation:var(--bs-spinner-animation-speed) linear infinite var(--bs-spinner-animation-name)}@keyframes spinner-border{to{transform:rotate(360deg)}}.spinner-border{--bs-spinner-width:2rem;--bs-spinner-height:2rem;--bs-spinner-vertical-align:-0.125em;--bs-spinner-border-width:0.25em;--bs-spinner-animation-speed:0.75s;--bs-spinner-animation-name:spinner-border;border:var(--bs-spinner-border-width) solid currentcolor;border-right-color:transparent}.spinner-border-sm{--bs-spinner-width:1rem;--bs-spinner-height:1rem;--bs-spinner-border-width:0.2em}@keyframes spinner-grow{0%{transform:scale(0)}50%{opacity:1;transform:none}}.spinner-grow{--bs-spinner-width:2rem;--bs-spinner-height:2rem;--bs-spinner-vertical-align:-0.125em;--bs-spinner-animation-speed:0.75s;--bs-spinner-animation-name:spinner-grow;background-color:currentcolor;opacity:0}.spinner-grow-sm{--bs-spinner-width:1rem;--bs-spinner-height:1rem}@media (prefers-reduced-motion:reduce){.spinner-border,.spinner-grow{--bs-spinner-animation-speed:1.5s}}.offcanvas,.offcanvas-lg,.offcanvas-md,.offcanvas-sm,.offcanvas-xl,.offcanvas-xxl{--bs-offcanvas-zindex:1045;--bs-offcanvas-width:400px;--bs-offcanvas-height:30vh;--bs-offcanvas-padding-x:1rem;--bs-offcanvas-padding-y:1rem;--bs-offcanvas-color:var(--bs-body-color);--bs-offcanvas-bg:var(--bs-body-bg);--bs-offcanvas-border-width:var(--bs-border-width);--bs-offcanvas-border-color:var(--bs-border-color-translucent);--bs-offcanvas-box-shadow:var(--bs-box-shadow-sm);--bs-offcanvas-transition:transform 0.3s ease-in-out;--bs-offcanvas-title-line-height:1.5}@media (max-width:575.98px){.offcanvas-sm{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}}@media (max-width:575.98px) and (prefers-reduced-motion:reduce){.offcanvas-sm{transition:none}}@media (max-width:575.98px){.offcanvas-sm.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas-sm.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas-sm.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas-sm.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas-sm.show:not(.hiding),.offcanvas-sm.showing{transform:none}.offcanvas-sm.hiding,.offcanvas-sm.show,.offcanvas-sm.showing{visibility:visible}}@media (min-width:576px){.offcanvas-sm{--bs-offcanvas-height:auto;--bs-offcanvas-border-width:0;background-color:transparent!important}.offcanvas-sm .offcanvas-header{display:none}.offcanvas-sm .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible;background-color:transparent!important}}@media (max-width:767.98px){.offcanvas-md{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}}@media (max-width:767.98px) and (prefers-reduced-motion:reduce){.offcanvas-md{transition:none}}@media (max-width:767.98px){.offcanvas-md.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas-md.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas-md.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas-md.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas-md.show:not(.hiding),.offcanvas-md.showing{transform:none}.offcanvas-md.hiding,.offcanvas-md.show,.offcanvas-md.showing{visibility:visible}}@media (min-width:768px){.offcanvas-md{--bs-offcanvas-height:auto;--bs-offcanvas-border-width:0;background-color:transparent!important}.offcanvas-md .offcanvas-header{display:none}.offcanvas-md .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible;background-color:transparent!important}}@media (max-width:991.98px){.offcanvas-lg{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}}@media (max-width:991.98px) and (prefers-reduced-motion:reduce){.offcanvas-lg{transition:none}}@media (max-width:991.98px){.offcanvas-lg.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas-lg.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas-lg.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas-lg.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas-lg.show:not(.hiding),.offcanvas-lg.showing{transform:none}.offcanvas-lg.hiding,.offcanvas-lg.show,.offcanvas-lg.showing{visibility:visible}}@media (min-width:992px){.offcanvas-lg{--bs-offcanvas-height:auto;--bs-offcanvas-border-width:0;background-color:transparent!important}.offcanvas-lg .offcanvas-header{display:none}.offcanvas-lg .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible;background-color:transparent!important}}@media (max-width:1199.98px){.offcanvas-xl{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}}@media (max-width:1199.98px) and (prefers-reduced-motion:reduce){.offcanvas-xl{transition:none}}@media (max-width:1199.98px){.offcanvas-xl.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas-xl.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas-xl.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas-xl.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas-xl.show:not(.hiding),.offcanvas-xl.showing{transform:none}.offcanvas-xl.hiding,.offcanvas-xl.show,.offcanvas-xl.showing{visibility:visible}}@media (min-width:1200px){.offcanvas-xl{--bs-offcanvas-height:auto;--bs-offcanvas-border-width:0;background-color:transparent!important}.offcanvas-xl .offcanvas-header{display:none}.offcanvas-xl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible;background-color:transparent!important}}@media (max-width:1399.98px){.offcanvas-xxl{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}}@media (max-width:1399.98px) and (prefers-reduced-motion:reduce){.offcanvas-xxl{transition:none}}@media (max-width:1399.98px){.offcanvas-xxl.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas-xxl.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas-xxl.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas-xxl.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas-xxl.show:not(.hiding),.offcanvas-xxl.showing{transform:none}.offcanvas-xxl.hiding,.offcanvas-xxl.show,.offcanvas-xxl.showing{visibility:visible}}@media (min-width:1400px){.offcanvas-xxl{--bs-offcanvas-height:auto;--bs-offcanvas-border-width:0;background-color:transparent!important}.offcanvas-xxl .offcanvas-header{display:none}.offcanvas-xxl .offcanvas-body{display:flex;flex-grow:0;padding:0;overflow-y:visible;background-color:transparent!important}}.offcanvas{position:fixed;bottom:0;z-index:var(--bs-offcanvas-zindex);display:flex;flex-direction:column;max-width:100%;color:var(--bs-offcanvas-color);visibility:hidden;background-color:var(--bs-offcanvas-bg);background-clip:padding-box;outline:0;transition:var(--bs-offcanvas-transition)}@media (prefers-reduced-motion:reduce){.offcanvas{transition:none}}.offcanvas.offcanvas-start{top:0;left:0;width:var(--bs-offcanvas-width);border-right:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(-100%)}.offcanvas.offcanvas-end{top:0;right:0;width:var(--bs-offcanvas-width);border-left:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateX(100%)}.offcanvas.offcanvas-top{top:0;right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-bottom:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(-100%)}.offcanvas.offcanvas-bottom{right:0;left:0;height:var(--bs-offcanvas-height);max-height:100%;border-top:var(--bs-offcanvas-border-width) solid var(--bs-offcanvas-border-color);transform:translateY(100%)}.offcanvas.show:not(.hiding),.offcanvas.showing{transform:none}.offcanvas.hiding,.offcanvas.show,.offcanvas.showing{visibility:visible}.offcanvas-backdrop{position:fixed;top:0;left:0;z-index:1040;width:100vw;height:100vh;background-color:#000}.offcanvas-backdrop.fade{opacity:0}.offcanvas-backdrop.show{opacity:.5}.offcanvas-header{display:flex;align-items:center;padding:var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x)}.offcanvas-header .btn-close{padding:calc(var(--bs-offcanvas-padding-y) * .5) calc(var(--bs-offcanvas-padding-x) * .5);margin:calc(-.5 * var(--bs-offcanvas-padding-y)) calc(-.5 * var(--bs-offcanvas-padding-x)) calc(-.5 * var(--bs-offcanvas-padding-y)) auto}.offcanvas-title{margin-bottom:0;line-height:var(--bs-offcanvas-title-line-height)}.offcanvas-body{flex-grow:1;padding:var(--bs-offcanvas-padding-y) var(--bs-offcanvas-padding-x);overflow-y:auto}.placeholder{display:inline-block;min-height:1em;vertical-align:middle;cursor:wait;background-color:currentcolor;opacity:.5}.placeholder.btn::before{display:inline-block;content:""}.placeholder-xs{min-height:.6em}.placeholder-sm{min-height:.8em}.placeholder-lg{min-height:1.2em}.placeholder-glow .placeholder{animation:placeholder-glow 2s ease-in-out infinite}@keyframes placeholder-glow{50%{opacity:.2}}.placeholder-wave{-webkit-mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);mask-image:linear-gradient(130deg,#000 55%,rgba(0,0,0,0.8) 75%,#000 95%);-webkit-mask-size:200% 100%;mask-size:200% 100%;animation:placeholder-wave 2s linear infinite}@keyframes placeholder-wave{100%{-webkit-mask-position:-200% 0%;mask-position:-200% 0%}}.clearfix::after{display:block;clear:both;content:""}.text-bg-primary{color:#fff!important;background-color:RGBA(var(--bs-primary-rgb),var(--bs-bg-opacity,1))!important}.text-bg-secondary{color:#fff!important;background-color:RGBA(var(--bs-secondary-rgb),var(--bs-bg-opacity,1))!important}.text-bg-success{color:#fff!important;background-color:RGBA(var(--bs-success-rgb),var(--bs-bg-opacity,1))!important}.text-bg-info{color:#000!important;background-color:RGBA(var(--bs-info-rgb),var(--bs-bg-opacity,1))!important}.text-bg-warning{color:#000!important;background-color:RGBA(var(--bs-warning-rgb),var(--bs-bg-opacity,1))!important}.text-bg-danger{color:#fff!important;background-color:RGBA(var(--bs-danger-rgb),var(--bs-bg-opacity,1))!important}.text-bg-light{color:#000!important;background-color:RGBA(var(--bs-light-rgb),var(--bs-bg-opacity,1))!important}.text-bg-dark{color:#fff!important;background-color:RGBA(var(--bs-dark-rgb),var(--bs-bg-opacity,1))!important}.link-primary{color:RGBA(var(--bs-primary-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-primary-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-primary-rgb),var(--bs-link-underline-opacity,1))!important}.link-primary:focus,.link-primary:hover{color:RGBA(10,88,202,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(10,88,202,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(10,88,202,var(--bs-link-underline-opacity,1))!important}.link-secondary{color:RGBA(var(--bs-secondary-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-secondary-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-secondary-rgb),var(--bs-link-underline-opacity,1))!important}.link-secondary:focus,.link-secondary:hover{color:RGBA(86,94,100,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(86,94,100,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(86,94,100,var(--bs-link-underline-opacity,1))!important}.link-success{color:RGBA(var(--bs-success-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-success-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-success-rgb),var(--bs-link-underline-opacity,1))!important}.link-success:focus,.link-success:hover{color:RGBA(20,108,67,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(20,108,67,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(20,108,67,var(--bs-link-underline-opacity,1))!important}.link-info{color:RGBA(var(--bs-info-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-info-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-info-rgb),var(--bs-link-underline-opacity,1))!important}.link-info:focus,.link-info:hover{color:RGBA(61,213,243,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(61,213,243,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(61,213,243,var(--bs-link-underline-opacity,1))!important}.link-warning{color:RGBA(var(--bs-warning-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-warning-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-warning-rgb),var(--bs-link-underline-opacity,1))!important}.link-warning:focus,.link-warning:hover{color:RGBA(255,205,57,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(255,205,57,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(255,205,57,var(--bs-link-underline-opacity,1))!important}.link-danger{color:RGBA(var(--bs-danger-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-danger-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-danger-rgb),var(--bs-link-underline-opacity,1))!important}.link-danger:focus,.link-danger:hover{color:RGBA(176,42,55,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(176,42,55,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(176,42,55,var(--bs-link-underline-opacity,1))!important}.link-light{color:RGBA(var(--bs-light-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-light-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-light-rgb),var(--bs-link-underline-opacity,1))!important}.link-light:focus,.link-light:hover{color:RGBA(249,250,251,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(249,250,251,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(249,250,251,var(--bs-link-underline-opacity,1))!important}.link-dark{color:RGBA(var(--bs-dark-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-dark-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-dark-rgb),var(--bs-link-underline-opacity,1))!important}.link-dark:focus,.link-dark:hover{color:RGBA(26,30,33,var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(26,30,33,var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(26,30,33,var(--bs-link-underline-opacity,1))!important}.link-body-emphasis{color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-opacity,1))!important;-webkit-text-decoration-color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-underline-opacity,1))!important}.link-body-emphasis:focus,.link-body-emphasis:hover{color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-opacity,.75))!important;-webkit-text-decoration-color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-underline-opacity,0.75))!important;text-decoration-color:RGBA(var(--bs-emphasis-color-rgb),var(--bs-link-underline-opacity,0.75))!important}.focus-ring:focus{outline:0;box-shadow:var(--bs-focus-ring-x,0) var(--bs-focus-ring-y,0) var(--bs-focus-ring-blur,0) var(--bs-focus-ring-width) var(--bs-focus-ring-color)}.icon-link{display:inline-flex;gap:.375rem;align-items:center;-webkit-text-decoration-color:rgba(var(--bs-link-color-rgb),var(--bs-link-opacity,0.5));text-decoration-color:rgba(var(--bs-link-color-rgb),var(--bs-link-opacity,0.5));text-underline-offset:0.25em;-webkit-backface-visibility:hidden;backface-visibility:hidden}.icon-link>.bi{flex-shrink:0;width:1em;height:1em;fill:currentcolor;transition:.2s ease-in-out transform}@media (prefers-reduced-motion:reduce){.icon-link>.bi{transition:none}}.icon-link-hover:focus-visible>.bi,.icon-link-hover:hover>.bi{transform:var(--bs-icon-link-transform,translate3d(.25em,0,0))}.ratio{position:relative;width:100%}.ratio::before{display:block;padding-top:var(--bs-aspect-ratio);content:""}.ratio>*{position:absolute;top:0;left:0;width:100%;height:100%}.ratio-1x1{--bs-aspect-ratio:100%}.ratio-4x3{--bs-aspect-ratio:75%}.ratio-16x9{--bs-aspect-ratio:56.25%}.ratio-21x9{--bs-aspect-ratio:42.8571428571%}.fixed-top{position:fixed;top:0;right:0;left:0;z-index:1030}.fixed-bottom{position:fixed;right:0;bottom:0;left:0;z-index:1030}.sticky-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}@media (min-width:576px){.sticky-sm-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-sm-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:768px){.sticky-md-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-md-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:992px){.sticky-lg-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-lg-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:1200px){.sticky-xl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-xl-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}@media (min-width:1400px){.sticky-xxl-top{position:-webkit-sticky;position:sticky;top:0;z-index:1020}.sticky-xxl-bottom{position:-webkit-sticky;position:sticky;bottom:0;z-index:1020}}.hstack{display:flex;flex-direction:row;align-items:center;align-self:stretch}.vstack{display:flex;flex:1 1 auto;flex-direction:column;align-self:stretch}.visually-hidden,.visually-hidden-focusable:not(:focus):not(:focus-within){width:1px!important;height:1px!important;padding:0!important;margin:-1px!important;overflow:hidden!important;clip:rect(0,0,0,0)!important;white-space:nowrap!important;border:0!important}.visually-hidden-focusable:not(:focus):not(:focus-within):not(caption),.visually-hidden:not(caption){position:absolute!important}.stretched-link::after{position:absolute;top:0;right:0;bottom:0;left:0;z-index:1;content:""}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.vr{display:inline-block;align-self:stretch;width:var(--bs-border-width);min-height:1em;background-color:currentcolor;opacity:.25}.align-baseline{vertical-align:baseline!important}.align-top{vertical-align:top!important}.align-middle{vertical-align:middle!important}.align-bottom{vertical-align:bottom!important}.align-text-bottom{vertical-align:text-bottom!important}.align-text-top{vertical-align:text-top!important}.float-start{float:left!important}.float-end{float:right!important}.float-none{float:none!important}.object-fit-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-none{-o-object-fit:none!important;object-fit:none!important}.opacity-0{opacity:0!important}.opacity-25{opacity:.25!important}.opacity-50{opacity:.5!important}.opacity-75{opacity:.75!important}.opacity-100{opacity:1!important}.overflow-auto{overflow:auto!important}.overflow-hidden{overflow:hidden!important}.overflow-visible{overflow:visible!important}.overflow-scroll{overflow:scroll!important}.overflow-x-auto{overflow-x:auto!important}.overflow-x-hidden{overflow-x:hidden!important}.overflow-x-visible{overflow-x:visible!important}.overflow-x-scroll{overflow-x:scroll!important}.overflow-y-auto{overflow-y:auto!important}.overflow-y-hidden{overflow-y:hidden!important}.overflow-y-visible{overflow-y:visible!important}.overflow-y-scroll{overflow-y:scroll!important}.d-inline{display:inline!important}.d-inline-block{display:inline-block!important}.d-block{display:block!important}.d-grid{display:grid!important}.d-inline-grid{display:inline-grid!important}.d-table{display:table!important}.d-table-row{display:table-row!important}.d-table-cell{display:table-cell!important}.d-flex{display:flex!important}.d-inline-flex{display:inline-flex!important}.d-none{display:none!important}.shadow{box-shadow:var(--bs-box-shadow)!important}.shadow-sm{box-shadow:var(--bs-box-shadow-sm)!important}.shadow-lg{box-shadow:var(--bs-box-shadow-lg)!important}.shadow-none{box-shadow:none!important}.focus-ring-primary{--bs-focus-ring-color:rgba(var(--bs-primary-rgb), var(--bs-focus-ring-opacity))}.focus-ring-secondary{--bs-focus-ring-color:rgba(var(--bs-secondary-rgb), var(--bs-focus-ring-opacity))}.focus-ring-success{--bs-focus-ring-color:rgba(var(--bs-success-rgb), var(--bs-focus-ring-opacity))}.focus-ring-info{--bs-focus-ring-color:rgba(var(--bs-info-rgb), var(--bs-focus-ring-opacity))}.focus-ring-warning{--bs-focus-ring-color:rgba(var(--bs-warning-rgb), var(--bs-focus-ring-opacity))}.focus-ring-danger{--bs-focus-ring-color:rgba(var(--bs-danger-rgb), var(--bs-focus-ring-opacity))}.focus-ring-light{--bs-focus-ring-color:rgba(var(--bs-light-rgb), var(--bs-focus-ring-opacity))}.focus-ring-dark{--bs-focus-ring-color:rgba(var(--bs-dark-rgb), var(--bs-focus-ring-opacity))}.position-static{position:static!important}.position-relative{position:relative!important}.position-absolute{position:absolute!important}.position-fixed{position:fixed!important}.position-sticky{position:-webkit-sticky!important;position:sticky!important}.top-0{top:0!important}.top-50{top:50%!important}.top-100{top:100%!important}.bottom-0{bottom:0!important}.bottom-50{bottom:50%!important}.bottom-100{bottom:100%!important}.start-0{left:0!important}.start-50{left:50%!important}.start-100{left:100%!important}.end-0{right:0!important}.end-50{right:50%!important}.end-100{right:100%!important}.translate-middle{transform:translate(-50%,-50%)!important}.translate-middle-x{transform:translateX(-50%)!important}.translate-middle-y{transform:translateY(-50%)!important}.border{border:var(--bs-border-width) var(--bs-border-style) var(--bs-border-color)!important}.border-0{border:0!important}.border-top{border-top:var(--bs-border-width) var(--bs-border-style) var(--bs-border-color)!important}.border-top-0{border-top:0!important}.border-end{border-right:var(--bs-border-width) var(--bs-border-style) var(--bs-border-color)!important}.border-end-0{border-right:0!important}.border-bottom{border-bottom:var(--bs-border-width) var(--bs-border-style) var(--bs-border-color)!important}.border-bottom-0{border-bottom:0!important}.border-start{border-left:var(--bs-border-width) var(--bs-border-style) var(--bs-border-color)!important}.border-start-0{border-left:0!important}.border-primary{--bs-border-opacity:1;border-color:rgba(var(--bs-primary-rgb),var(--bs-border-opacity))!important}.border-secondary{--bs-border-opacity:1;border-color:rgba(var(--bs-secondary-rgb),var(--bs-border-opacity))!important}.border-success{--bs-border-opacity:1;border-color:rgba(var(--bs-success-rgb),var(--bs-border-opacity))!important}.border-info{--bs-border-opacity:1;border-color:rgba(var(--bs-info-rgb),var(--bs-border-opacity))!important}.border-warning{--bs-border-opacity:1;border-color:rgba(var(--bs-warning-rgb),var(--bs-border-opacity))!important}.border-danger{--bs-border-opacity:1;border-color:rgba(var(--bs-danger-rgb),var(--bs-border-opacity))!important}.border-light{--bs-border-opacity:1;border-color:rgba(var(--bs-light-rgb),var(--bs-border-opacity))!important}.border-dark{--bs-border-opacity:1;border-color:rgba(var(--bs-dark-rgb),var(--bs-border-opacity))!important}.border-black{--bs-border-opacity:1;border-color:rgba(var(--bs-black-rgb),var(--bs-border-opacity))!important}.border-white{--bs-border-opacity:1;border-color:rgba(var(--bs-white-rgb),var(--bs-border-opacity))!important}.border-primary-subtle{border-color:var(--bs-primary-border-subtle)!important}.border-secondary-subtle{border-color:var(--bs-secondary-border-subtle)!important}.border-success-subtle{border-color:var(--bs-success-border-subtle)!important}.border-info-subtle{border-color:var(--bs-info-border-subtle)!important}.border-warning-subtle{border-color:var(--bs-warning-border-subtle)!important}.border-danger-subtle{border-color:var(--bs-danger-border-subtle)!important}.border-light-subtle{border-color:var(--bs-light-border-subtle)!important}.border-dark-subtle{border-color:var(--bs-dark-border-subtle)!important}.border-1{border-width:1px!important}.border-2{border-width:2px!important}.border-3{border-width:3px!important}.border-4{border-width:4px!important}.border-5{border-width:5px!important}.border-opacity-10{--bs-border-opacity:0.1}.border-opacity-25{--bs-border-opacity:0.25}.border-opacity-50{--bs-border-opacity:0.5}.border-opacity-75{--bs-border-opacity:0.75}.border-opacity-100{--bs-border-opacity:1}.w-25{width:25%!important}.w-50{width:50%!important}.w-75{width:75%!important}.w-100{width:100%!important}.w-auto{width:auto!important}.mw-100{max-width:100%!important}.vw-100{width:100vw!important}.min-vw-100{min-width:100vw!important}.h-25{height:25%!important}.h-50{height:50%!important}.h-75{height:75%!important}.h-100{height:100%!important}.h-auto{height:auto!important}.mh-100{max-height:100%!important}.vh-100{height:100vh!important}.min-vh-100{min-height:100vh!important}.flex-fill{flex:1 1 auto!important}.flex-row{flex-direction:row!important}.flex-column{flex-direction:column!important}.flex-row-reverse{flex-direction:row-reverse!important}.flex-column-reverse{flex-direction:column-reverse!important}.flex-grow-0{flex-grow:0!important}.flex-grow-1{flex-grow:1!important}.flex-shrink-0{flex-shrink:0!important}.flex-shrink-1{flex-shrink:1!important}.flex-wrap{flex-wrap:wrap!important}.flex-nowrap{flex-wrap:nowrap!important}.flex-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-start{justify-content:flex-start!important}.justify-content-end{justify-content:flex-end!important}.justify-content-center{justify-content:center!important}.justify-content-between{justify-content:space-between!important}.justify-content-around{justify-content:space-around!important}.justify-content-evenly{justify-content:space-evenly!important}.align-items-start{align-items:flex-start!important}.align-items-end{align-items:flex-end!important}.align-items-center{align-items:center!important}.align-items-baseline{align-items:baseline!important}.align-items-stretch{align-items:stretch!important}.align-content-start{align-content:flex-start!important}.align-content-end{align-content:flex-end!important}.align-content-center{align-content:center!important}.align-content-between{align-content:space-between!important}.align-content-around{align-content:space-around!important}.align-content-stretch{align-content:stretch!important}.align-self-auto{align-self:auto!important}.align-self-start{align-self:flex-start!important}.align-self-end{align-self:flex-end!important}.align-self-center{align-self:center!important}.align-self-baseline{align-self:baseline!important}.align-self-stretch{align-self:stretch!important}.order-first{order:-1!important}.order-0{order:0!important}.order-1{order:1!important}.order-2{order:2!important}.order-3{order:3!important}.order-4{order:4!important}.order-5{order:5!important}.order-last{order:6!important}.m-0{margin:0!important}.m-1{margin:.25rem!important}.m-2{margin:.5rem!important}.m-3{margin:1rem!important}.m-4{margin:1.5rem!important}.m-5{margin:3rem!important}.m-auto{margin:auto!important}.mx-0{margin-right:0!important;margin-left:0!important}.mx-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-3{margin-right:1rem!important;margin-left:1rem!important}.mx-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-5{margin-right:3rem!important;margin-left:3rem!important}.mx-auto{margin-right:auto!important;margin-left:auto!important}.my-0{margin-top:0!important;margin-bottom:0!important}.my-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-0{margin-top:0!important}.mt-1{margin-top:.25rem!important}.mt-2{margin-top:.5rem!important}.mt-3{margin-top:1rem!important}.mt-4{margin-top:1.5rem!important}.mt-5{margin-top:3rem!important}.mt-auto{margin-top:auto!important}.me-0{margin-right:0!important}.me-1{margin-right:.25rem!important}.me-2{margin-right:.5rem!important}.me-3{margin-right:1rem!important}.me-4{margin-right:1.5rem!important}.me-5{margin-right:3rem!important}.me-auto{margin-right:auto!important}.mb-0{margin-bottom:0!important}.mb-1{margin-bottom:.25rem!important}.mb-2{margin-bottom:.5rem!important}.mb-3{margin-bottom:1rem!important}.mb-4{margin-bottom:1.5rem!important}.mb-5{margin-bottom:3rem!important}.mb-auto{margin-bottom:auto!important}.ms-0{margin-left:0!important}.ms-1{margin-left:.25rem!important}.ms-2{margin-left:.5rem!important}.ms-3{margin-left:1rem!important}.ms-4{margin-left:1.5rem!important}.ms-5{margin-left:3rem!important}.ms-auto{margin-left:auto!important}.p-0{padding:0!important}.p-1{padding:.25rem!important}.p-2{padding:.5rem!important}.p-3{padding:1rem!important}.p-4{padding:1.5rem!important}.p-5{padding:3rem!important}.px-0{padding-right:0!important;padding-left:0!important}.px-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-3{padding-right:1rem!important;padding-left:1rem!important}.px-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-5{padding-right:3rem!important;padding-left:3rem!important}.py-0{padding-top:0!important;padding-bottom:0!important}.py-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-0{padding-top:0!important}.pt-1{padding-top:.25rem!important}.pt-2{padding-top:.5rem!important}.pt-3{padding-top:1rem!important}.pt-4{padding-top:1.5rem!important}.pt-5{padding-top:3rem!important}.pe-0{padding-right:0!important}.pe-1{padding-right:.25rem!important}.pe-2{padding-right:.5rem!important}.pe-3{padding-right:1rem!important}.pe-4{padding-right:1.5rem!important}.pe-5{padding-right:3rem!important}.pb-0{padding-bottom:0!important}.pb-1{padding-bottom:.25rem!important}.pb-2{padding-bottom:.5rem!important}.pb-3{padding-bottom:1rem!important}.pb-4{padding-bottom:1.5rem!important}.pb-5{padding-bottom:3rem!important}.ps-0{padding-left:0!important}.ps-1{padding-left:.25rem!important}.ps-2{padding-left:.5rem!important}.ps-3{padding-left:1rem!important}.ps-4{padding-left:1.5rem!important}.ps-5{padding-left:3rem!important}.gap-0{gap:0!important}.gap-1{gap:.25rem!important}.gap-2{gap:.5rem!important}.gap-3{gap:1rem!important}.gap-4{gap:1.5rem!important}.gap-5{gap:3rem!important}.row-gap-0{row-gap:0!important}.row-gap-1{row-gap:.25rem!important}.row-gap-2{row-gap:.5rem!important}.row-gap-3{row-gap:1rem!important}.row-gap-4{row-gap:1.5rem!important}.row-gap-5{row-gap:3rem!important}.column-gap-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.font-monospace{font-family:var(--bs-font-monospace)!important}.fs-1{font-size:calc(1.375rem + 1.5vw)!important}.fs-2{font-size:calc(1.325rem + .9vw)!important}.fs-3{font-size:calc(1.3rem + .6vw)!important}.fs-4{font-size:calc(1.275rem + .3vw)!important}.fs-5{font-size:1.25rem!important}.fs-6{font-size:1rem!important}.fst-italic{font-style:italic!important}.fst-normal{font-style:normal!important}.fw-lighter{font-weight:lighter!important}.fw-light{font-weight:300!important}.fw-normal{font-weight:400!important}.fw-medium{font-weight:500!important}.fw-semibold{font-weight:600!important}.fw-bold{font-weight:700!important}.fw-bolder{font-weight:bolder!important}.lh-1{line-height:1!important}.lh-sm{line-height:1.25!important}.lh-base{line-height:1.5!important}.lh-lg{line-height:2!important}.text-start{text-align:left!important}.text-end{text-align:right!important}.text-center{text-align:center!important}.text-decoration-none{text-decoration:none!important}.text-decoration-underline{text-decoration:underline!important}.text-decoration-line-through{text-decoration:line-through!important}.text-lowercase{text-transform:lowercase!important}.text-uppercase{text-transform:uppercase!important}.text-capitalize{text-transform:capitalize!important}.text-wrap{white-space:normal!important}.text-nowrap{white-space:nowrap!important}.text-break{word-wrap:break-word!important;word-break:break-word!important}.text-primary{--bs-text-opacity:1;color:rgba(var(--bs-primary-rgb),var(--bs-text-opacity))!important}.text-secondary{--bs-text-opacity:1;color:rgba(var(--bs-secondary-rgb),var(--bs-text-opacity))!important}.text-success{--bs-text-opacity:1;color:rgba(var(--bs-success-rgb),var(--bs-text-opacity))!important}.text-info{--bs-text-opacity:1;color:rgba(var(--bs-info-rgb),var(--bs-text-opacity))!important}.text-warning{--bs-text-opacity:1;color:rgba(var(--bs-warning-rgb),var(--bs-text-opacity))!important}.text-danger{--bs-text-opacity:1;color:rgba(var(--bs-danger-rgb),var(--bs-text-opacity))!important}.text-light{--bs-text-opacity:1;color:rgba(var(--bs-light-rgb),var(--bs-text-opacity))!important}.text-dark{--bs-text-opacity:1;color:rgba(var(--bs-dark-rgb),var(--bs-text-opacity))!important}.text-black{--bs-text-opacity:1;color:rgba(var(--bs-black-rgb),var(--bs-text-opacity))!important}.text-white{--bs-text-opacity:1;color:rgba(var(--bs-white-rgb),var(--bs-text-opacity))!important}.text-body{--bs-text-opacity:1;color:rgba(var(--bs-body-color-rgb),var(--bs-text-opacity))!important}.text-muted{--bs-text-opacity:1;color:var(--bs-secondary-color)!important}.text-black-50{--bs-text-opacity:1;color:rgba(0,0,0,.5)!important}.text-white-50{--bs-text-opacity:1;color:rgba(255,255,255,.5)!important}.text-body-secondary{--bs-text-opacity:1;color:var(--bs-secondary-color)!important}.text-body-tertiary{--bs-text-opacity:1;color:var(--bs-tertiary-color)!important}.text-body-emphasis{--bs-text-opacity:1;color:var(--bs-emphasis-color)!important}.text-reset{--bs-text-opacity:1;color:inherit!important}.text-opacity-25{--bs-text-opacity:0.25}.text-opacity-50{--bs-text-opacity:0.5}.text-opacity-75{--bs-text-opacity:0.75}.text-opacity-100{--bs-text-opacity:1}.text-primary-emphasis{color:var(--bs-primary-text-emphasis)!important}.text-secondary-emphasis{color:var(--bs-secondary-text-emphasis)!important}.text-success-emphasis{color:var(--bs-success-text-emphasis)!important}.text-info-emphasis{color:var(--bs-info-text-emphasis)!important}.text-warning-emphasis{color:var(--bs-warning-text-emphasis)!important}.text-danger-emphasis{color:var(--bs-danger-text-emphasis)!important}.text-light-emphasis{color:var(--bs-light-text-emphasis)!important}.text-dark-emphasis{color:var(--bs-dark-text-emphasis)!important}.link-opacity-10{--bs-link-opacity:0.1}.link-opacity-10-hover:hover{--bs-link-opacity:0.1}.link-opacity-25{--bs-link-opacity:0.25}.link-opacity-25-hover:hover{--bs-link-opacity:0.25}.link-opacity-50{--bs-link-opacity:0.5}.link-opacity-50-hover:hover{--bs-link-opacity:0.5}.link-opacity-75{--bs-link-opacity:0.75}.link-opacity-75-hover:hover{--bs-link-opacity:0.75}.link-opacity-100{--bs-link-opacity:1}.link-opacity-100-hover:hover{--bs-link-opacity:1}.link-offset-1{text-underline-offset:0.125em!important}.link-offset-1-hover:hover{text-underline-offset:0.125em!important}.link-offset-2{text-underline-offset:0.25em!important}.link-offset-2-hover:hover{text-underline-offset:0.25em!important}.link-offset-3{text-underline-offset:0.375em!important}.link-offset-3-hover:hover{text-underline-offset:0.375em!important}.link-underline-primary{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-primary-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-primary-rgb),var(--bs-link-underline-opacity))!important}.link-underline-secondary{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-secondary-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-secondary-rgb),var(--bs-link-underline-opacity))!important}.link-underline-success{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-success-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-success-rgb),var(--bs-link-underline-opacity))!important}.link-underline-info{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-info-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-info-rgb),var(--bs-link-underline-opacity))!important}.link-underline-warning{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-warning-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-warning-rgb),var(--bs-link-underline-opacity))!important}.link-underline-danger{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-danger-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-danger-rgb),var(--bs-link-underline-opacity))!important}.link-underline-light{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-light-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-light-rgb),var(--bs-link-underline-opacity))!important}.link-underline-dark{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-dark-rgb),var(--bs-link-underline-opacity))!important;text-decoration-color:rgba(var(--bs-dark-rgb),var(--bs-link-underline-opacity))!important}.link-underline{--bs-link-underline-opacity:1;-webkit-text-decoration-color:rgba(var(--bs-link-color-rgb),var(--bs-link-underline-opacity,1))!important;text-decoration-color:rgba(var(--bs-link-color-rgb),var(--bs-link-underline-opacity,1))!important}.link-underline-opacity-0{--bs-link-underline-opacity:0}.link-underline-opacity-0-hover:hover{--bs-link-underline-opacity:0}.link-underline-opacity-10{--bs-link-underline-opacity:0.1}.link-underline-opacity-10-hover:hover{--bs-link-underline-opacity:0.1}.link-underline-opacity-25{--bs-link-underline-opacity:0.25}.link-underline-opacity-25-hover:hover{--bs-link-underline-opacity:0.25}.link-underline-opacity-50{--bs-link-underline-opacity:0.5}.link-underline-opacity-50-hover:hover{--bs-link-underline-opacity:0.5}.link-underline-opacity-75{--bs-link-underline-opacity:0.75}.link-underline-opacity-75-hover:hover{--bs-link-underline-opacity:0.75}.link-underline-opacity-100{--bs-link-underline-opacity:1}.link-underline-opacity-100-hover:hover{--bs-link-underline-opacity:1}.bg-primary{--bs-bg-opacity:1;background-color:rgba(var(--bs-primary-rgb),var(--bs-bg-opacity))!important}.bg-secondary{--bs-bg-opacity:1;background-color:rgba(var(--bs-secondary-rgb),var(--bs-bg-opacity))!important}.bg-success{--bs-bg-opacity:1;background-color:rgba(var(--bs-success-rgb),var(--bs-bg-opacity))!important}.bg-info{--bs-bg-opacity:1;background-color:rgba(var(--bs-info-rgb),var(--bs-bg-opacity))!important}.bg-warning{--bs-bg-opacity:1;background-color:rgba(var(--bs-warning-rgb),var(--bs-bg-opacity))!important}.bg-danger{--bs-bg-opacity:1;background-color:rgba(var(--bs-danger-rgb),var(--bs-bg-opacity))!important}.bg-light{--bs-bg-opacity:1;background-color:rgba(var(--bs-light-rgb),var(--bs-bg-opacity))!important}.bg-dark{--bs-bg-opacity:1;background-color:rgba(var(--bs-dark-rgb),var(--bs-bg-opacity))!important}.bg-black{--bs-bg-opacity:1;background-color:rgba(var(--bs-black-rgb),var(--bs-bg-opacity))!important}.bg-white{--bs-bg-opacity:1;background-color:rgba(var(--bs-white-rgb),var(--bs-bg-opacity))!important}.bg-body{--bs-bg-opacity:1;background-color:rgba(var(--bs-body-bg-rgb),var(--bs-bg-opacity))!important}.bg-transparent{--bs-bg-opacity:1;background-color:transparent!important}.bg-body-secondary{--bs-bg-opacity:1;background-color:rgba(var(--bs-secondary-bg-rgb),var(--bs-bg-opacity))!important}.bg-body-tertiary{--bs-bg-opacity:1;background-color:rgba(var(--bs-tertiary-bg-rgb),var(--bs-bg-opacity))!important}.bg-opacity-10{--bs-bg-opacity:0.1}.bg-opacity-25{--bs-bg-opacity:0.25}.bg-opacity-50{--bs-bg-opacity:0.5}.bg-opacity-75{--bs-bg-opacity:0.75}.bg-opacity-100{--bs-bg-opacity:1}.bg-primary-subtle{background-color:var(--bs-primary-bg-subtle)!important}.bg-secondary-subtle{background-color:var(--bs-secondary-bg-subtle)!important}.bg-success-subtle{background-color:var(--bs-success-bg-subtle)!important}.bg-info-subtle{background-color:var(--bs-info-bg-subtle)!important}.bg-warning-subtle{background-color:var(--bs-warning-bg-subtle)!important}.bg-danger-subtle{background-color:var(--bs-danger-bg-subtle)!important}.bg-light-subtle{background-color:var(--bs-light-bg-subtle)!important}.bg-dark-subtle{background-color:var(--bs-dark-bg-subtle)!important}.bg-gradient{background-image:var(--bs-gradient)!important}.user-select-all{-webkit-user-select:all!important;-moz-user-select:all!important;user-select:all!important}.user-select-auto{-webkit-user-select:auto!important;-moz-user-select:auto!important;user-select:auto!important}.user-select-none{-webkit-user-select:none!important;-moz-user-select:none!important;user-select:none!important}.pe-none{pointer-events:none!important}.pe-auto{pointer-events:auto!important}.rounded{border-radius:var(--bs-border-radius)!important}.rounded-0{border-radius:0!important}.rounded-1{border-radius:var(--bs-border-radius-sm)!important}.rounded-2{border-radius:var(--bs-border-radius)!important}.rounded-3{border-radius:var(--bs-border-radius-lg)!important}.rounded-4{border-radius:var(--bs-border-radius-xl)!important}.rounded-5{border-radius:var(--bs-border-radius-xxl)!important}.rounded-circle{border-radius:50%!important}.rounded-pill{border-radius:var(--bs-border-radius-pill)!important}.rounded-top{border-top-left-radius:var(--bs-border-radius)!important;border-top-right-radius:var(--bs-border-radius)!important}.rounded-top-0{border-top-left-radius:0!important;border-top-right-radius:0!important}.rounded-top-1{border-top-left-radius:var(--bs-border-radius-sm)!important;border-top-right-radius:var(--bs-border-radius-sm)!important}.rounded-top-2{border-top-left-radius:var(--bs-border-radius)!important;border-top-right-radius:var(--bs-border-radius)!important}.rounded-top-3{border-top-left-radius:var(--bs-border-radius-lg)!important;border-top-right-radius:var(--bs-border-radius-lg)!important}.rounded-top-4{border-top-left-radius:var(--bs-border-radius-xl)!important;border-top-right-radius:var(--bs-border-radius-xl)!important}.rounded-top-5{border-top-left-radius:var(--bs-border-radius-xxl)!important;border-top-right-radius:var(--bs-border-radius-xxl)!important}.rounded-top-circle{border-top-left-radius:50%!important;border-top-right-radius:50%!important}.rounded-top-pill{border-top-left-radius:var(--bs-border-radius-pill)!important;border-top-right-radius:var(--bs-border-radius-pill)!important}.rounded-end{border-top-right-radius:var(--bs-border-radius)!important;border-bottom-right-radius:var(--bs-border-radius)!important}.rounded-end-0{border-top-right-radius:0!important;border-bottom-right-radius:0!important}.rounded-end-1{border-top-right-radius:var(--bs-border-radius-sm)!important;border-bottom-right-radius:var(--bs-border-radius-sm)!important}.rounded-end-2{border-top-right-radius:var(--bs-border-radius)!important;border-bottom-right-radius:var(--bs-border-radius)!important}.rounded-end-3{border-top-right-radius:var(--bs-border-radius-lg)!important;border-bottom-right-radius:var(--bs-border-radius-lg)!important}.rounded-end-4{border-top-right-radius:var(--bs-border-radius-xl)!important;border-bottom-right-radius:var(--bs-border-radius-xl)!important}.rounded-end-5{border-top-right-radius:var(--bs-border-radius-xxl)!important;border-bottom-right-radius:var(--bs-border-radius-xxl)!important}.rounded-end-circle{border-top-right-radius:50%!important;border-bottom-right-radius:50%!important}.rounded-end-pill{border-top-right-radius:var(--bs-border-radius-pill)!important;border-bottom-right-radius:var(--bs-border-radius-pill)!important}.rounded-bottom{border-bottom-right-radius:var(--bs-border-radius)!important;border-bottom-left-radius:var(--bs-border-radius)!important}.rounded-bottom-0{border-bottom-right-radius:0!important;border-bottom-left-radius:0!important}.rounded-bottom-1{border-bottom-right-radius:var(--bs-border-radius-sm)!important;border-bottom-left-radius:var(--bs-border-radius-sm)!important}.rounded-bottom-2{border-bottom-right-radius:var(--bs-border-radius)!important;border-bottom-left-radius:var(--bs-border-radius)!important}.rounded-bottom-3{border-bottom-right-radius:var(--bs-border-radius-lg)!important;border-bottom-left-radius:var(--bs-border-radius-lg)!important}.rounded-bottom-4{border-bottom-right-radius:var(--bs-border-radius-xl)!important;border-bottom-left-radius:var(--bs-border-radius-xl)!important}.rounded-bottom-5{border-bottom-right-radius:var(--bs-border-radius-xxl)!important;border-bottom-left-radius:var(--bs-border-radius-xxl)!important}.rounded-bottom-circle{border-bottom-right-radius:50%!important;border-bottom-left-radius:50%!important}.rounded-bottom-pill{border-bottom-right-radius:var(--bs-border-radius-pill)!important;border-bottom-left-radius:var(--bs-border-radius-pill)!important}.rounded-start{border-bottom-left-radius:var(--bs-border-radius)!important;border-top-left-radius:var(--bs-border-radius)!important}.rounded-start-0{border-bottom-left-radius:0!important;border-top-left-radius:0!important}.rounded-start-1{border-bottom-left-radius:var(--bs-border-radius-sm)!important;border-top-left-radius:var(--bs-border-radius-sm)!important}.rounded-start-2{border-bottom-left-radius:var(--bs-border-radius)!important;border-top-left-radius:var(--bs-border-radius)!important}.rounded-start-3{border-bottom-left-radius:var(--bs-border-radius-lg)!important;border-top-left-radius:var(--bs-border-radius-lg)!important}.rounded-start-4{border-bottom-left-radius:var(--bs-border-radius-xl)!important;border-top-left-radius:var(--bs-border-radius-xl)!important}.rounded-start-5{border-bottom-left-radius:var(--bs-border-radius-xxl)!important;border-top-left-radius:var(--bs-border-radius-xxl)!important}.rounded-start-circle{border-bottom-left-radius:50%!important;border-top-left-radius:50%!important}.rounded-start-pill{border-bottom-left-radius:var(--bs-border-radius-pill)!important;border-top-left-radius:var(--bs-border-radius-pill)!important}.visible{visibility:visible!important}.invisible{visibility:hidden!important}.z-n1{z-index:-1!important}.z-0{z-index:0!important}.z-1{z-index:1!important}.z-2{z-index:2!important}.z-3{z-index:3!important}@media (min-width:576px){.float-sm-start{float:left!important}.float-sm-end{float:right!important}.float-sm-none{float:none!important}.object-fit-sm-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-sm-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-sm-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-sm-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-sm-none{-o-object-fit:none!important;object-fit:none!important}.d-sm-inline{display:inline!important}.d-sm-inline-block{display:inline-block!important}.d-sm-block{display:block!important}.d-sm-grid{display:grid!important}.d-sm-inline-grid{display:inline-grid!important}.d-sm-table{display:table!important}.d-sm-table-row{display:table-row!important}.d-sm-table-cell{display:table-cell!important}.d-sm-flex{display:flex!important}.d-sm-inline-flex{display:inline-flex!important}.d-sm-none{display:none!important}.flex-sm-fill{flex:1 1 auto!important}.flex-sm-row{flex-direction:row!important}.flex-sm-column{flex-direction:column!important}.flex-sm-row-reverse{flex-direction:row-reverse!important}.flex-sm-column-reverse{flex-direction:column-reverse!important}.flex-sm-grow-0{flex-grow:0!important}.flex-sm-grow-1{flex-grow:1!important}.flex-sm-shrink-0{flex-shrink:0!important}.flex-sm-shrink-1{flex-shrink:1!important}.flex-sm-wrap{flex-wrap:wrap!important}.flex-sm-nowrap{flex-wrap:nowrap!important}.flex-sm-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-sm-start{justify-content:flex-start!important}.justify-content-sm-end{justify-content:flex-end!important}.justify-content-sm-center{justify-content:center!important}.justify-content-sm-between{justify-content:space-between!important}.justify-content-sm-around{justify-content:space-around!important}.justify-content-sm-evenly{justify-content:space-evenly!important}.align-items-sm-start{align-items:flex-start!important}.align-items-sm-end{align-items:flex-end!important}.align-items-sm-center{align-items:center!important}.align-items-sm-baseline{align-items:baseline!important}.align-items-sm-stretch{align-items:stretch!important}.align-content-sm-start{align-content:flex-start!important}.align-content-sm-end{align-content:flex-end!important}.align-content-sm-center{align-content:center!important}.align-content-sm-between{align-content:space-between!important}.align-content-sm-around{align-content:space-around!important}.align-content-sm-stretch{align-content:stretch!important}.align-self-sm-auto{align-self:auto!important}.align-self-sm-start{align-self:flex-start!important}.align-self-sm-end{align-self:flex-end!important}.align-self-sm-center{align-self:center!important}.align-self-sm-baseline{align-self:baseline!important}.align-self-sm-stretch{align-self:stretch!important}.order-sm-first{order:-1!important}.order-sm-0{order:0!important}.order-sm-1{order:1!important}.order-sm-2{order:2!important}.order-sm-3{order:3!important}.order-sm-4{order:4!important}.order-sm-5{order:5!important}.order-sm-last{order:6!important}.m-sm-0{margin:0!important}.m-sm-1{margin:.25rem!important}.m-sm-2{margin:.5rem!important}.m-sm-3{margin:1rem!important}.m-sm-4{margin:1.5rem!important}.m-sm-5{margin:3rem!important}.m-sm-auto{margin:auto!important}.mx-sm-0{margin-right:0!important;margin-left:0!important}.mx-sm-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-sm-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-sm-3{margin-right:1rem!important;margin-left:1rem!important}.mx-sm-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-sm-5{margin-right:3rem!important;margin-left:3rem!important}.mx-sm-auto{margin-right:auto!important;margin-left:auto!important}.my-sm-0{margin-top:0!important;margin-bottom:0!important}.my-sm-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-sm-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-sm-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-sm-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-sm-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-sm-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-sm-0{margin-top:0!important}.mt-sm-1{margin-top:.25rem!important}.mt-sm-2{margin-top:.5rem!important}.mt-sm-3{margin-top:1rem!important}.mt-sm-4{margin-top:1.5rem!important}.mt-sm-5{margin-top:3rem!important}.mt-sm-auto{margin-top:auto!important}.me-sm-0{margin-right:0!important}.me-sm-1{margin-right:.25rem!important}.me-sm-2{margin-right:.5rem!important}.me-sm-3{margin-right:1rem!important}.me-sm-4{margin-right:1.5rem!important}.me-sm-5{margin-right:3rem!important}.me-sm-auto{margin-right:auto!important}.mb-sm-0{margin-bottom:0!important}.mb-sm-1{margin-bottom:.25rem!important}.mb-sm-2{margin-bottom:.5rem!important}.mb-sm-3{margin-bottom:1rem!important}.mb-sm-4{margin-bottom:1.5rem!important}.mb-sm-5{margin-bottom:3rem!important}.mb-sm-auto{margin-bottom:auto!important}.ms-sm-0{margin-left:0!important}.ms-sm-1{margin-left:.25rem!important}.ms-sm-2{margin-left:.5rem!important}.ms-sm-3{margin-left:1rem!important}.ms-sm-4{margin-left:1.5rem!important}.ms-sm-5{margin-left:3rem!important}.ms-sm-auto{margin-left:auto!important}.p-sm-0{padding:0!important}.p-sm-1{padding:.25rem!important}.p-sm-2{padding:.5rem!important}.p-sm-3{padding:1rem!important}.p-sm-4{padding:1.5rem!important}.p-sm-5{padding:3rem!important}.px-sm-0{padding-right:0!important;padding-left:0!important}.px-sm-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-sm-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-sm-3{padding-right:1rem!important;padding-left:1rem!important}.px-sm-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-sm-5{padding-right:3rem!important;padding-left:3rem!important}.py-sm-0{padding-top:0!important;padding-bottom:0!important}.py-sm-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-sm-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-sm-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-sm-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-sm-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-sm-0{padding-top:0!important}.pt-sm-1{padding-top:.25rem!important}.pt-sm-2{padding-top:.5rem!important}.pt-sm-3{padding-top:1rem!important}.pt-sm-4{padding-top:1.5rem!important}.pt-sm-5{padding-top:3rem!important}.pe-sm-0{padding-right:0!important}.pe-sm-1{padding-right:.25rem!important}.pe-sm-2{padding-right:.5rem!important}.pe-sm-3{padding-right:1rem!important}.pe-sm-4{padding-right:1.5rem!important}.pe-sm-5{padding-right:3rem!important}.pb-sm-0{padding-bottom:0!important}.pb-sm-1{padding-bottom:.25rem!important}.pb-sm-2{padding-bottom:.5rem!important}.pb-sm-3{padding-bottom:1rem!important}.pb-sm-4{padding-bottom:1.5rem!important}.pb-sm-5{padding-bottom:3rem!important}.ps-sm-0{padding-left:0!important}.ps-sm-1{padding-left:.25rem!important}.ps-sm-2{padding-left:.5rem!important}.ps-sm-3{padding-left:1rem!important}.ps-sm-4{padding-left:1.5rem!important}.ps-sm-5{padding-left:3rem!important}.gap-sm-0{gap:0!important}.gap-sm-1{gap:.25rem!important}.gap-sm-2{gap:.5rem!important}.gap-sm-3{gap:1rem!important}.gap-sm-4{gap:1.5rem!important}.gap-sm-5{gap:3rem!important}.row-gap-sm-0{row-gap:0!important}.row-gap-sm-1{row-gap:.25rem!important}.row-gap-sm-2{row-gap:.5rem!important}.row-gap-sm-3{row-gap:1rem!important}.row-gap-sm-4{row-gap:1.5rem!important}.row-gap-sm-5{row-gap:3rem!important}.column-gap-sm-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-sm-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-sm-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-sm-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-sm-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-sm-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.text-sm-start{text-align:left!important}.text-sm-end{text-align:right!important}.text-sm-center{text-align:center!important}}@media (min-width:768px){.float-md-start{float:left!important}.float-md-end{float:right!important}.float-md-none{float:none!important}.object-fit-md-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-md-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-md-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-md-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-md-none{-o-object-fit:none!important;object-fit:none!important}.d-md-inline{display:inline!important}.d-md-inline-block{display:inline-block!important}.d-md-block{display:block!important}.d-md-grid{display:grid!important}.d-md-inline-grid{display:inline-grid!important}.d-md-table{display:table!important}.d-md-table-row{display:table-row!important}.d-md-table-cell{display:table-cell!important}.d-md-flex{display:flex!important}.d-md-inline-flex{display:inline-flex!important}.d-md-none{display:none!important}.flex-md-fill{flex:1 1 auto!important}.flex-md-row{flex-direction:row!important}.flex-md-column{flex-direction:column!important}.flex-md-row-reverse{flex-direction:row-reverse!important}.flex-md-column-reverse{flex-direction:column-reverse!important}.flex-md-grow-0{flex-grow:0!important}.flex-md-grow-1{flex-grow:1!important}.flex-md-shrink-0{flex-shrink:0!important}.flex-md-shrink-1{flex-shrink:1!important}.flex-md-wrap{flex-wrap:wrap!important}.flex-md-nowrap{flex-wrap:nowrap!important}.flex-md-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-md-start{justify-content:flex-start!important}.justify-content-md-end{justify-content:flex-end!important}.justify-content-md-center{justify-content:center!important}.justify-content-md-between{justify-content:space-between!important}.justify-content-md-around{justify-content:space-around!important}.justify-content-md-evenly{justify-content:space-evenly!important}.align-items-md-start{align-items:flex-start!important}.align-items-md-end{align-items:flex-end!important}.align-items-md-center{align-items:center!important}.align-items-md-baseline{align-items:baseline!important}.align-items-md-stretch{align-items:stretch!important}.align-content-md-start{align-content:flex-start!important}.align-content-md-end{align-content:flex-end!important}.align-content-md-center{align-content:center!important}.align-content-md-between{align-content:space-between!important}.align-content-md-around{align-content:space-around!important}.align-content-md-stretch{align-content:stretch!important}.align-self-md-auto{align-self:auto!important}.align-self-md-start{align-self:flex-start!important}.align-self-md-end{align-self:flex-end!important}.align-self-md-center{align-self:center!important}.align-self-md-baseline{align-self:baseline!important}.align-self-md-stretch{align-self:stretch!important}.order-md-first{order:-1!important}.order-md-0{order:0!important}.order-md-1{order:1!important}.order-md-2{order:2!important}.order-md-3{order:3!important}.order-md-4{order:4!important}.order-md-5{order:5!important}.order-md-last{order:6!important}.m-md-0{margin:0!important}.m-md-1{margin:.25rem!important}.m-md-2{margin:.5rem!important}.m-md-3{margin:1rem!important}.m-md-4{margin:1.5rem!important}.m-md-5{margin:3rem!important}.m-md-auto{margin:auto!important}.mx-md-0{margin-right:0!important;margin-left:0!important}.mx-md-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-md-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-md-3{margin-right:1rem!important;margin-left:1rem!important}.mx-md-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-md-5{margin-right:3rem!important;margin-left:3rem!important}.mx-md-auto{margin-right:auto!important;margin-left:auto!important}.my-md-0{margin-top:0!important;margin-bottom:0!important}.my-md-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-md-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-md-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-md-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-md-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-md-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-md-0{margin-top:0!important}.mt-md-1{margin-top:.25rem!important}.mt-md-2{margin-top:.5rem!important}.mt-md-3{margin-top:1rem!important}.mt-md-4{margin-top:1.5rem!important}.mt-md-5{margin-top:3rem!important}.mt-md-auto{margin-top:auto!important}.me-md-0{margin-right:0!important}.me-md-1{margin-right:.25rem!important}.me-md-2{margin-right:.5rem!important}.me-md-3{margin-right:1rem!important}.me-md-4{margin-right:1.5rem!important}.me-md-5{margin-right:3rem!important}.me-md-auto{margin-right:auto!important}.mb-md-0{margin-bottom:0!important}.mb-md-1{margin-bottom:.25rem!important}.mb-md-2{margin-bottom:.5rem!important}.mb-md-3{margin-bottom:1rem!important}.mb-md-4{margin-bottom:1.5rem!important}.mb-md-5{margin-bottom:3rem!important}.mb-md-auto{margin-bottom:auto!important}.ms-md-0{margin-left:0!important}.ms-md-1{margin-left:.25rem!important}.ms-md-2{margin-left:.5rem!important}.ms-md-3{margin-left:1rem!important}.ms-md-4{margin-left:1.5rem!important}.ms-md-5{margin-left:3rem!important}.ms-md-auto{margin-left:auto!important}.p-md-0{padding:0!important}.p-md-1{padding:.25rem!important}.p-md-2{padding:.5rem!important}.p-md-3{padding:1rem!important}.p-md-4{padding:1.5rem!important}.p-md-5{padding:3rem!important}.px-md-0{padding-right:0!important;padding-left:0!important}.px-md-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-md-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-md-3{padding-right:1rem!important;padding-left:1rem!important}.px-md-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-md-5{padding-right:3rem!important;padding-left:3rem!important}.py-md-0{padding-top:0!important;padding-bottom:0!important}.py-md-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-md-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-md-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-md-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-md-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-md-0{padding-top:0!important}.pt-md-1{padding-top:.25rem!important}.pt-md-2{padding-top:.5rem!important}.pt-md-3{padding-top:1rem!important}.pt-md-4{padding-top:1.5rem!important}.pt-md-5{padding-top:3rem!important}.pe-md-0{padding-right:0!important}.pe-md-1{padding-right:.25rem!important}.pe-md-2{padding-right:.5rem!important}.pe-md-3{padding-right:1rem!important}.pe-md-4{padding-right:1.5rem!important}.pe-md-5{padding-right:3rem!important}.pb-md-0{padding-bottom:0!important}.pb-md-1{padding-bottom:.25rem!important}.pb-md-2{padding-bottom:.5rem!important}.pb-md-3{padding-bottom:1rem!important}.pb-md-4{padding-bottom:1.5rem!important}.pb-md-5{padding-bottom:3rem!important}.ps-md-0{padding-left:0!important}.ps-md-1{padding-left:.25rem!important}.ps-md-2{padding-left:.5rem!important}.ps-md-3{padding-left:1rem!important}.ps-md-4{padding-left:1.5rem!important}.ps-md-5{padding-left:3rem!important}.gap-md-0{gap:0!important}.gap-md-1{gap:.25rem!important}.gap-md-2{gap:.5rem!important}.gap-md-3{gap:1rem!important}.gap-md-4{gap:1.5rem!important}.gap-md-5{gap:3rem!important}.row-gap-md-0{row-gap:0!important}.row-gap-md-1{row-gap:.25rem!important}.row-gap-md-2{row-gap:.5rem!important}.row-gap-md-3{row-gap:1rem!important}.row-gap-md-4{row-gap:1.5rem!important}.row-gap-md-5{row-gap:3rem!important}.column-gap-md-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-md-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-md-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-md-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-md-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-md-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.text-md-start{text-align:left!important}.text-md-end{text-align:right!important}.text-md-center{text-align:center!important}}@media (min-width:992px){.float-lg-start{float:left!important}.float-lg-end{float:right!important}.float-lg-none{float:none!important}.object-fit-lg-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-lg-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-lg-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-lg-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-lg-none{-o-object-fit:none!important;object-fit:none!important}.d-lg-inline{display:inline!important}.d-lg-inline-block{display:inline-block!important}.d-lg-block{display:block!important}.d-lg-grid{display:grid!important}.d-lg-inline-grid{display:inline-grid!important}.d-lg-table{display:table!important}.d-lg-table-row{display:table-row!important}.d-lg-table-cell{display:table-cell!important}.d-lg-flex{display:flex!important}.d-lg-inline-flex{display:inline-flex!important}.d-lg-none{display:none!important}.flex-lg-fill{flex:1 1 auto!important}.flex-lg-row{flex-direction:row!important}.flex-lg-column{flex-direction:column!important}.flex-lg-row-reverse{flex-direction:row-reverse!important}.flex-lg-column-reverse{flex-direction:column-reverse!important}.flex-lg-grow-0{flex-grow:0!important}.flex-lg-grow-1{flex-grow:1!important}.flex-lg-shrink-0{flex-shrink:0!important}.flex-lg-shrink-1{flex-shrink:1!important}.flex-lg-wrap{flex-wrap:wrap!important}.flex-lg-nowrap{flex-wrap:nowrap!important}.flex-lg-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-lg-start{justify-content:flex-start!important}.justify-content-lg-end{justify-content:flex-end!important}.justify-content-lg-center{justify-content:center!important}.justify-content-lg-between{justify-content:space-between!important}.justify-content-lg-around{justify-content:space-around!important}.justify-content-lg-evenly{justify-content:space-evenly!important}.align-items-lg-start{align-items:flex-start!important}.align-items-lg-end{align-items:flex-end!important}.align-items-lg-center{align-items:center!important}.align-items-lg-baseline{align-items:baseline!important}.align-items-lg-stretch{align-items:stretch!important}.align-content-lg-start{align-content:flex-start!important}.align-content-lg-end{align-content:flex-end!important}.align-content-lg-center{align-content:center!important}.align-content-lg-between{align-content:space-between!important}.align-content-lg-around{align-content:space-around!important}.align-content-lg-stretch{align-content:stretch!important}.align-self-lg-auto{align-self:auto!important}.align-self-lg-start{align-self:flex-start!important}.align-self-lg-end{align-self:flex-end!important}.align-self-lg-center{align-self:center!important}.align-self-lg-baseline{align-self:baseline!important}.align-self-lg-stretch{align-self:stretch!important}.order-lg-first{order:-1!important}.order-lg-0{order:0!important}.order-lg-1{order:1!important}.order-lg-2{order:2!important}.order-lg-3{order:3!important}.order-lg-4{order:4!important}.order-lg-5{order:5!important}.order-lg-last{order:6!important}.m-lg-0{margin:0!important}.m-lg-1{margin:.25rem!important}.m-lg-2{margin:.5rem!important}.m-lg-3{margin:1rem!important}.m-lg-4{margin:1.5rem!important}.m-lg-5{margin:3rem!important}.m-lg-auto{margin:auto!important}.mx-lg-0{margin-right:0!important;margin-left:0!important}.mx-lg-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-lg-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-lg-3{margin-right:1rem!important;margin-left:1rem!important}.mx-lg-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-lg-5{margin-right:3rem!important;margin-left:3rem!important}.mx-lg-auto{margin-right:auto!important;margin-left:auto!important}.my-lg-0{margin-top:0!important;margin-bottom:0!important}.my-lg-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-lg-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-lg-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-lg-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-lg-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-lg-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-lg-0{margin-top:0!important}.mt-lg-1{margin-top:.25rem!important}.mt-lg-2{margin-top:.5rem!important}.mt-lg-3{margin-top:1rem!important}.mt-lg-4{margin-top:1.5rem!important}.mt-lg-5{margin-top:3rem!important}.mt-lg-auto{margin-top:auto!important}.me-lg-0{margin-right:0!important}.me-lg-1{margin-right:.25rem!important}.me-lg-2{margin-right:.5rem!important}.me-lg-3{margin-right:1rem!important}.me-lg-4{margin-right:1.5rem!important}.me-lg-5{margin-right:3rem!important}.me-lg-auto{margin-right:auto!important}.mb-lg-0{margin-bottom:0!important}.mb-lg-1{margin-bottom:.25rem!important}.mb-lg-2{margin-bottom:.5rem!important}.mb-lg-3{margin-bottom:1rem!important}.mb-lg-4{margin-bottom:1.5rem!important}.mb-lg-5{margin-bottom:3rem!important}.mb-lg-auto{margin-bottom:auto!important}.ms-lg-0{margin-left:0!important}.ms-lg-1{margin-left:.25rem!important}.ms-lg-2{margin-left:.5rem!important}.ms-lg-3{margin-left:1rem!important}.ms-lg-4{margin-left:1.5rem!important}.ms-lg-5{margin-left:3rem!important}.ms-lg-auto{margin-left:auto!important}.p-lg-0{padding:0!important}.p-lg-1{padding:.25rem!important}.p-lg-2{padding:.5rem!important}.p-lg-3{padding:1rem!important}.p-lg-4{padding:1.5rem!important}.p-lg-5{padding:3rem!important}.px-lg-0{padding-right:0!important;padding-left:0!important}.px-lg-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-lg-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-lg-3{padding-right:1rem!important;padding-left:1rem!important}.px-lg-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-lg-5{padding-right:3rem!important;padding-left:3rem!important}.py-lg-0{padding-top:0!important;padding-bottom:0!important}.py-lg-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-lg-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-lg-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-lg-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-lg-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-lg-0{padding-top:0!important}.pt-lg-1{padding-top:.25rem!important}.pt-lg-2{padding-top:.5rem!important}.pt-lg-3{padding-top:1rem!important}.pt-lg-4{padding-top:1.5rem!important}.pt-lg-5{padding-top:3rem!important}.pe-lg-0{padding-right:0!important}.pe-lg-1{padding-right:.25rem!important}.pe-lg-2{padding-right:.5rem!important}.pe-lg-3{padding-right:1rem!important}.pe-lg-4{padding-right:1.5rem!important}.pe-lg-5{padding-right:3rem!important}.pb-lg-0{padding-bottom:0!important}.pb-lg-1{padding-bottom:.25rem!important}.pb-lg-2{padding-bottom:.5rem!important}.pb-lg-3{padding-bottom:1rem!important}.pb-lg-4{padding-bottom:1.5rem!important}.pb-lg-5{padding-bottom:3rem!important}.ps-lg-0{padding-left:0!important}.ps-lg-1{padding-left:.25rem!important}.ps-lg-2{padding-left:.5rem!important}.ps-lg-3{padding-left:1rem!important}.ps-lg-4{padding-left:1.5rem!important}.ps-lg-5{padding-left:3rem!important}.gap-lg-0{gap:0!important}.gap-lg-1{gap:.25rem!important}.gap-lg-2{gap:.5rem!important}.gap-lg-3{gap:1rem!important}.gap-lg-4{gap:1.5rem!important}.gap-lg-5{gap:3rem!important}.row-gap-lg-0{row-gap:0!important}.row-gap-lg-1{row-gap:.25rem!important}.row-gap-lg-2{row-gap:.5rem!important}.row-gap-lg-3{row-gap:1rem!important}.row-gap-lg-4{row-gap:1.5rem!important}.row-gap-lg-5{row-gap:3rem!important}.column-gap-lg-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-lg-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-lg-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-lg-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-lg-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-lg-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.text-lg-start{text-align:left!important}.text-lg-end{text-align:right!important}.text-lg-center{text-align:center!important}}@media (min-width:1200px){.float-xl-start{float:left!important}.float-xl-end{float:right!important}.float-xl-none{float:none!important}.object-fit-xl-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-xl-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-xl-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-xl-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-xl-none{-o-object-fit:none!important;object-fit:none!important}.d-xl-inline{display:inline!important}.d-xl-inline-block{display:inline-block!important}.d-xl-block{display:block!important}.d-xl-grid{display:grid!important}.d-xl-inline-grid{display:inline-grid!important}.d-xl-table{display:table!important}.d-xl-table-row{display:table-row!important}.d-xl-table-cell{display:table-cell!important}.d-xl-flex{display:flex!important}.d-xl-inline-flex{display:inline-flex!important}.d-xl-none{display:none!important}.flex-xl-fill{flex:1 1 auto!important}.flex-xl-row{flex-direction:row!important}.flex-xl-column{flex-direction:column!important}.flex-xl-row-reverse{flex-direction:row-reverse!important}.flex-xl-column-reverse{flex-direction:column-reverse!important}.flex-xl-grow-0{flex-grow:0!important}.flex-xl-grow-1{flex-grow:1!important}.flex-xl-shrink-0{flex-shrink:0!important}.flex-xl-shrink-1{flex-shrink:1!important}.flex-xl-wrap{flex-wrap:wrap!important}.flex-xl-nowrap{flex-wrap:nowrap!important}.flex-xl-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xl-start{justify-content:flex-start!important}.justify-content-xl-end{justify-content:flex-end!important}.justify-content-xl-center{justify-content:center!important}.justify-content-xl-between{justify-content:space-between!important}.justify-content-xl-around{justify-content:space-around!important}.justify-content-xl-evenly{justify-content:space-evenly!important}.align-items-xl-start{align-items:flex-start!important}.align-items-xl-end{align-items:flex-end!important}.align-items-xl-center{align-items:center!important}.align-items-xl-baseline{align-items:baseline!important}.align-items-xl-stretch{align-items:stretch!important}.align-content-xl-start{align-content:flex-start!important}.align-content-xl-end{align-content:flex-end!important}.align-content-xl-center{align-content:center!important}.align-content-xl-between{align-content:space-between!important}.align-content-xl-around{align-content:space-around!important}.align-content-xl-stretch{align-content:stretch!important}.align-self-xl-auto{align-self:auto!important}.align-self-xl-start{align-self:flex-start!important}.align-self-xl-end{align-self:flex-end!important}.align-self-xl-center{align-self:center!important}.align-self-xl-baseline{align-self:baseline!important}.align-self-xl-stretch{align-self:stretch!important}.order-xl-first{order:-1!important}.order-xl-0{order:0!important}.order-xl-1{order:1!important}.order-xl-2{order:2!important}.order-xl-3{order:3!important}.order-xl-4{order:4!important}.order-xl-5{order:5!important}.order-xl-last{order:6!important}.m-xl-0{margin:0!important}.m-xl-1{margin:.25rem!important}.m-xl-2{margin:.5rem!important}.m-xl-3{margin:1rem!important}.m-xl-4{margin:1.5rem!important}.m-xl-5{margin:3rem!important}.m-xl-auto{margin:auto!important}.mx-xl-0{margin-right:0!important;margin-left:0!important}.mx-xl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xl-auto{margin-right:auto!important;margin-left:auto!important}.my-xl-0{margin-top:0!important;margin-bottom:0!important}.my-xl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xl-0{margin-top:0!important}.mt-xl-1{margin-top:.25rem!important}.mt-xl-2{margin-top:.5rem!important}.mt-xl-3{margin-top:1rem!important}.mt-xl-4{margin-top:1.5rem!important}.mt-xl-5{margin-top:3rem!important}.mt-xl-auto{margin-top:auto!important}.me-xl-0{margin-right:0!important}.me-xl-1{margin-right:.25rem!important}.me-xl-2{margin-right:.5rem!important}.me-xl-3{margin-right:1rem!important}.me-xl-4{margin-right:1.5rem!important}.me-xl-5{margin-right:3rem!important}.me-xl-auto{margin-right:auto!important}.mb-xl-0{margin-bottom:0!important}.mb-xl-1{margin-bottom:.25rem!important}.mb-xl-2{margin-bottom:.5rem!important}.mb-xl-3{margin-bottom:1rem!important}.mb-xl-4{margin-bottom:1.5rem!important}.mb-xl-5{margin-bottom:3rem!important}.mb-xl-auto{margin-bottom:auto!important}.ms-xl-0{margin-left:0!important}.ms-xl-1{margin-left:.25rem!important}.ms-xl-2{margin-left:.5rem!important}.ms-xl-3{margin-left:1rem!important}.ms-xl-4{margin-left:1.5rem!important}.ms-xl-5{margin-left:3rem!important}.ms-xl-auto{margin-left:auto!important}.p-xl-0{padding:0!important}.p-xl-1{padding:.25rem!important}.p-xl-2{padding:.5rem!important}.p-xl-3{padding:1rem!important}.p-xl-4{padding:1.5rem!important}.p-xl-5{padding:3rem!important}.px-xl-0{padding-right:0!important;padding-left:0!important}.px-xl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xl-0{padding-top:0!important;padding-bottom:0!important}.py-xl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xl-0{padding-top:0!important}.pt-xl-1{padding-top:.25rem!important}.pt-xl-2{padding-top:.5rem!important}.pt-xl-3{padding-top:1rem!important}.pt-xl-4{padding-top:1.5rem!important}.pt-xl-5{padding-top:3rem!important}.pe-xl-0{padding-right:0!important}.pe-xl-1{padding-right:.25rem!important}.pe-xl-2{padding-right:.5rem!important}.pe-xl-3{padding-right:1rem!important}.pe-xl-4{padding-right:1.5rem!important}.pe-xl-5{padding-right:3rem!important}.pb-xl-0{padding-bottom:0!important}.pb-xl-1{padding-bottom:.25rem!important}.pb-xl-2{padding-bottom:.5rem!important}.pb-xl-3{padding-bottom:1rem!important}.pb-xl-4{padding-bottom:1.5rem!important}.pb-xl-5{padding-bottom:3rem!important}.ps-xl-0{padding-left:0!important}.ps-xl-1{padding-left:.25rem!important}.ps-xl-2{padding-left:.5rem!important}.ps-xl-3{padding-left:1rem!important}.ps-xl-4{padding-left:1.5rem!important}.ps-xl-5{padding-left:3rem!important}.gap-xl-0{gap:0!important}.gap-xl-1{gap:.25rem!important}.gap-xl-2{gap:.5rem!important}.gap-xl-3{gap:1rem!important}.gap-xl-4{gap:1.5rem!important}.gap-xl-5{gap:3rem!important}.row-gap-xl-0{row-gap:0!important}.row-gap-xl-1{row-gap:.25rem!important}.row-gap-xl-2{row-gap:.5rem!important}.row-gap-xl-3{row-gap:1rem!important}.row-gap-xl-4{row-gap:1.5rem!important}.row-gap-xl-5{row-gap:3rem!important}.column-gap-xl-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-xl-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-xl-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-xl-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-xl-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-xl-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.text-xl-start{text-align:left!important}.text-xl-end{text-align:right!important}.text-xl-center{text-align:center!important}}@media (min-width:1400px){.float-xxl-start{float:left!important}.float-xxl-end{float:right!important}.float-xxl-none{float:none!important}.object-fit-xxl-contain{-o-object-fit:contain!important;object-fit:contain!important}.object-fit-xxl-cover{-o-object-fit:cover!important;object-fit:cover!important}.object-fit-xxl-fill{-o-object-fit:fill!important;object-fit:fill!important}.object-fit-xxl-scale{-o-object-fit:scale-down!important;object-fit:scale-down!important}.object-fit-xxl-none{-o-object-fit:none!important;object-fit:none!important}.d-xxl-inline{display:inline!important}.d-xxl-inline-block{display:inline-block!important}.d-xxl-block{display:block!important}.d-xxl-grid{display:grid!important}.d-xxl-inline-grid{display:inline-grid!important}.d-xxl-table{display:table!important}.d-xxl-table-row{display:table-row!important}.d-xxl-table-cell{display:table-cell!important}.d-xxl-flex{display:flex!important}.d-xxl-inline-flex{display:inline-flex!important}.d-xxl-none{display:none!important}.flex-xxl-fill{flex:1 1 auto!important}.flex-xxl-row{flex-direction:row!important}.flex-xxl-column{flex-direction:column!important}.flex-xxl-row-reverse{flex-direction:row-reverse!important}.flex-xxl-column-reverse{flex-direction:column-reverse!important}.flex-xxl-grow-0{flex-grow:0!important}.flex-xxl-grow-1{flex-grow:1!important}.flex-xxl-shrink-0{flex-shrink:0!important}.flex-xxl-shrink-1{flex-shrink:1!important}.flex-xxl-wrap{flex-wrap:wrap!important}.flex-xxl-nowrap{flex-wrap:nowrap!important}.flex-xxl-wrap-reverse{flex-wrap:wrap-reverse!important}.justify-content-xxl-start{justify-content:flex-start!important}.justify-content-xxl-end{justify-content:flex-end!important}.justify-content-xxl-center{justify-content:center!important}.justify-content-xxl-between{justify-content:space-between!important}.justify-content-xxl-around{justify-content:space-around!important}.justify-content-xxl-evenly{justify-content:space-evenly!important}.align-items-xxl-start{align-items:flex-start!important}.align-items-xxl-end{align-items:flex-end!important}.align-items-xxl-center{align-items:center!important}.align-items-xxl-baseline{align-items:baseline!important}.align-items-xxl-stretch{align-items:stretch!important}.align-content-xxl-start{align-content:flex-start!important}.align-content-xxl-end{align-content:flex-end!important}.align-content-xxl-center{align-content:center!important}.align-content-xxl-between{align-content:space-between!important}.align-content-xxl-around{align-content:space-around!important}.align-content-xxl-stretch{align-content:stretch!important}.align-self-xxl-auto{align-self:auto!important}.align-self-xxl-start{align-self:flex-start!important}.align-self-xxl-end{align-self:flex-end!important}.align-self-xxl-center{align-self:center!important}.align-self-xxl-baseline{align-self:baseline!important}.align-self-xxl-stretch{align-self:stretch!important}.order-xxl-first{order:-1!important}.order-xxl-0{order:0!important}.order-xxl-1{order:1!important}.order-xxl-2{order:2!important}.order-xxl-3{order:3!important}.order-xxl-4{order:4!important}.order-xxl-5{order:5!important}.order-xxl-last{order:6!important}.m-xxl-0{margin:0!important}.m-xxl-1{margin:.25rem!important}.m-xxl-2{margin:.5rem!important}.m-xxl-3{margin:1rem!important}.m-xxl-4{margin:1.5rem!important}.m-xxl-5{margin:3rem!important}.m-xxl-auto{margin:auto!important}.mx-xxl-0{margin-right:0!important;margin-left:0!important}.mx-xxl-1{margin-right:.25rem!important;margin-left:.25rem!important}.mx-xxl-2{margin-right:.5rem!important;margin-left:.5rem!important}.mx-xxl-3{margin-right:1rem!important;margin-left:1rem!important}.mx-xxl-4{margin-right:1.5rem!important;margin-left:1.5rem!important}.mx-xxl-5{margin-right:3rem!important;margin-left:3rem!important}.mx-xxl-auto{margin-right:auto!important;margin-left:auto!important}.my-xxl-0{margin-top:0!important;margin-bottom:0!important}.my-xxl-1{margin-top:.25rem!important;margin-bottom:.25rem!important}.my-xxl-2{margin-top:.5rem!important;margin-bottom:.5rem!important}.my-xxl-3{margin-top:1rem!important;margin-bottom:1rem!important}.my-xxl-4{margin-top:1.5rem!important;margin-bottom:1.5rem!important}.my-xxl-5{margin-top:3rem!important;margin-bottom:3rem!important}.my-xxl-auto{margin-top:auto!important;margin-bottom:auto!important}.mt-xxl-0{margin-top:0!important}.mt-xxl-1{margin-top:.25rem!important}.mt-xxl-2{margin-top:.5rem!important}.mt-xxl-3{margin-top:1rem!important}.mt-xxl-4{margin-top:1.5rem!important}.mt-xxl-5{margin-top:3rem!important}.mt-xxl-auto{margin-top:auto!important}.me-xxl-0{margin-right:0!important}.me-xxl-1{margin-right:.25rem!important}.me-xxl-2{margin-right:.5rem!important}.me-xxl-3{margin-right:1rem!important}.me-xxl-4{margin-right:1.5rem!important}.me-xxl-5{margin-right:3rem!important}.me-xxl-auto{margin-right:auto!important}.mb-xxl-0{margin-bottom:0!important}.mb-xxl-1{margin-bottom:.25rem!important}.mb-xxl-2{margin-bottom:.5rem!important}.mb-xxl-3{margin-bottom:1rem!important}.mb-xxl-4{margin-bottom:1.5rem!important}.mb-xxl-5{margin-bottom:3rem!important}.mb-xxl-auto{margin-bottom:auto!important}.ms-xxl-0{margin-left:0!important}.ms-xxl-1{margin-left:.25rem!important}.ms-xxl-2{margin-left:.5rem!important}.ms-xxl-3{margin-left:1rem!important}.ms-xxl-4{margin-left:1.5rem!important}.ms-xxl-5{margin-left:3rem!important}.ms-xxl-auto{margin-left:auto!important}.p-xxl-0{padding:0!important}.p-xxl-1{padding:.25rem!important}.p-xxl-2{padding:.5rem!important}.p-xxl-3{padding:1rem!important}.p-xxl-4{padding:1.5rem!important}.p-xxl-5{padding:3rem!important}.px-xxl-0{padding-right:0!important;padding-left:0!important}.px-xxl-1{padding-right:.25rem!important;padding-left:.25rem!important}.px-xxl-2{padding-right:.5rem!important;padding-left:.5rem!important}.px-xxl-3{padding-right:1rem!important;padding-left:1rem!important}.px-xxl-4{padding-right:1.5rem!important;padding-left:1.5rem!important}.px-xxl-5{padding-right:3rem!important;padding-left:3rem!important}.py-xxl-0{padding-top:0!important;padding-bottom:0!important}.py-xxl-1{padding-top:.25rem!important;padding-bottom:.25rem!important}.py-xxl-2{padding-top:.5rem!important;padding-bottom:.5rem!important}.py-xxl-3{padding-top:1rem!important;padding-bottom:1rem!important}.py-xxl-4{padding-top:1.5rem!important;padding-bottom:1.5rem!important}.py-xxl-5{padding-top:3rem!important;padding-bottom:3rem!important}.pt-xxl-0{padding-top:0!important}.pt-xxl-1{padding-top:.25rem!important}.pt-xxl-2{padding-top:.5rem!important}.pt-xxl-3{padding-top:1rem!important}.pt-xxl-4{padding-top:1.5rem!important}.pt-xxl-5{padding-top:3rem!important}.pe-xxl-0{padding-right:0!important}.pe-xxl-1{padding-right:.25rem!important}.pe-xxl-2{padding-right:.5rem!important}.pe-xxl-3{padding-right:1rem!important}.pe-xxl-4{padding-right:1.5rem!important}.pe-xxl-5{padding-right:3rem!important}.pb-xxl-0{padding-bottom:0!important}.pb-xxl-1{padding-bottom:.25rem!important}.pb-xxl-2{padding-bottom:.5rem!important}.pb-xxl-3{padding-bottom:1rem!important}.pb-xxl-4{padding-bottom:1.5rem!important}.pb-xxl-5{padding-bottom:3rem!important}.ps-xxl-0{padding-left:0!important}.ps-xxl-1{padding-left:.25rem!important}.ps-xxl-2{padding-left:.5rem!important}.ps-xxl-3{padding-left:1rem!important}.ps-xxl-4{padding-left:1.5rem!important}.ps-xxl-5{padding-left:3rem!important}.gap-xxl-0{gap:0!important}.gap-xxl-1{gap:.25rem!important}.gap-xxl-2{gap:.5rem!important}.gap-xxl-3{gap:1rem!important}.gap-xxl-4{gap:1.5rem!important}.gap-xxl-5{gap:3rem!important}.row-gap-xxl-0{row-gap:0!important}.row-gap-xxl-1{row-gap:.25rem!important}.row-gap-xxl-2{row-gap:.5rem!important}.row-gap-xxl-3{row-gap:1rem!important}.row-gap-xxl-4{row-gap:1.5rem!important}.row-gap-xxl-5{row-gap:3rem!important}.column-gap-xxl-0{-moz-column-gap:0!important;column-gap:0!important}.column-gap-xxl-1{-moz-column-gap:0.25rem!important;column-gap:.25rem!important}.column-gap-xxl-2{-moz-column-gap:0.5rem!important;column-gap:.5rem!important}.column-gap-xxl-3{-moz-column-gap:1rem!important;column-gap:1rem!important}.column-gap-xxl-4{-moz-column-gap:1.5rem!important;column-gap:1.5rem!important}.column-gap-xxl-5{-moz-column-gap:3rem!important;column-gap:3rem!important}.text-xxl-start{text-align:left!important}.text-xxl-end{text-align:right!important}.text-xxl-center{text-align:center!important}}@media (min-width:1200px){.fs-1{font-size:2.5rem!important}.fs-2{font-size:2rem!important}.fs-3{font-size:1.75rem!important}.fs-4{font-size:1.5rem!important}}@media print{.d-print-inline{display:inline!important}.d-print-inline-block{display:inline-block!important}.d-print-block{display:block!important}.d-print-grid{display:grid!important}.d-print-inline-grid{display:inline-grid!important}.d-print-table{display:table!important}.d-print-table-row{display:table-row!important}.d-print-table-cell{display:table-cell!important}.d-print-flex{display:flex!important}.d-print-inline-flex{display:inline-flex!important}.d-print-none{display:none!important}}
/*# sourceMappingURL=bootstrap.min.css.map */===== ./static/bootstrap/js/bootstrap.bundle.min.js =====
/*!
  * Bootstrap v5.3.3 (https://getbootstrap.com/)
  * Copyright 2011-2024 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)
  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)
  */
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define(e):(t="undefined"!=typeof globalThis?globalThis:t||self).bootstrap=e()}(this,(function(){"use strict";const t=new Map,e={set(e,i,n){t.has(e)||t.set(e,new Map);const s=t.get(e);s.has(i)||0===s.size?s.set(i,n):console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(s.keys())[0]}.`)},get:(e,i)=>t.has(e)&&t.get(e).get(i)||null,remove(e,i){if(!t.has(e))return;const n=t.get(e);n.delete(i),0===n.size&&t.delete(e)}},i="transitionend",n=t=>(t&&window.CSS&&window.CSS.escape&&(t=t.replace(/#([^\s"#']+)/g,((t,e)=>`#${CSS.escape(e)}`))),t),s=t=>{t.dispatchEvent(new Event(i))},o=t=>!(!t||"object"!=typeof t)&&(void 0!==t.jquery&&(t=t[0]),void 0!==t.nodeType),r=t=>o(t)?t.jquery?t[0]:t:"string"==typeof t&&t.length>0?document.querySelector(n(t)):null,a=t=>{if(!o(t)||0===t.getClientRects().length)return!1;const e="visible"===getComputedStyle(t).getPropertyValue("visibility"),i=t.closest("details:not([open])");if(!i)return e;if(i!==t){const e=t.closest("summary");if(e&&e.parentNode!==i)return!1;if(null===e)return!1}return e},l=t=>!t||t.nodeType!==Node.ELEMENT_NODE||!!t.classList.contains("disabled")||(void 0!==t.disabled?t.disabled:t.hasAttribute("disabled")&&"false"!==t.getAttribute("disabled")),c=t=>{if(!document.documentElement.attachShadow)return null;if("function"==typeof t.getRootNode){const e=t.getRootNode();return e instanceof ShadowRoot?e:null}return t instanceof ShadowRoot?t:t.parentNode?c(t.parentNode):null},h=()=>{},d=t=>{t.offsetHeight},u=()=>window.jQuery&&!document.body.hasAttribute("data-bs-no-jquery")?window.jQuery:null,f=[],p=()=>"rtl"===document.documentElement.dir,m=t=>{var e;e=()=>{const e=u();if(e){const i=t.NAME,n=e.fn[i];e.fn[i]=t.jQueryInterface,e.fn[i].Constructor=t,e.fn[i].noConflict=()=>(e.fn[i]=n,t.jQueryInterface)}},"loading"===document.readyState?(f.length||document.addEventListener("DOMContentLoaded",(()=>{for(const t of f)t()})),f.push(e)):e()},g=(t,e=[],i=t)=>"function"==typeof t?t(...e):i,_=(t,e,n=!0)=>{if(!n)return void g(t);const o=(t=>{if(!t)return 0;let{transitionDuration:e,transitionDelay:i}=window.getComputedStyle(t);const n=Number.parseFloat(e),s=Number.parseFloat(i);return n||s?(e=e.split(",")[0],i=i.split(",")[0],1e3*(Number.parseFloat(e)+Number.parseFloat(i))):0})(e)+5;let r=!1;const a=({target:n})=>{n===e&&(r=!0,e.removeEventListener(i,a),g(t))};e.addEventListener(i,a),setTimeout((()=>{r||s(e)}),o)},b=(t,e,i,n)=>{const s=t.length;let o=t.indexOf(e);return-1===o?!i&&n?t[s-1]:t[0]:(o+=i?1:-1,n&&(o=(o+s)%s),t[Math.max(0,Math.min(o,s-1))])},v=/[^.]*(?=\..*)\.|.*/,y=/\..*/,w=/::\d+$/,A={};let E=1;const T={mouseenter:"mouseover",mouseleave:"mouseout"},C=new Set(["click","dblclick","mouseup","mousedown","contextmenu","mousewheel","DOMMouseScroll","mouseover","mouseout","mousemove","selectstart","selectend","keydown","keypress","keyup","orientationchange","touchstart","touchmove","touchend","touchcancel","pointerdown","pointermove","pointerup","pointerleave","pointercancel","gesturestart","gesturechange","gestureend","focus","blur","change","reset","select","submit","focusin","focusout","load","unload","beforeunload","resize","move","DOMContentLoaded","readystatechange","error","abort","scroll"]);function O(t,e){return e&&`${e}::${E++}`||t.uidEvent||E++}function x(t){const e=O(t);return t.uidEvent=e,A[e]=A[e]||{},A[e]}function k(t,e,i=null){return Object.values(t).find((t=>t.callable===e&&t.delegationSelector===i))}function L(t,e,i){const n="string"==typeof e,s=n?i:e||i;let o=I(t);return C.has(o)||(o=t),[n,s,o]}function S(t,e,i,n,s){if("string"!=typeof e||!t)return;let[o,r,a]=L(e,i,n);if(e in T){const t=t=>function(e){if(!e.relatedTarget||e.relatedTarget!==e.delegateTarget&&!e.delegateTarget.contains(e.relatedTarget))return t.call(this,e)};r=t(r)}const l=x(t),c=l[a]||(l[a]={}),h=k(c,r,o?i:null);if(h)return void(h.oneOff=h.oneOff&&s);const d=O(r,e.replace(v,"")),u=o?function(t,e,i){return function n(s){const o=t.querySelectorAll(e);for(let{target:r}=s;r&&r!==this;r=r.parentNode)for(const a of o)if(a===r)return P(s,{delegateTarget:r}),n.oneOff&&N.off(t,s.type,e,i),i.apply(r,[s])}}(t,i,r):function(t,e){return function i(n){return P(n,{delegateTarget:t}),i.oneOff&&N.off(t,n.type,e),e.apply(t,[n])}}(t,r);u.delegationSelector=o?i:null,u.callable=r,u.oneOff=s,u.uidEvent=d,c[d]=u,t.addEventListener(a,u,o)}function D(t,e,i,n,s){const o=k(e[i],n,s);o&&(t.removeEventListener(i,o,Boolean(s)),delete e[i][o.uidEvent])}function $(t,e,i,n){const s=e[i]||{};for(const[o,r]of Object.entries(s))o.includes(n)&&D(t,e,i,r.callable,r.delegationSelector)}function I(t){return t=t.replace(y,""),T[t]||t}const N={on(t,e,i,n){S(t,e,i,n,!1)},one(t,e,i,n){S(t,e,i,n,!0)},off(t,e,i,n){if("string"!=typeof e||!t)return;const[s,o,r]=L(e,i,n),a=r!==e,l=x(t),c=l[r]||{},h=e.startsWith(".");if(void 0===o){if(h)for(const i of Object.keys(l))$(t,l,i,e.slice(1));for(const[i,n]of Object.entries(c)){const s=i.replace(w,"");a&&!e.includes(s)||D(t,l,r,n.callable,n.delegationSelector)}}else{if(!Object.keys(c).length)return;D(t,l,r,o,s?i:null)}},trigger(t,e,i){if("string"!=typeof e||!t)return null;const n=u();let s=null,o=!0,r=!0,a=!1;e!==I(e)&&n&&(s=n.Event(e,i),n(t).trigger(s),o=!s.isPropagationStopped(),r=!s.isImmediatePropagationStopped(),a=s.isDefaultPrevented());const l=P(new Event(e,{bubbles:o,cancelable:!0}),i);return a&&l.preventDefault(),r&&t.dispatchEvent(l),l.defaultPrevented&&s&&s.preventDefault(),l}};function P(t,e={}){for(const[i,n]of Object.entries(e))try{t[i]=n}catch(e){Object.defineProperty(t,i,{configurable:!0,get:()=>n})}return t}function j(t){if("true"===t)return!0;if("false"===t)return!1;if(t===Number(t).toString())return Number(t);if(""===t||"null"===t)return null;if("string"!=typeof t)return t;try{return JSON.parse(decodeURIComponent(t))}catch(e){return t}}function M(t){return t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`))}const F={setDataAttribute(t,e,i){t.setAttribute(`data-bs-${M(e)}`,i)},removeDataAttribute(t,e){t.removeAttribute(`data-bs-${M(e)}`)},getDataAttributes(t){if(!t)return{};const e={},i=Object.keys(t.dataset).filter((t=>t.startsWith("bs")&&!t.startsWith("bsConfig")));for(const n of i){let i=n.replace(/^bs/,"");i=i.charAt(0).toLowerCase()+i.slice(1,i.length),e[i]=j(t.dataset[n])}return e},getDataAttribute:(t,e)=>j(t.getAttribute(`data-bs-${M(e)}`))};class H{static get Default(){return{}}static get DefaultType(){return{}}static get NAME(){throw new Error('You have to implement the static method "NAME", for each component!')}_getConfig(t){return t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t}_mergeConfigObj(t,e){const i=o(e)?F.getDataAttribute(e,"config"):{};return{...this.constructor.Default,..."object"==typeof i?i:{},...o(e)?F.getDataAttributes(e):{},..."object"==typeof t?t:{}}}_typeCheckConfig(t,e=this.constructor.DefaultType){for(const[n,s]of Object.entries(e)){const e=t[n],r=o(e)?"element":null==(i=e)?`${i}`:Object.prototype.toString.call(i).match(/\s([a-z]+)/i)[1].toLowerCase();if(!new RegExp(s).test(r))throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${n}" provided type "${r}" but expected type "${s}".`)}var i}}class W extends H{constructor(t,i){super(),(t=r(t))&&(this._element=t,this._config=this._getConfig(i),e.set(this._element,this.constructor.DATA_KEY,this))}dispose(){e.remove(this._element,this.constructor.DATA_KEY),N.off(this._element,this.constructor.EVENT_KEY);for(const t of Object.getOwnPropertyNames(this))this[t]=null}_queueCallback(t,e,i=!0){_(t,e,i)}_getConfig(t){return t=this._mergeConfigObj(t,this._element),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}static getInstance(t){return e.get(r(t),this.DATA_KEY)}static getOrCreateInstance(t,e={}){return this.getInstance(t)||new this(t,"object"==typeof e?e:null)}static get VERSION(){return"5.3.3"}static get DATA_KEY(){return`bs.${this.NAME}`}static get EVENT_KEY(){return`.${this.DATA_KEY}`}static eventName(t){return`${t}${this.EVENT_KEY}`}}const B=t=>{let e=t.getAttribute("data-bs-target");if(!e||"#"===e){let i=t.getAttribute("href");if(!i||!i.includes("#")&&!i.startsWith("."))return null;i.includes("#")&&!i.startsWith("#")&&(i=`#${i.split("#")[1]}`),e=i&&"#"!==i?i.trim():null}return e?e.split(",").map((t=>n(t))).join(","):null},z={find:(t,e=document.documentElement)=>[].concat(...Element.prototype.querySelectorAll.call(e,t)),findOne:(t,e=document.documentElement)=>Element.prototype.querySelector.call(e,t),children:(t,e)=>[].concat(...t.children).filter((t=>t.matches(e))),parents(t,e){const i=[];let n=t.parentNode.closest(e);for(;n;)i.push(n),n=n.parentNode.closest(e);return i},prev(t,e){let i=t.previousElementSibling;for(;i;){if(i.matches(e))return[i];i=i.previousElementSibling}return[]},next(t,e){let i=t.nextElementSibling;for(;i;){if(i.matches(e))return[i];i=i.nextElementSibling}return[]},focusableChildren(t){const e=["a","button","input","textarea","select","details","[tabindex]",'[contenteditable="true"]'].map((t=>`${t}:not([tabindex^="-"])`)).join(",");return this.find(e,t).filter((t=>!l(t)&&a(t)))},getSelectorFromElement(t){const e=B(t);return e&&z.findOne(e)?e:null},getElementFromSelector(t){const e=B(t);return e?z.findOne(e):null},getMultipleElementsFromSelector(t){const e=B(t);return e?z.find(e):[]}},R=(t,e="hide")=>{const i=`click.dismiss${t.EVENT_KEY}`,n=t.NAME;N.on(document,i,`[data-bs-dismiss="${n}"]`,(function(i){if(["A","AREA"].includes(this.tagName)&&i.preventDefault(),l(this))return;const s=z.getElementFromSelector(this)||this.closest(`.${n}`);t.getOrCreateInstance(s)[e]()}))},q=".bs.alert",V=`close${q}`,K=`closed${q}`;class Q extends W{static get NAME(){return"alert"}close(){if(N.trigger(this._element,V).defaultPrevented)return;this._element.classList.remove("show");const t=this._element.classList.contains("fade");this._queueCallback((()=>this._destroyElement()),this._element,t)}_destroyElement(){this._element.remove(),N.trigger(this._element,K),this.dispose()}static jQueryInterface(t){return this.each((function(){const e=Q.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}R(Q,"close"),m(Q);const X='[data-bs-toggle="button"]';class Y extends W{static get NAME(){return"button"}toggle(){this._element.setAttribute("aria-pressed",this._element.classList.toggle("active"))}static jQueryInterface(t){return this.each((function(){const e=Y.getOrCreateInstance(this);"toggle"===t&&e[t]()}))}}N.on(document,"click.bs.button.data-api",X,(t=>{t.preventDefault();const e=t.target.closest(X);Y.getOrCreateInstance(e).toggle()})),m(Y);const U=".bs.swipe",G=`touchstart${U}`,J=`touchmove${U}`,Z=`touchend${U}`,tt=`pointerdown${U}`,et=`pointerup${U}`,it={endCallback:null,leftCallback:null,rightCallback:null},nt={endCallback:"(function|null)",leftCallback:"(function|null)",rightCallback:"(function|null)"};class st extends H{constructor(t,e){super(),this._element=t,t&&st.isSupported()&&(this._config=this._getConfig(e),this._deltaX=0,this._supportPointerEvents=Boolean(window.PointerEvent),this._initEvents())}static get Default(){return it}static get DefaultType(){return nt}static get NAME(){return"swipe"}dispose(){N.off(this._element,U)}_start(t){this._supportPointerEvents?this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX):this._deltaX=t.touches[0].clientX}_end(t){this._eventIsPointerPenTouch(t)&&(this._deltaX=t.clientX-this._deltaX),this._handleSwipe(),g(this._config.endCallback)}_move(t){this._deltaX=t.touches&&t.touches.length>1?0:t.touches[0].clientX-this._deltaX}_handleSwipe(){const t=Math.abs(this._deltaX);if(t<=40)return;const e=t/this._deltaX;this._deltaX=0,e&&g(e>0?this._config.rightCallback:this._config.leftCallback)}_initEvents(){this._supportPointerEvents?(N.on(this._element,tt,(t=>this._start(t))),N.on(this._element,et,(t=>this._end(t))),this._element.classList.add("pointer-event")):(N.on(this._element,G,(t=>this._start(t))),N.on(this._element,J,(t=>this._move(t))),N.on(this._element,Z,(t=>this._end(t))))}_eventIsPointerPenTouch(t){return this._supportPointerEvents&&("pen"===t.pointerType||"touch"===t.pointerType)}static isSupported(){return"ontouchstart"in document.documentElement||navigator.maxTouchPoints>0}}const ot=".bs.carousel",rt=".data-api",at="next",lt="prev",ct="left",ht="right",dt=`slide${ot}`,ut=`slid${ot}`,ft=`keydown${ot}`,pt=`mouseenter${ot}`,mt=`mouseleave${ot}`,gt=`dragstart${ot}`,_t=`load${ot}${rt}`,bt=`click${ot}${rt}`,vt="carousel",yt="active",wt=".active",At=".carousel-item",Et=wt+At,Tt={ArrowLeft:ht,ArrowRight:ct},Ct={interval:5e3,keyboard:!0,pause:"hover",ride:!1,touch:!0,wrap:!0},Ot={interval:"(number|boolean)",keyboard:"boolean",pause:"(string|boolean)",ride:"(boolean|string)",touch:"boolean",wrap:"boolean"};class xt extends W{constructor(t,e){super(t,e),this._interval=null,this._activeElement=null,this._isSliding=!1,this.touchTimeout=null,this._swipeHelper=null,this._indicatorsElement=z.findOne(".carousel-indicators",this._element),this._addEventListeners(),this._config.ride===vt&&this.cycle()}static get Default(){return Ct}static get DefaultType(){return Ot}static get NAME(){return"carousel"}next(){this._slide(at)}nextWhenVisible(){!document.hidden&&a(this._element)&&this.next()}prev(){this._slide(lt)}pause(){this._isSliding&&s(this._element),this._clearInterval()}cycle(){this._clearInterval(),this._updateInterval(),this._interval=setInterval((()=>this.nextWhenVisible()),this._config.interval)}_maybeEnableCycle(){this._config.ride&&(this._isSliding?N.one(this._element,ut,(()=>this.cycle())):this.cycle())}to(t){const e=this._getItems();if(t>e.length-1||t<0)return;if(this._isSliding)return void N.one(this._element,ut,(()=>this.to(t)));const i=this._getItemIndex(this._getActive());if(i===t)return;const n=t>i?at:lt;this._slide(n,e[t])}dispose(){this._swipeHelper&&this._swipeHelper.dispose(),super.dispose()}_configAfterMerge(t){return t.defaultInterval=t.interval,t}_addEventListeners(){this._config.keyboard&&N.on(this._element,ft,(t=>this._keydown(t))),"hover"===this._config.pause&&(N.on(this._element,pt,(()=>this.pause())),N.on(this._element,mt,(()=>this._maybeEnableCycle()))),this._config.touch&&st.isSupported()&&this._addTouchEventListeners()}_addTouchEventListeners(){for(const t of z.find(".carousel-item img",this._element))N.on(t,gt,(t=>t.preventDefault()));const t={leftCallback:()=>this._slide(this._directionToOrder(ct)),rightCallback:()=>this._slide(this._directionToOrder(ht)),endCallback:()=>{"hover"===this._config.pause&&(this.pause(),this.touchTimeout&&clearTimeout(this.touchTimeout),this.touchTimeout=setTimeout((()=>this._maybeEnableCycle()),500+this._config.interval))}};this._swipeHelper=new st(this._element,t)}_keydown(t){if(/input|textarea/i.test(t.target.tagName))return;const e=Tt[t.key];e&&(t.preventDefault(),this._slide(this._directionToOrder(e)))}_getItemIndex(t){return this._getItems().indexOf(t)}_setActiveIndicatorElement(t){if(!this._indicatorsElement)return;const e=z.findOne(wt,this._indicatorsElement);e.classList.remove(yt),e.removeAttribute("aria-current");const i=z.findOne(`[data-bs-slide-to="${t}"]`,this._indicatorsElement);i&&(i.classList.add(yt),i.setAttribute("aria-current","true"))}_updateInterval(){const t=this._activeElement||this._getActive();if(!t)return;const e=Number.parseInt(t.getAttribute("data-bs-interval"),10);this._config.interval=e||this._config.defaultInterval}_slide(t,e=null){if(this._isSliding)return;const i=this._getActive(),n=t===at,s=e||b(this._getItems(),i,n,this._config.wrap);if(s===i)return;const o=this._getItemIndex(s),r=e=>N.trigger(this._element,e,{relatedTarget:s,direction:this._orderToDirection(t),from:this._getItemIndex(i),to:o});if(r(dt).defaultPrevented)return;if(!i||!s)return;const a=Boolean(this._interval);this.pause(),this._isSliding=!0,this._setActiveIndicatorElement(o),this._activeElement=s;const l=n?"carousel-item-start":"carousel-item-end",c=n?"carousel-item-next":"carousel-item-prev";s.classList.add(c),d(s),i.classList.add(l),s.classList.add(l),this._queueCallback((()=>{s.classList.remove(l,c),s.classList.add(yt),i.classList.remove(yt,c,l),this._isSliding=!1,r(ut)}),i,this._isAnimated()),a&&this.cycle()}_isAnimated(){return this._element.classList.contains("slide")}_getActive(){return z.findOne(Et,this._element)}_getItems(){return z.find(At,this._element)}_clearInterval(){this._interval&&(clearInterval(this._interval),this._interval=null)}_directionToOrder(t){return p()?t===ct?lt:at:t===ct?at:lt}_orderToDirection(t){return p()?t===lt?ct:ht:t===lt?ht:ct}static jQueryInterface(t){return this.each((function(){const e=xt.getOrCreateInstance(this,t);if("number"!=typeof t){if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}else e.to(t)}))}}N.on(document,bt,"[data-bs-slide], [data-bs-slide-to]",(function(t){const e=z.getElementFromSelector(this);if(!e||!e.classList.contains(vt))return;t.preventDefault();const i=xt.getOrCreateInstance(e),n=this.getAttribute("data-bs-slide-to");return n?(i.to(n),void i._maybeEnableCycle()):"next"===F.getDataAttribute(this,"slide")?(i.next(),void i._maybeEnableCycle()):(i.prev(),void i._maybeEnableCycle())})),N.on(window,_t,(()=>{const t=z.find('[data-bs-ride="carousel"]');for(const e of t)xt.getOrCreateInstance(e)})),m(xt);const kt=".bs.collapse",Lt=`show${kt}`,St=`shown${kt}`,Dt=`hide${kt}`,$t=`hidden${kt}`,It=`click${kt}.data-api`,Nt="show",Pt="collapse",jt="collapsing",Mt=`:scope .${Pt} .${Pt}`,Ft='[data-bs-toggle="collapse"]',Ht={parent:null,toggle:!0},Wt={parent:"(null|element)",toggle:"boolean"};class Bt extends W{constructor(t,e){super(t,e),this._isTransitioning=!1,this._triggerArray=[];const i=z.find(Ft);for(const t of i){const e=z.getSelectorFromElement(t),i=z.find(e).filter((t=>t===this._element));null!==e&&i.length&&this._triggerArray.push(t)}this._initializeChildren(),this._config.parent||this._addAriaAndCollapsedClass(this._triggerArray,this._isShown()),this._config.toggle&&this.toggle()}static get Default(){return Ht}static get DefaultType(){return Wt}static get NAME(){return"collapse"}toggle(){this._isShown()?this.hide():this.show()}show(){if(this._isTransitioning||this._isShown())return;let t=[];if(this._config.parent&&(t=this._getFirstLevelChildren(".collapse.show, .collapse.collapsing").filter((t=>t!==this._element)).map((t=>Bt.getOrCreateInstance(t,{toggle:!1})))),t.length&&t[0]._isTransitioning)return;if(N.trigger(this._element,Lt).defaultPrevented)return;for(const e of t)e.hide();const e=this._getDimension();this._element.classList.remove(Pt),this._element.classList.add(jt),this._element.style[e]=0,this._addAriaAndCollapsedClass(this._triggerArray,!0),this._isTransitioning=!0;const i=`scroll${e[0].toUpperCase()+e.slice(1)}`;this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(jt),this._element.classList.add(Pt,Nt),this._element.style[e]="",N.trigger(this._element,St)}),this._element,!0),this._element.style[e]=`${this._element[i]}px`}hide(){if(this._isTransitioning||!this._isShown())return;if(N.trigger(this._element,Dt).defaultPrevented)return;const t=this._getDimension();this._element.style[t]=`${this._element.getBoundingClientRect()[t]}px`,d(this._element),this._element.classList.add(jt),this._element.classList.remove(Pt,Nt);for(const t of this._triggerArray){const e=z.getElementFromSelector(t);e&&!this._isShown(e)&&this._addAriaAndCollapsedClass([t],!1)}this._isTransitioning=!0,this._element.style[t]="",this._queueCallback((()=>{this._isTransitioning=!1,this._element.classList.remove(jt),this._element.classList.add(Pt),N.trigger(this._element,$t)}),this._element,!0)}_isShown(t=this._element){return t.classList.contains(Nt)}_configAfterMerge(t){return t.toggle=Boolean(t.toggle),t.parent=r(t.parent),t}_getDimension(){return this._element.classList.contains("collapse-horizontal")?"width":"height"}_initializeChildren(){if(!this._config.parent)return;const t=this._getFirstLevelChildren(Ft);for(const e of t){const t=z.getElementFromSelector(e);t&&this._addAriaAndCollapsedClass([e],this._isShown(t))}}_getFirstLevelChildren(t){const e=z.find(Mt,this._config.parent);return z.find(t,this._config.parent).filter((t=>!e.includes(t)))}_addAriaAndCollapsedClass(t,e){if(t.length)for(const i of t)i.classList.toggle("collapsed",!e),i.setAttribute("aria-expanded",e)}static jQueryInterface(t){const e={};return"string"==typeof t&&/show|hide/.test(t)&&(e.toggle=!1),this.each((function(){const i=Bt.getOrCreateInstance(this,e);if("string"==typeof t){if(void 0===i[t])throw new TypeError(`No method named "${t}"`);i[t]()}}))}}N.on(document,It,Ft,(function(t){("A"===t.target.tagName||t.delegateTarget&&"A"===t.delegateTarget.tagName)&&t.preventDefault();for(const t of z.getMultipleElementsFromSelector(this))Bt.getOrCreateInstance(t,{toggle:!1}).toggle()})),m(Bt);var zt="top",Rt="bottom",qt="right",Vt="left",Kt="auto",Qt=[zt,Rt,qt,Vt],Xt="start",Yt="end",Ut="clippingParents",Gt="viewport",Jt="popper",Zt="reference",te=Qt.reduce((function(t,e){return t.concat([e+"-"+Xt,e+"-"+Yt])}),[]),ee=[].concat(Qt,[Kt]).reduce((function(t,e){return t.concat([e,e+"-"+Xt,e+"-"+Yt])}),[]),ie="beforeRead",ne="read",se="afterRead",oe="beforeMain",re="main",ae="afterMain",le="beforeWrite",ce="write",he="afterWrite",de=[ie,ne,se,oe,re,ae,le,ce,he];function ue(t){return t?(t.nodeName||"").toLowerCase():null}function fe(t){if(null==t)return window;if("[object Window]"!==t.toString()){var e=t.ownerDocument;return e&&e.defaultView||window}return t}function pe(t){return t instanceof fe(t).Element||t instanceof Element}function me(t){return t instanceof fe(t).HTMLElement||t instanceof HTMLElement}function ge(t){return"undefined"!=typeof ShadowRoot&&(t instanceof fe(t).ShadowRoot||t instanceof ShadowRoot)}const _e={name:"applyStyles",enabled:!0,phase:"write",fn:function(t){var e=t.state;Object.keys(e.elements).forEach((function(t){var i=e.styles[t]||{},n=e.attributes[t]||{},s=e.elements[t];me(s)&&ue(s)&&(Object.assign(s.style,i),Object.keys(n).forEach((function(t){var e=n[t];!1===e?s.removeAttribute(t):s.setAttribute(t,!0===e?"":e)})))}))},effect:function(t){var e=t.state,i={popper:{position:e.options.strategy,left:"0",top:"0",margin:"0"},arrow:{position:"absolute"},reference:{}};return Object.assign(e.elements.popper.style,i.popper),e.styles=i,e.elements.arrow&&Object.assign(e.elements.arrow.style,i.arrow),function(){Object.keys(e.elements).forEach((function(t){var n=e.elements[t],s=e.attributes[t]||{},o=Object.keys(e.styles.hasOwnProperty(t)?e.styles[t]:i[t]).reduce((function(t,e){return t[e]="",t}),{});me(n)&&ue(n)&&(Object.assign(n.style,o),Object.keys(s).forEach((function(t){n.removeAttribute(t)})))}))}},requires:["computeStyles"]};function be(t){return t.split("-")[0]}var ve=Math.max,ye=Math.min,we=Math.round;function Ae(){var t=navigator.userAgentData;return null!=t&&t.brands&&Array.isArray(t.brands)?t.brands.map((function(t){return t.brand+"/"+t.version})).join(" "):navigator.userAgent}function Ee(){return!/^((?!chrome|android).)*safari/i.test(Ae())}function Te(t,e,i){void 0===e&&(e=!1),void 0===i&&(i=!1);var n=t.getBoundingClientRect(),s=1,o=1;e&&me(t)&&(s=t.offsetWidth>0&&we(n.width)/t.offsetWidth||1,o=t.offsetHeight>0&&we(n.height)/t.offsetHeight||1);var r=(pe(t)?fe(t):window).visualViewport,a=!Ee()&&i,l=(n.left+(a&&r?r.offsetLeft:0))/s,c=(n.top+(a&&r?r.offsetTop:0))/o,h=n.width/s,d=n.height/o;return{width:h,height:d,top:c,right:l+h,bottom:c+d,left:l,x:l,y:c}}function Ce(t){var e=Te(t),i=t.offsetWidth,n=t.offsetHeight;return Math.abs(e.width-i)<=1&&(i=e.width),Math.abs(e.height-n)<=1&&(n=e.height),{x:t.offsetLeft,y:t.offsetTop,width:i,height:n}}function Oe(t,e){var i=e.getRootNode&&e.getRootNode();if(t.contains(e))return!0;if(i&&ge(i)){var n=e;do{if(n&&t.isSameNode(n))return!0;n=n.parentNode||n.host}while(n)}return!1}function xe(t){return fe(t).getComputedStyle(t)}function ke(t){return["table","td","th"].indexOf(ue(t))>=0}function Le(t){return((pe(t)?t.ownerDocument:t.document)||window.document).documentElement}function Se(t){return"html"===ue(t)?t:t.assignedSlot||t.parentNode||(ge(t)?t.host:null)||Le(t)}function De(t){return me(t)&&"fixed"!==xe(t).position?t.offsetParent:null}function $e(t){for(var e=fe(t),i=De(t);i&&ke(i)&&"static"===xe(i).position;)i=De(i);return i&&("html"===ue(i)||"body"===ue(i)&&"static"===xe(i).position)?e:i||function(t){var e=/firefox/i.test(Ae());if(/Trident/i.test(Ae())&&me(t)&&"fixed"===xe(t).position)return null;var i=Se(t);for(ge(i)&&(i=i.host);me(i)&&["html","body"].indexOf(ue(i))<0;){var n=xe(i);if("none"!==n.transform||"none"!==n.perspective||"paint"===n.contain||-1!==["transform","perspective"].indexOf(n.willChange)||e&&"filter"===n.willChange||e&&n.filter&&"none"!==n.filter)return i;i=i.parentNode}return null}(t)||e}function Ie(t){return["top","bottom"].indexOf(t)>=0?"x":"y"}function Ne(t,e,i){return ve(t,ye(e,i))}function Pe(t){return Object.assign({},{top:0,right:0,bottom:0,left:0},t)}function je(t,e){return e.reduce((function(e,i){return e[i]=t,e}),{})}const Me={name:"arrow",enabled:!0,phase:"main",fn:function(t){var e,i=t.state,n=t.name,s=t.options,o=i.elements.arrow,r=i.modifiersData.popperOffsets,a=be(i.placement),l=Ie(a),c=[Vt,qt].indexOf(a)>=0?"height":"width";if(o&&r){var h=function(t,e){return Pe("number"!=typeof(t="function"==typeof t?t(Object.assign({},e.rects,{placement:e.placement})):t)?t:je(t,Qt))}(s.padding,i),d=Ce(o),u="y"===l?zt:Vt,f="y"===l?Rt:qt,p=i.rects.reference[c]+i.rects.reference[l]-r[l]-i.rects.popper[c],m=r[l]-i.rects.reference[l],g=$e(o),_=g?"y"===l?g.clientHeight||0:g.clientWidth||0:0,b=p/2-m/2,v=h[u],y=_-d[c]-h[f],w=_/2-d[c]/2+b,A=Ne(v,w,y),E=l;i.modifiersData[n]=((e={})[E]=A,e.centerOffset=A-w,e)}},effect:function(t){var e=t.state,i=t.options.element,n=void 0===i?"[data-popper-arrow]":i;null!=n&&("string"!=typeof n||(n=e.elements.popper.querySelector(n)))&&Oe(e.elements.popper,n)&&(e.elements.arrow=n)},requires:["popperOffsets"],requiresIfExists:["preventOverflow"]};function Fe(t){return t.split("-")[1]}var He={top:"auto",right:"auto",bottom:"auto",left:"auto"};function We(t){var e,i=t.popper,n=t.popperRect,s=t.placement,o=t.variation,r=t.offsets,a=t.position,l=t.gpuAcceleration,c=t.adaptive,h=t.roundOffsets,d=t.isFixed,u=r.x,f=void 0===u?0:u,p=r.y,m=void 0===p?0:p,g="function"==typeof h?h({x:f,y:m}):{x:f,y:m};f=g.x,m=g.y;var _=r.hasOwnProperty("x"),b=r.hasOwnProperty("y"),v=Vt,y=zt,w=window;if(c){var A=$e(i),E="clientHeight",T="clientWidth";A===fe(i)&&"static"!==xe(A=Le(i)).position&&"absolute"===a&&(E="scrollHeight",T="scrollWidth"),(s===zt||(s===Vt||s===qt)&&o===Yt)&&(y=Rt,m-=(d&&A===w&&w.visualViewport?w.visualViewport.height:A[E])-n.height,m*=l?1:-1),s!==Vt&&(s!==zt&&s!==Rt||o!==Yt)||(v=qt,f-=(d&&A===w&&w.visualViewport?w.visualViewport.width:A[T])-n.width,f*=l?1:-1)}var C,O=Object.assign({position:a},c&&He),x=!0===h?function(t,e){var i=t.x,n=t.y,s=e.devicePixelRatio||1;return{x:we(i*s)/s||0,y:we(n*s)/s||0}}({x:f,y:m},fe(i)):{x:f,y:m};return f=x.x,m=x.y,l?Object.assign({},O,((C={})[y]=b?"0":"",C[v]=_?"0":"",C.transform=(w.devicePixelRatio||1)<=1?"translate("+f+"px, "+m+"px)":"translate3d("+f+"px, "+m+"px, 0)",C)):Object.assign({},O,((e={})[y]=b?m+"px":"",e[v]=_?f+"px":"",e.transform="",e))}const Be={name:"computeStyles",enabled:!0,phase:"beforeWrite",fn:function(t){var e=t.state,i=t.options,n=i.gpuAcceleration,s=void 0===n||n,o=i.adaptive,r=void 0===o||o,a=i.roundOffsets,l=void 0===a||a,c={placement:be(e.placement),variation:Fe(e.placement),popper:e.elements.popper,popperRect:e.rects.popper,gpuAcceleration:s,isFixed:"fixed"===e.options.strategy};null!=e.modifiersData.popperOffsets&&(e.styles.popper=Object.assign({},e.styles.popper,We(Object.assign({},c,{offsets:e.modifiersData.popperOffsets,position:e.options.strategy,adaptive:r,roundOffsets:l})))),null!=e.modifiersData.arrow&&(e.styles.arrow=Object.assign({},e.styles.arrow,We(Object.assign({},c,{offsets:e.modifiersData.arrow,position:"absolute",adaptive:!1,roundOffsets:l})))),e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-placement":e.placement})},data:{}};var ze={passive:!0};const Re={name:"eventListeners",enabled:!0,phase:"write",fn:function(){},effect:function(t){var e=t.state,i=t.instance,n=t.options,s=n.scroll,o=void 0===s||s,r=n.resize,a=void 0===r||r,l=fe(e.elements.popper),c=[].concat(e.scrollParents.reference,e.scrollParents.popper);return o&&c.forEach((function(t){t.addEventListener("scroll",i.update,ze)})),a&&l.addEventListener("resize",i.update,ze),function(){o&&c.forEach((function(t){t.removeEventListener("scroll",i.update,ze)})),a&&l.removeEventListener("resize",i.update,ze)}},data:{}};var qe={left:"right",right:"left",bottom:"top",top:"bottom"};function Ve(t){return t.replace(/left|right|bottom|top/g,(function(t){return qe[t]}))}var Ke={start:"end",end:"start"};function Qe(t){return t.replace(/start|end/g,(function(t){return Ke[t]}))}function Xe(t){var e=fe(t);return{scrollLeft:e.pageXOffset,scrollTop:e.pageYOffset}}function Ye(t){return Te(Le(t)).left+Xe(t).scrollLeft}function Ue(t){var e=xe(t),i=e.overflow,n=e.overflowX,s=e.overflowY;return/auto|scroll|overlay|hidden/.test(i+s+n)}function Ge(t){return["html","body","#document"].indexOf(ue(t))>=0?t.ownerDocument.body:me(t)&&Ue(t)?t:Ge(Se(t))}function Je(t,e){var i;void 0===e&&(e=[]);var n=Ge(t),s=n===(null==(i=t.ownerDocument)?void 0:i.body),o=fe(n),r=s?[o].concat(o.visualViewport||[],Ue(n)?n:[]):n,a=e.concat(r);return s?a:a.concat(Je(Se(r)))}function Ze(t){return Object.assign({},t,{left:t.x,top:t.y,right:t.x+t.width,bottom:t.y+t.height})}function ti(t,e,i){return e===Gt?Ze(function(t,e){var i=fe(t),n=Le(t),s=i.visualViewport,o=n.clientWidth,r=n.clientHeight,a=0,l=0;if(s){o=s.width,r=s.height;var c=Ee();(c||!c&&"fixed"===e)&&(a=s.offsetLeft,l=s.offsetTop)}return{width:o,height:r,x:a+Ye(t),y:l}}(t,i)):pe(e)?function(t,e){var i=Te(t,!1,"fixed"===e);return i.top=i.top+t.clientTop,i.left=i.left+t.clientLeft,i.bottom=i.top+t.clientHeight,i.right=i.left+t.clientWidth,i.width=t.clientWidth,i.height=t.clientHeight,i.x=i.left,i.y=i.top,i}(e,i):Ze(function(t){var e,i=Le(t),n=Xe(t),s=null==(e=t.ownerDocument)?void 0:e.body,o=ve(i.scrollWidth,i.clientWidth,s?s.scrollWidth:0,s?s.clientWidth:0),r=ve(i.scrollHeight,i.clientHeight,s?s.scrollHeight:0,s?s.clientHeight:0),a=-n.scrollLeft+Ye(t),l=-n.scrollTop;return"rtl"===xe(s||i).direction&&(a+=ve(i.clientWidth,s?s.clientWidth:0)-o),{width:o,height:r,x:a,y:l}}(Le(t)))}function ei(t){var e,i=t.reference,n=t.element,s=t.placement,o=s?be(s):null,r=s?Fe(s):null,a=i.x+i.width/2-n.width/2,l=i.y+i.height/2-n.height/2;switch(o){case zt:e={x:a,y:i.y-n.height};break;case Rt:e={x:a,y:i.y+i.height};break;case qt:e={x:i.x+i.width,y:l};break;case Vt:e={x:i.x-n.width,y:l};break;default:e={x:i.x,y:i.y}}var c=o?Ie(o):null;if(null!=c){var h="y"===c?"height":"width";switch(r){case Xt:e[c]=e[c]-(i[h]/2-n[h]/2);break;case Yt:e[c]=e[c]+(i[h]/2-n[h]/2)}}return e}function ii(t,e){void 0===e&&(e={});var i=e,n=i.placement,s=void 0===n?t.placement:n,o=i.strategy,r=void 0===o?t.strategy:o,a=i.boundary,l=void 0===a?Ut:a,c=i.rootBoundary,h=void 0===c?Gt:c,d=i.elementContext,u=void 0===d?Jt:d,f=i.altBoundary,p=void 0!==f&&f,m=i.padding,g=void 0===m?0:m,_=Pe("number"!=typeof g?g:je(g,Qt)),b=u===Jt?Zt:Jt,v=t.rects.popper,y=t.elements[p?b:u],w=function(t,e,i,n){var s="clippingParents"===e?function(t){var e=Je(Se(t)),i=["absolute","fixed"].indexOf(xe(t).position)>=0&&me(t)?$e(t):t;return pe(i)?e.filter((function(t){return pe(t)&&Oe(t,i)&&"body"!==ue(t)})):[]}(t):[].concat(e),o=[].concat(s,[i]),r=o[0],a=o.reduce((function(e,i){var s=ti(t,i,n);return e.top=ve(s.top,e.top),e.right=ye(s.right,e.right),e.bottom=ye(s.bottom,e.bottom),e.left=ve(s.left,e.left),e}),ti(t,r,n));return a.width=a.right-a.left,a.height=a.bottom-a.top,a.x=a.left,a.y=a.top,a}(pe(y)?y:y.contextElement||Le(t.elements.popper),l,h,r),A=Te(t.elements.reference),E=ei({reference:A,element:v,strategy:"absolute",placement:s}),T=Ze(Object.assign({},v,E)),C=u===Jt?T:A,O={top:w.top-C.top+_.top,bottom:C.bottom-w.bottom+_.bottom,left:w.left-C.left+_.left,right:C.right-w.right+_.right},x=t.modifiersData.offset;if(u===Jt&&x){var k=x[s];Object.keys(O).forEach((function(t){var e=[qt,Rt].indexOf(t)>=0?1:-1,i=[zt,Rt].indexOf(t)>=0?"y":"x";O[t]+=k[i]*e}))}return O}function ni(t,e){void 0===e&&(e={});var i=e,n=i.placement,s=i.boundary,o=i.rootBoundary,r=i.padding,a=i.flipVariations,l=i.allowedAutoPlacements,c=void 0===l?ee:l,h=Fe(n),d=h?a?te:te.filter((function(t){return Fe(t)===h})):Qt,u=d.filter((function(t){return c.indexOf(t)>=0}));0===u.length&&(u=d);var f=u.reduce((function(e,i){return e[i]=ii(t,{placement:i,boundary:s,rootBoundary:o,padding:r})[be(i)],e}),{});return Object.keys(f).sort((function(t,e){return f[t]-f[e]}))}const si={name:"flip",enabled:!0,phase:"main",fn:function(t){var e=t.state,i=t.options,n=t.name;if(!e.modifiersData[n]._skip){for(var s=i.mainAxis,o=void 0===s||s,r=i.altAxis,a=void 0===r||r,l=i.fallbackPlacements,c=i.padding,h=i.boundary,d=i.rootBoundary,u=i.altBoundary,f=i.flipVariations,p=void 0===f||f,m=i.allowedAutoPlacements,g=e.options.placement,_=be(g),b=l||(_!==g&&p?function(t){if(be(t)===Kt)return[];var e=Ve(t);return[Qe(t),e,Qe(e)]}(g):[Ve(g)]),v=[g].concat(b).reduce((function(t,i){return t.concat(be(i)===Kt?ni(e,{placement:i,boundary:h,rootBoundary:d,padding:c,flipVariations:p,allowedAutoPlacements:m}):i)}),[]),y=e.rects.reference,w=e.rects.popper,A=new Map,E=!0,T=v[0],C=0;C<v.length;C++){var O=v[C],x=be(O),k=Fe(O)===Xt,L=[zt,Rt].indexOf(x)>=0,S=L?"width":"height",D=ii(e,{placement:O,boundary:h,rootBoundary:d,altBoundary:u,padding:c}),$=L?k?qt:Vt:k?Rt:zt;y[S]>w[S]&&($=Ve($));var I=Ve($),N=[];if(o&&N.push(D[x]<=0),a&&N.push(D[$]<=0,D[I]<=0),N.every((function(t){return t}))){T=O,E=!1;break}A.set(O,N)}if(E)for(var P=function(t){var e=v.find((function(e){var i=A.get(e);if(i)return i.slice(0,t).every((function(t){return t}))}));if(e)return T=e,"break"},j=p?3:1;j>0&&"break"!==P(j);j--);e.placement!==T&&(e.modifiersData[n]._skip=!0,e.placement=T,e.reset=!0)}},requiresIfExists:["offset"],data:{_skip:!1}};function oi(t,e,i){return void 0===i&&(i={x:0,y:0}),{top:t.top-e.height-i.y,right:t.right-e.width+i.x,bottom:t.bottom-e.height+i.y,left:t.left-e.width-i.x}}function ri(t){return[zt,qt,Rt,Vt].some((function(e){return t[e]>=0}))}const ai={name:"hide",enabled:!0,phase:"main",requiresIfExists:["preventOverflow"],fn:function(t){var e=t.state,i=t.name,n=e.rects.reference,s=e.rects.popper,o=e.modifiersData.preventOverflow,r=ii(e,{elementContext:"reference"}),a=ii(e,{altBoundary:!0}),l=oi(r,n),c=oi(a,s,o),h=ri(l),d=ri(c);e.modifiersData[i]={referenceClippingOffsets:l,popperEscapeOffsets:c,isReferenceHidden:h,hasPopperEscaped:d},e.attributes.popper=Object.assign({},e.attributes.popper,{"data-popper-reference-hidden":h,"data-popper-escaped":d})}},li={name:"offset",enabled:!0,phase:"main",requires:["popperOffsets"],fn:function(t){var e=t.state,i=t.options,n=t.name,s=i.offset,o=void 0===s?[0,0]:s,r=ee.reduce((function(t,i){return t[i]=function(t,e,i){var n=be(t),s=[Vt,zt].indexOf(n)>=0?-1:1,o="function"==typeof i?i(Object.assign({},e,{placement:t})):i,r=o[0],a=o[1];return r=r||0,a=(a||0)*s,[Vt,qt].indexOf(n)>=0?{x:a,y:r}:{x:r,y:a}}(i,e.rects,o),t}),{}),a=r[e.placement],l=a.x,c=a.y;null!=e.modifiersData.popperOffsets&&(e.modifiersData.popperOffsets.x+=l,e.modifiersData.popperOffsets.y+=c),e.modifiersData[n]=r}},ci={name:"popperOffsets",enabled:!0,phase:"read",fn:function(t){var e=t.state,i=t.name;e.modifiersData[i]=ei({reference:e.rects.reference,element:e.rects.popper,strategy:"absolute",placement:e.placement})},data:{}},hi={name:"preventOverflow",enabled:!0,phase:"main",fn:function(t){var e=t.state,i=t.options,n=t.name,s=i.mainAxis,o=void 0===s||s,r=i.altAxis,a=void 0!==r&&r,l=i.boundary,c=i.rootBoundary,h=i.altBoundary,d=i.padding,u=i.tether,f=void 0===u||u,p=i.tetherOffset,m=void 0===p?0:p,g=ii(e,{boundary:l,rootBoundary:c,padding:d,altBoundary:h}),_=be(e.placement),b=Fe(e.placement),v=!b,y=Ie(_),w="x"===y?"y":"x",A=e.modifiersData.popperOffsets,E=e.rects.reference,T=e.rects.popper,C="function"==typeof m?m(Object.assign({},e.rects,{placement:e.placement})):m,O="number"==typeof C?{mainAxis:C,altAxis:C}:Object.assign({mainAxis:0,altAxis:0},C),x=e.modifiersData.offset?e.modifiersData.offset[e.placement]:null,k={x:0,y:0};if(A){if(o){var L,S="y"===y?zt:Vt,D="y"===y?Rt:qt,$="y"===y?"height":"width",I=A[y],N=I+g[S],P=I-g[D],j=f?-T[$]/2:0,M=b===Xt?E[$]:T[$],F=b===Xt?-T[$]:-E[$],H=e.elements.arrow,W=f&&H?Ce(H):{width:0,height:0},B=e.modifiersData["arrow#persistent"]?e.modifiersData["arrow#persistent"].padding:{top:0,right:0,bottom:0,left:0},z=B[S],R=B[D],q=Ne(0,E[$],W[$]),V=v?E[$]/2-j-q-z-O.mainAxis:M-q-z-O.mainAxis,K=v?-E[$]/2+j+q+R+O.mainAxis:F+q+R+O.mainAxis,Q=e.elements.arrow&&$e(e.elements.arrow),X=Q?"y"===y?Q.clientTop||0:Q.clientLeft||0:0,Y=null!=(L=null==x?void 0:x[y])?L:0,U=I+K-Y,G=Ne(f?ye(N,I+V-Y-X):N,I,f?ve(P,U):P);A[y]=G,k[y]=G-I}if(a){var J,Z="x"===y?zt:Vt,tt="x"===y?Rt:qt,et=A[w],it="y"===w?"height":"width",nt=et+g[Z],st=et-g[tt],ot=-1!==[zt,Vt].indexOf(_),rt=null!=(J=null==x?void 0:x[w])?J:0,at=ot?nt:et-E[it]-T[it]-rt+O.altAxis,lt=ot?et+E[it]+T[it]-rt-O.altAxis:st,ct=f&&ot?function(t,e,i){var n=Ne(t,e,i);return n>i?i:n}(at,et,lt):Ne(f?at:nt,et,f?lt:st);A[w]=ct,k[w]=ct-et}e.modifiersData[n]=k}},requiresIfExists:["offset"]};function di(t,e,i){void 0===i&&(i=!1);var n,s,o=me(e),r=me(e)&&function(t){var e=t.getBoundingClientRect(),i=we(e.width)/t.offsetWidth||1,n=we(e.height)/t.offsetHeight||1;return 1!==i||1!==n}(e),a=Le(e),l=Te(t,r,i),c={scrollLeft:0,scrollTop:0},h={x:0,y:0};return(o||!o&&!i)&&(("body"!==ue(e)||Ue(a))&&(c=(n=e)!==fe(n)&&me(n)?{scrollLeft:(s=n).scrollLeft,scrollTop:s.scrollTop}:Xe(n)),me(e)?((h=Te(e,!0)).x+=e.clientLeft,h.y+=e.clientTop):a&&(h.x=Ye(a))),{x:l.left+c.scrollLeft-h.x,y:l.top+c.scrollTop-h.y,width:l.width,height:l.height}}function ui(t){var e=new Map,i=new Set,n=[];function s(t){i.add(t.name),[].concat(t.requires||[],t.requiresIfExists||[]).forEach((function(t){if(!i.has(t)){var n=e.get(t);n&&s(n)}})),n.push(t)}return t.forEach((function(t){e.set(t.name,t)})),t.forEach((function(t){i.has(t.name)||s(t)})),n}var fi={placement:"bottom",modifiers:[],strategy:"absolute"};function pi(){for(var t=arguments.length,e=new Array(t),i=0;i<t;i++)e[i]=arguments[i];return!e.some((function(t){return!(t&&"function"==typeof t.getBoundingClientRect)}))}function mi(t){void 0===t&&(t={});var e=t,i=e.defaultModifiers,n=void 0===i?[]:i,s=e.defaultOptions,o=void 0===s?fi:s;return function(t,e,i){void 0===i&&(i=o);var s,r,a={placement:"bottom",orderedModifiers:[],options:Object.assign({},fi,o),modifiersData:{},elements:{reference:t,popper:e},attributes:{},styles:{}},l=[],c=!1,h={state:a,setOptions:function(i){var s="function"==typeof i?i(a.options):i;d(),a.options=Object.assign({},o,a.options,s),a.scrollParents={reference:pe(t)?Je(t):t.contextElement?Je(t.contextElement):[],popper:Je(e)};var r,c,u=function(t){var e=ui(t);return de.reduce((function(t,i){return t.concat(e.filter((function(t){return t.phase===i})))}),[])}((r=[].concat(n,a.options.modifiers),c=r.reduce((function(t,e){var i=t[e.name];return t[e.name]=i?Object.assign({},i,e,{options:Object.assign({},i.options,e.options),data:Object.assign({},i.data,e.data)}):e,t}),{}),Object.keys(c).map((function(t){return c[t]}))));return a.orderedModifiers=u.filter((function(t){return t.enabled})),a.orderedModifiers.forEach((function(t){var e=t.name,i=t.options,n=void 0===i?{}:i,s=t.effect;if("function"==typeof s){var o=s({state:a,name:e,instance:h,options:n});l.push(o||function(){})}})),h.update()},forceUpdate:function(){if(!c){var t=a.elements,e=t.reference,i=t.popper;if(pi(e,i)){a.rects={reference:di(e,$e(i),"fixed"===a.options.strategy),popper:Ce(i)},a.reset=!1,a.placement=a.options.placement,a.orderedModifiers.forEach((function(t){return a.modifiersData[t.name]=Object.assign({},t.data)}));for(var n=0;n<a.orderedModifiers.length;n++)if(!0!==a.reset){var s=a.orderedModifiers[n],o=s.fn,r=s.options,l=void 0===r?{}:r,d=s.name;"function"==typeof o&&(a=o({state:a,options:l,name:d,instance:h})||a)}else a.reset=!1,n=-1}}},update:(s=function(){return new Promise((function(t){h.forceUpdate(),t(a)}))},function(){return r||(r=new Promise((function(t){Promise.resolve().then((function(){r=void 0,t(s())}))}))),r}),destroy:function(){d(),c=!0}};if(!pi(t,e))return h;function d(){l.forEach((function(t){return t()})),l=[]}return h.setOptions(i).then((function(t){!c&&i.onFirstUpdate&&i.onFirstUpdate(t)})),h}}var gi=mi(),_i=mi({defaultModifiers:[Re,ci,Be,_e]}),bi=mi({defaultModifiers:[Re,ci,Be,_e,li,si,hi,Me,ai]});const vi=Object.freeze(Object.defineProperty({__proto__:null,afterMain:ae,afterRead:se,afterWrite:he,applyStyles:_e,arrow:Me,auto:Kt,basePlacements:Qt,beforeMain:oe,beforeRead:ie,beforeWrite:le,bottom:Rt,clippingParents:Ut,computeStyles:Be,createPopper:bi,createPopperBase:gi,createPopperLite:_i,detectOverflow:ii,end:Yt,eventListeners:Re,flip:si,hide:ai,left:Vt,main:re,modifierPhases:de,offset:li,placements:ee,popper:Jt,popperGenerator:mi,popperOffsets:ci,preventOverflow:hi,read:ne,reference:Zt,right:qt,start:Xt,top:zt,variationPlacements:te,viewport:Gt,write:ce},Symbol.toStringTag,{value:"Module"})),yi="dropdown",wi=".bs.dropdown",Ai=".data-api",Ei="ArrowUp",Ti="ArrowDown",Ci=`hide${wi}`,Oi=`hidden${wi}`,xi=`show${wi}`,ki=`shown${wi}`,Li=`click${wi}${Ai}`,Si=`keydown${wi}${Ai}`,Di=`keyup${wi}${Ai}`,$i="show",Ii='[data-bs-toggle="dropdown"]:not(.disabled):not(:disabled)',Ni=`${Ii}.${$i}`,Pi=".dropdown-menu",ji=p()?"top-end":"top-start",Mi=p()?"top-start":"top-end",Fi=p()?"bottom-end":"bottom-start",Hi=p()?"bottom-start":"bottom-end",Wi=p()?"left-start":"right-start",Bi=p()?"right-start":"left-start",zi={autoClose:!0,boundary:"clippingParents",display:"dynamic",offset:[0,2],popperConfig:null,reference:"toggle"},Ri={autoClose:"(boolean|string)",boundary:"(string|element)",display:"string",offset:"(array|string|function)",popperConfig:"(null|object|function)",reference:"(string|element|object)"};class qi extends W{constructor(t,e){super(t,e),this._popper=null,this._parent=this._element.parentNode,this._menu=z.next(this._element,Pi)[0]||z.prev(this._element,Pi)[0]||z.findOne(Pi,this._parent),this._inNavbar=this._detectNavbar()}static get Default(){return zi}static get DefaultType(){return Ri}static get NAME(){return yi}toggle(){return this._isShown()?this.hide():this.show()}show(){if(l(this._element)||this._isShown())return;const t={relatedTarget:this._element};if(!N.trigger(this._element,xi,t).defaultPrevented){if(this._createPopper(),"ontouchstart"in document.documentElement&&!this._parent.closest(".navbar-nav"))for(const t of[].concat(...document.body.children))N.on(t,"mouseover",h);this._element.focus(),this._element.setAttribute("aria-expanded",!0),this._menu.classList.add($i),this._element.classList.add($i),N.trigger(this._element,ki,t)}}hide(){if(l(this._element)||!this._isShown())return;const t={relatedTarget:this._element};this._completeHide(t)}dispose(){this._popper&&this._popper.destroy(),super.dispose()}update(){this._inNavbar=this._detectNavbar(),this._popper&&this._popper.update()}_completeHide(t){if(!N.trigger(this._element,Ci,t).defaultPrevented){if("ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))N.off(t,"mouseover",h);this._popper&&this._popper.destroy(),this._menu.classList.remove($i),this._element.classList.remove($i),this._element.setAttribute("aria-expanded","false"),F.removeDataAttribute(this._menu,"popper"),N.trigger(this._element,Oi,t)}}_getConfig(t){if("object"==typeof(t=super._getConfig(t)).reference&&!o(t.reference)&&"function"!=typeof t.reference.getBoundingClientRect)throw new TypeError(`${yi.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);return t}_createPopper(){if(void 0===vi)throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");let t=this._element;"parent"===this._config.reference?t=this._parent:o(this._config.reference)?t=r(this._config.reference):"object"==typeof this._config.reference&&(t=this._config.reference);const e=this._getPopperConfig();this._popper=bi(t,this._menu,e)}_isShown(){return this._menu.classList.contains($i)}_getPlacement(){const t=this._parent;if(t.classList.contains("dropend"))return Wi;if(t.classList.contains("dropstart"))return Bi;if(t.classList.contains("dropup-center"))return"top";if(t.classList.contains("dropdown-center"))return"bottom";const e="end"===getComputedStyle(this._menu).getPropertyValue("--bs-position").trim();return t.classList.contains("dropup")?e?Mi:ji:e?Hi:Fi}_detectNavbar(){return null!==this._element.closest(".navbar")}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_getPopperConfig(){const t={placement:this._getPlacement(),modifiers:[{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"offset",options:{offset:this._getOffset()}}]};return(this._inNavbar||"static"===this._config.display)&&(F.setDataAttribute(this._menu,"popper","static"),t.modifiers=[{name:"applyStyles",enabled:!1}]),{...t,...g(this._config.popperConfig,[t])}}_selectMenuItem({key:t,target:e}){const i=z.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)",this._menu).filter((t=>a(t)));i.length&&b(i,e,t===Ti,!i.includes(e)).focus()}static jQueryInterface(t){return this.each((function(){const e=qi.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}static clearMenus(t){if(2===t.button||"keyup"===t.type&&"Tab"!==t.key)return;const e=z.find(Ni);for(const i of e){const e=qi.getInstance(i);if(!e||!1===e._config.autoClose)continue;const n=t.composedPath(),s=n.includes(e._menu);if(n.includes(e._element)||"inside"===e._config.autoClose&&!s||"outside"===e._config.autoClose&&s)continue;if(e._menu.contains(t.target)&&("keyup"===t.type&&"Tab"===t.key||/input|select|option|textarea|form/i.test(t.target.tagName)))continue;const o={relatedTarget:e._element};"click"===t.type&&(o.clickEvent=t),e._completeHide(o)}}static dataApiKeydownHandler(t){const e=/input|textarea/i.test(t.target.tagName),i="Escape"===t.key,n=[Ei,Ti].includes(t.key);if(!n&&!i)return;if(e&&!i)return;t.preventDefault();const s=this.matches(Ii)?this:z.prev(this,Ii)[0]||z.next(this,Ii)[0]||z.findOne(Ii,t.delegateTarget.parentNode),o=qi.getOrCreateInstance(s);if(n)return t.stopPropagation(),o.show(),void o._selectMenuItem(t);o._isShown()&&(t.stopPropagation(),o.hide(),s.focus())}}N.on(document,Si,Ii,qi.dataApiKeydownHandler),N.on(document,Si,Pi,qi.dataApiKeydownHandler),N.on(document,Li,qi.clearMenus),N.on(document,Di,qi.clearMenus),N.on(document,Li,Ii,(function(t){t.preventDefault(),qi.getOrCreateInstance(this).toggle()})),m(qi);const Vi="backdrop",Ki="show",Qi=`mousedown.bs.${Vi}`,Xi={className:"modal-backdrop",clickCallback:null,isAnimated:!1,isVisible:!0,rootElement:"body"},Yi={className:"string",clickCallback:"(function|null)",isAnimated:"boolean",isVisible:"boolean",rootElement:"(element|string)"};class Ui extends H{constructor(t){super(),this._config=this._getConfig(t),this._isAppended=!1,this._element=null}static get Default(){return Xi}static get DefaultType(){return Yi}static get NAME(){return Vi}show(t){if(!this._config.isVisible)return void g(t);this._append();const e=this._getElement();this._config.isAnimated&&d(e),e.classList.add(Ki),this._emulateAnimation((()=>{g(t)}))}hide(t){this._config.isVisible?(this._getElement().classList.remove(Ki),this._emulateAnimation((()=>{this.dispose(),g(t)}))):g(t)}dispose(){this._isAppended&&(N.off(this._element,Qi),this._element.remove(),this._isAppended=!1)}_getElement(){if(!this._element){const t=document.createElement("div");t.className=this._config.className,this._config.isAnimated&&t.classList.add("fade"),this._element=t}return this._element}_configAfterMerge(t){return t.rootElement=r(t.rootElement),t}_append(){if(this._isAppended)return;const t=this._getElement();this._config.rootElement.append(t),N.on(t,Qi,(()=>{g(this._config.clickCallback)})),this._isAppended=!0}_emulateAnimation(t){_(t,this._getElement(),this._config.isAnimated)}}const Gi=".bs.focustrap",Ji=`focusin${Gi}`,Zi=`keydown.tab${Gi}`,tn="backward",en={autofocus:!0,trapElement:null},nn={autofocus:"boolean",trapElement:"element"};class sn extends H{constructor(t){super(),this._config=this._getConfig(t),this._isActive=!1,this._lastTabNavDirection=null}static get Default(){return en}static get DefaultType(){return nn}static get NAME(){return"focustrap"}activate(){this._isActive||(this._config.autofocus&&this._config.trapElement.focus(),N.off(document,Gi),N.on(document,Ji,(t=>this._handleFocusin(t))),N.on(document,Zi,(t=>this._handleKeydown(t))),this._isActive=!0)}deactivate(){this._isActive&&(this._isActive=!1,N.off(document,Gi))}_handleFocusin(t){const{trapElement:e}=this._config;if(t.target===document||t.target===e||e.contains(t.target))return;const i=z.focusableChildren(e);0===i.length?e.focus():this._lastTabNavDirection===tn?i[i.length-1].focus():i[0].focus()}_handleKeydown(t){"Tab"===t.key&&(this._lastTabNavDirection=t.shiftKey?tn:"forward")}}const on=".fixed-top, .fixed-bottom, .is-fixed, .sticky-top",rn=".sticky-top",an="padding-right",ln="margin-right";class cn{constructor(){this._element=document.body}getWidth(){const t=document.documentElement.clientWidth;return Math.abs(window.innerWidth-t)}hide(){const t=this.getWidth();this._disableOverFlow(),this._setElementAttributes(this._element,an,(e=>e+t)),this._setElementAttributes(on,an,(e=>e+t)),this._setElementAttributes(rn,ln,(e=>e-t))}reset(){this._resetElementAttributes(this._element,"overflow"),this._resetElementAttributes(this._element,an),this._resetElementAttributes(on,an),this._resetElementAttributes(rn,ln)}isOverflowing(){return this.getWidth()>0}_disableOverFlow(){this._saveInitialAttribute(this._element,"overflow"),this._element.style.overflow="hidden"}_setElementAttributes(t,e,i){const n=this.getWidth();this._applyManipulationCallback(t,(t=>{if(t!==this._element&&window.innerWidth>t.clientWidth+n)return;this._saveInitialAttribute(t,e);const s=window.getComputedStyle(t).getPropertyValue(e);t.style.setProperty(e,`${i(Number.parseFloat(s))}px`)}))}_saveInitialAttribute(t,e){const i=t.style.getPropertyValue(e);i&&F.setDataAttribute(t,e,i)}_resetElementAttributes(t,e){this._applyManipulationCallback(t,(t=>{const i=F.getDataAttribute(t,e);null!==i?(F.removeDataAttribute(t,e),t.style.setProperty(e,i)):t.style.removeProperty(e)}))}_applyManipulationCallback(t,e){if(o(t))e(t);else for(const i of z.find(t,this._element))e(i)}}const hn=".bs.modal",dn=`hide${hn}`,un=`hidePrevented${hn}`,fn=`hidden${hn}`,pn=`show${hn}`,mn=`shown${hn}`,gn=`resize${hn}`,_n=`click.dismiss${hn}`,bn=`mousedown.dismiss${hn}`,vn=`keydown.dismiss${hn}`,yn=`click${hn}.data-api`,wn="modal-open",An="show",En="modal-static",Tn={backdrop:!0,focus:!0,keyboard:!0},Cn={backdrop:"(boolean|string)",focus:"boolean",keyboard:"boolean"};class On extends W{constructor(t,e){super(t,e),this._dialog=z.findOne(".modal-dialog",this._element),this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._isShown=!1,this._isTransitioning=!1,this._scrollBar=new cn,this._addEventListeners()}static get Default(){return Tn}static get DefaultType(){return Cn}static get NAME(){return"modal"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||this._isTransitioning||N.trigger(this._element,pn,{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._isTransitioning=!0,this._scrollBar.hide(),document.body.classList.add(wn),this._adjustDialog(),this._backdrop.show((()=>this._showElement(t))))}hide(){this._isShown&&!this._isTransitioning&&(N.trigger(this._element,dn).defaultPrevented||(this._isShown=!1,this._isTransitioning=!0,this._focustrap.deactivate(),this._element.classList.remove(An),this._queueCallback((()=>this._hideModal()),this._element,this._isAnimated())))}dispose(){N.off(window,hn),N.off(this._dialog,hn),this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}handleUpdate(){this._adjustDialog()}_initializeBackDrop(){return new Ui({isVisible:Boolean(this._config.backdrop),isAnimated:this._isAnimated()})}_initializeFocusTrap(){return new sn({trapElement:this._element})}_showElement(t){document.body.contains(this._element)||document.body.append(this._element),this._element.style.display="block",this._element.removeAttribute("aria-hidden"),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.scrollTop=0;const e=z.findOne(".modal-body",this._dialog);e&&(e.scrollTop=0),d(this._element),this._element.classList.add(An),this._queueCallback((()=>{this._config.focus&&this._focustrap.activate(),this._isTransitioning=!1,N.trigger(this._element,mn,{relatedTarget:t})}),this._dialog,this._isAnimated())}_addEventListeners(){N.on(this._element,vn,(t=>{"Escape"===t.key&&(this._config.keyboard?this.hide():this._triggerBackdropTransition())})),N.on(window,gn,(()=>{this._isShown&&!this._isTransitioning&&this._adjustDialog()})),N.on(this._element,bn,(t=>{N.one(this._element,_n,(e=>{this._element===t.target&&this._element===e.target&&("static"!==this._config.backdrop?this._config.backdrop&&this.hide():this._triggerBackdropTransition())}))}))}_hideModal(){this._element.style.display="none",this._element.setAttribute("aria-hidden",!0),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._isTransitioning=!1,this._backdrop.hide((()=>{document.body.classList.remove(wn),this._resetAdjustments(),this._scrollBar.reset(),N.trigger(this._element,fn)}))}_isAnimated(){return this._element.classList.contains("fade")}_triggerBackdropTransition(){if(N.trigger(this._element,un).defaultPrevented)return;const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._element.style.overflowY;"hidden"===e||this._element.classList.contains(En)||(t||(this._element.style.overflowY="hidden"),this._element.classList.add(En),this._queueCallback((()=>{this._element.classList.remove(En),this._queueCallback((()=>{this._element.style.overflowY=e}),this._dialog)}),this._dialog),this._element.focus())}_adjustDialog(){const t=this._element.scrollHeight>document.documentElement.clientHeight,e=this._scrollBar.getWidth(),i=e>0;if(i&&!t){const t=p()?"paddingLeft":"paddingRight";this._element.style[t]=`${e}px`}if(!i&&t){const t=p()?"paddingRight":"paddingLeft";this._element.style[t]=`${e}px`}}_resetAdjustments(){this._element.style.paddingLeft="",this._element.style.paddingRight=""}static jQueryInterface(t,e){return this.each((function(){const i=On.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===i[t])throw new TypeError(`No method named "${t}"`);i[t](e)}}))}}N.on(document,yn,'[data-bs-toggle="modal"]',(function(t){const e=z.getElementFromSelector(this);["A","AREA"].includes(this.tagName)&&t.preventDefault(),N.one(e,pn,(t=>{t.defaultPrevented||N.one(e,fn,(()=>{a(this)&&this.focus()}))}));const i=z.findOne(".modal.show");i&&On.getInstance(i).hide(),On.getOrCreateInstance(e).toggle(this)})),R(On),m(On);const xn=".bs.offcanvas",kn=".data-api",Ln=`load${xn}${kn}`,Sn="show",Dn="showing",$n="hiding",In=".offcanvas.show",Nn=`show${xn}`,Pn=`shown${xn}`,jn=`hide${xn}`,Mn=`hidePrevented${xn}`,Fn=`hidden${xn}`,Hn=`resize${xn}`,Wn=`click${xn}${kn}`,Bn=`keydown.dismiss${xn}`,zn={backdrop:!0,keyboard:!0,scroll:!1},Rn={backdrop:"(boolean|string)",keyboard:"boolean",scroll:"boolean"};class qn extends W{constructor(t,e){super(t,e),this._isShown=!1,this._backdrop=this._initializeBackDrop(),this._focustrap=this._initializeFocusTrap(),this._addEventListeners()}static get Default(){return zn}static get DefaultType(){return Rn}static get NAME(){return"offcanvas"}toggle(t){return this._isShown?this.hide():this.show(t)}show(t){this._isShown||N.trigger(this._element,Nn,{relatedTarget:t}).defaultPrevented||(this._isShown=!0,this._backdrop.show(),this._config.scroll||(new cn).hide(),this._element.setAttribute("aria-modal",!0),this._element.setAttribute("role","dialog"),this._element.classList.add(Dn),this._queueCallback((()=>{this._config.scroll&&!this._config.backdrop||this._focustrap.activate(),this._element.classList.add(Sn),this._element.classList.remove(Dn),N.trigger(this._element,Pn,{relatedTarget:t})}),this._element,!0))}hide(){this._isShown&&(N.trigger(this._element,jn).defaultPrevented||(this._focustrap.deactivate(),this._element.blur(),this._isShown=!1,this._element.classList.add($n),this._backdrop.hide(),this._queueCallback((()=>{this._element.classList.remove(Sn,$n),this._element.removeAttribute("aria-modal"),this._element.removeAttribute("role"),this._config.scroll||(new cn).reset(),N.trigger(this._element,Fn)}),this._element,!0)))}dispose(){this._backdrop.dispose(),this._focustrap.deactivate(),super.dispose()}_initializeBackDrop(){const t=Boolean(this._config.backdrop);return new Ui({className:"offcanvas-backdrop",isVisible:t,isAnimated:!0,rootElement:this._element.parentNode,clickCallback:t?()=>{"static"!==this._config.backdrop?this.hide():N.trigger(this._element,Mn)}:null})}_initializeFocusTrap(){return new sn({trapElement:this._element})}_addEventListeners(){N.on(this._element,Bn,(t=>{"Escape"===t.key&&(this._config.keyboard?this.hide():N.trigger(this._element,Mn))}))}static jQueryInterface(t){return this.each((function(){const e=qn.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}N.on(document,Wn,'[data-bs-toggle="offcanvas"]',(function(t){const e=z.getElementFromSelector(this);if(["A","AREA"].includes(this.tagName)&&t.preventDefault(),l(this))return;N.one(e,Fn,(()=>{a(this)&&this.focus()}));const i=z.findOne(In);i&&i!==e&&qn.getInstance(i).hide(),qn.getOrCreateInstance(e).toggle(this)})),N.on(window,Ln,(()=>{for(const t of z.find(In))qn.getOrCreateInstance(t).show()})),N.on(window,Hn,(()=>{for(const t of z.find("[aria-modal][class*=show][class*=offcanvas-]"))"fixed"!==getComputedStyle(t).position&&qn.getOrCreateInstance(t).hide()})),R(qn),m(qn);const Vn={"*":["class","dir","id","lang","role",/^aria-[\w-]*$/i],a:["target","href","title","rel"],area:[],b:[],br:[],col:[],code:[],dd:[],div:[],dl:[],dt:[],em:[],hr:[],h1:[],h2:[],h3:[],h4:[],h5:[],h6:[],i:[],img:["src","srcset","alt","title","width","height"],li:[],ol:[],p:[],pre:[],s:[],small:[],span:[],sub:[],sup:[],strong:[],u:[],ul:[]},Kn=new Set(["background","cite","href","itemtype","longdesc","poster","src","xlink:href"]),Qn=/^(?!javascript:)(?:[a-z0-9+.-]+:|[^&:/?#]*(?:[/?#]|$))/i,Xn=(t,e)=>{const i=t.nodeName.toLowerCase();return e.includes(i)?!Kn.has(i)||Boolean(Qn.test(t.nodeValue)):e.filter((t=>t instanceof RegExp)).some((t=>t.test(i)))},Yn={allowList:Vn,content:{},extraClass:"",html:!1,sanitize:!0,sanitizeFn:null,template:"<div></div>"},Un={allowList:"object",content:"object",extraClass:"(string|function)",html:"boolean",sanitize:"boolean",sanitizeFn:"(null|function)",template:"string"},Gn={entry:"(string|element|function|null)",selector:"(string|element)"};class Jn extends H{constructor(t){super(),this._config=this._getConfig(t)}static get Default(){return Yn}static get DefaultType(){return Un}static get NAME(){return"TemplateFactory"}getContent(){return Object.values(this._config.content).map((t=>this._resolvePossibleFunction(t))).filter(Boolean)}hasContent(){return this.getContent().length>0}changeContent(t){return this._checkContent(t),this._config.content={...this._config.content,...t},this}toHtml(){const t=document.createElement("div");t.innerHTML=this._maybeSanitize(this._config.template);for(const[e,i]of Object.entries(this._config.content))this._setContent(t,i,e);const e=t.children[0],i=this._resolvePossibleFunction(this._config.extraClass);return i&&e.classList.add(...i.split(" ")),e}_typeCheckConfig(t){super._typeCheckConfig(t),this._checkContent(t.content)}_checkContent(t){for(const[e,i]of Object.entries(t))super._typeCheckConfig({selector:e,entry:i},Gn)}_setContent(t,e,i){const n=z.findOne(i,t);n&&((e=this._resolvePossibleFunction(e))?o(e)?this._putElementInTemplate(r(e),n):this._config.html?n.innerHTML=this._maybeSanitize(e):n.textContent=e:n.remove())}_maybeSanitize(t){return this._config.sanitize?function(t,e,i){if(!t.length)return t;if(i&&"function"==typeof i)return i(t);const n=(new window.DOMParser).parseFromString(t,"text/html"),s=[].concat(...n.body.querySelectorAll("*"));for(const t of s){const i=t.nodeName.toLowerCase();if(!Object.keys(e).includes(i)){t.remove();continue}const n=[].concat(...t.attributes),s=[].concat(e["*"]||[],e[i]||[]);for(const e of n)Xn(e,s)||t.removeAttribute(e.nodeName)}return n.body.innerHTML}(t,this._config.allowList,this._config.sanitizeFn):t}_resolvePossibleFunction(t){return g(t,[this])}_putElementInTemplate(t,e){if(this._config.html)return e.innerHTML="",void e.append(t);e.textContent=t.textContent}}const Zn=new Set(["sanitize","allowList","sanitizeFn"]),ts="fade",es="show",is=".modal",ns="hide.bs.modal",ss="hover",os="focus",rs={AUTO:"auto",TOP:"top",RIGHT:p()?"left":"right",BOTTOM:"bottom",LEFT:p()?"right":"left"},as={allowList:Vn,animation:!0,boundary:"clippingParents",container:!1,customClass:"",delay:0,fallbackPlacements:["top","right","bottom","left"],html:!1,offset:[0,6],placement:"top",popperConfig:null,sanitize:!0,sanitizeFn:null,selector:!1,template:'<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>',title:"",trigger:"hover focus"},ls={allowList:"object",animation:"boolean",boundary:"(string|element)",container:"(string|element|boolean)",customClass:"(string|function)",delay:"(number|object)",fallbackPlacements:"array",html:"boolean",offset:"(array|string|function)",placement:"(string|function)",popperConfig:"(null|object|function)",sanitize:"boolean",sanitizeFn:"(null|function)",selector:"(string|boolean)",template:"string",title:"(string|element|function)",trigger:"string"};class cs extends W{constructor(t,e){if(void 0===vi)throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");super(t,e),this._isEnabled=!0,this._timeout=0,this._isHovered=null,this._activeTrigger={},this._popper=null,this._templateFactory=null,this._newContent=null,this.tip=null,this._setListeners(),this._config.selector||this._fixTitle()}static get Default(){return as}static get DefaultType(){return ls}static get NAME(){return"tooltip"}enable(){this._isEnabled=!0}disable(){this._isEnabled=!1}toggleEnabled(){this._isEnabled=!this._isEnabled}toggle(){this._isEnabled&&(this._activeTrigger.click=!this._activeTrigger.click,this._isShown()?this._leave():this._enter())}dispose(){clearTimeout(this._timeout),N.off(this._element.closest(is),ns,this._hideModalHandler),this._element.getAttribute("data-bs-original-title")&&this._element.setAttribute("title",this._element.getAttribute("data-bs-original-title")),this._disposePopper(),super.dispose()}show(){if("none"===this._element.style.display)throw new Error("Please use show on visible elements");if(!this._isWithContent()||!this._isEnabled)return;const t=N.trigger(this._element,this.constructor.eventName("show")),e=(c(this._element)||this._element.ownerDocument.documentElement).contains(this._element);if(t.defaultPrevented||!e)return;this._disposePopper();const i=this._getTipElement();this._element.setAttribute("aria-describedby",i.getAttribute("id"));const{container:n}=this._config;if(this._element.ownerDocument.documentElement.contains(this.tip)||(n.append(i),N.trigger(this._element,this.constructor.eventName("inserted"))),this._popper=this._createPopper(i),i.classList.add(es),"ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))N.on(t,"mouseover",h);this._queueCallback((()=>{N.trigger(this._element,this.constructor.eventName("shown")),!1===this._isHovered&&this._leave(),this._isHovered=!1}),this.tip,this._isAnimated())}hide(){if(this._isShown()&&!N.trigger(this._element,this.constructor.eventName("hide")).defaultPrevented){if(this._getTipElement().classList.remove(es),"ontouchstart"in document.documentElement)for(const t of[].concat(...document.body.children))N.off(t,"mouseover",h);this._activeTrigger.click=!1,this._activeTrigger[os]=!1,this._activeTrigger[ss]=!1,this._isHovered=null,this._queueCallback((()=>{this._isWithActiveTrigger()||(this._isHovered||this._disposePopper(),this._element.removeAttribute("aria-describedby"),N.trigger(this._element,this.constructor.eventName("hidden")))}),this.tip,this._isAnimated())}}update(){this._popper&&this._popper.update()}_isWithContent(){return Boolean(this._getTitle())}_getTipElement(){return this.tip||(this.tip=this._createTipElement(this._newContent||this._getContentForTemplate())),this.tip}_createTipElement(t){const e=this._getTemplateFactory(t).toHtml();if(!e)return null;e.classList.remove(ts,es),e.classList.add(`bs-${this.constructor.NAME}-auto`);const i=(t=>{do{t+=Math.floor(1e6*Math.random())}while(document.getElementById(t));return t})(this.constructor.NAME).toString();return e.setAttribute("id",i),this._isAnimated()&&e.classList.add(ts),e}setContent(t){this._newContent=t,this._isShown()&&(this._disposePopper(),this.show())}_getTemplateFactory(t){return this._templateFactory?this._templateFactory.changeContent(t):this._templateFactory=new Jn({...this._config,content:t,extraClass:this._resolvePossibleFunction(this._config.customClass)}),this._templateFactory}_getContentForTemplate(){return{".tooltip-inner":this._getTitle()}}_getTitle(){return this._resolvePossibleFunction(this._config.title)||this._element.getAttribute("data-bs-original-title")}_initializeOnDelegatedTarget(t){return this.constructor.getOrCreateInstance(t.delegateTarget,this._getDelegateConfig())}_isAnimated(){return this._config.animation||this.tip&&this.tip.classList.contains(ts)}_isShown(){return this.tip&&this.tip.classList.contains(es)}_createPopper(t){const e=g(this._config.placement,[this,t,this._element]),i=rs[e.toUpperCase()];return bi(this._element,t,this._getPopperConfig(i))}_getOffset(){const{offset:t}=this._config;return"string"==typeof t?t.split(",").map((t=>Number.parseInt(t,10))):"function"==typeof t?e=>t(e,this._element):t}_resolvePossibleFunction(t){return g(t,[this._element])}_getPopperConfig(t){const e={placement:t,modifiers:[{name:"flip",options:{fallbackPlacements:this._config.fallbackPlacements}},{name:"offset",options:{offset:this._getOffset()}},{name:"preventOverflow",options:{boundary:this._config.boundary}},{name:"arrow",options:{element:`.${this.constructor.NAME}-arrow`}},{name:"preSetPlacement",enabled:!0,phase:"beforeMain",fn:t=>{this._getTipElement().setAttribute("data-popper-placement",t.state.placement)}}]};return{...e,...g(this._config.popperConfig,[e])}}_setListeners(){const t=this._config.trigger.split(" ");for(const e of t)if("click"===e)N.on(this._element,this.constructor.eventName("click"),this._config.selector,(t=>{this._initializeOnDelegatedTarget(t).toggle()}));else if("manual"!==e){const t=e===ss?this.constructor.eventName("mouseenter"):this.constructor.eventName("focusin"),i=e===ss?this.constructor.eventName("mouseleave"):this.constructor.eventName("focusout");N.on(this._element,t,this._config.selector,(t=>{const e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusin"===t.type?os:ss]=!0,e._enter()})),N.on(this._element,i,this._config.selector,(t=>{const e=this._initializeOnDelegatedTarget(t);e._activeTrigger["focusout"===t.type?os:ss]=e._element.contains(t.relatedTarget),e._leave()}))}this._hideModalHandler=()=>{this._element&&this.hide()},N.on(this._element.closest(is),ns,this._hideModalHandler)}_fixTitle(){const t=this._element.getAttribute("title");t&&(this._element.getAttribute("aria-label")||this._element.textContent.trim()||this._element.setAttribute("aria-label",t),this._element.setAttribute("data-bs-original-title",t),this._element.removeAttribute("title"))}_enter(){this._isShown()||this._isHovered?this._isHovered=!0:(this._isHovered=!0,this._setTimeout((()=>{this._isHovered&&this.show()}),this._config.delay.show))}_leave(){this._isWithActiveTrigger()||(this._isHovered=!1,this._setTimeout((()=>{this._isHovered||this.hide()}),this._config.delay.hide))}_setTimeout(t,e){clearTimeout(this._timeout),this._timeout=setTimeout(t,e)}_isWithActiveTrigger(){return Object.values(this._activeTrigger).includes(!0)}_getConfig(t){const e=F.getDataAttributes(this._element);for(const t of Object.keys(e))Zn.has(t)&&delete e[t];return t={...e,..."object"==typeof t&&t?t:{}},t=this._mergeConfigObj(t),t=this._configAfterMerge(t),this._typeCheckConfig(t),t}_configAfterMerge(t){return t.container=!1===t.container?document.body:r(t.container),"number"==typeof t.delay&&(t.delay={show:t.delay,hide:t.delay}),"number"==typeof t.title&&(t.title=t.title.toString()),"number"==typeof t.content&&(t.content=t.content.toString()),t}_getDelegateConfig(){const t={};for(const[e,i]of Object.entries(this._config))this.constructor.Default[e]!==i&&(t[e]=i);return t.selector=!1,t.trigger="manual",t}_disposePopper(){this._popper&&(this._popper.destroy(),this._popper=null),this.tip&&(this.tip.remove(),this.tip=null)}static jQueryInterface(t){return this.each((function(){const e=cs.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}m(cs);const hs={...cs.Default,content:"",offset:[0,8],placement:"right",template:'<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>',trigger:"click"},ds={...cs.DefaultType,content:"(null|string|element|function)"};class us extends cs{static get Default(){return hs}static get DefaultType(){return ds}static get NAME(){return"popover"}_isWithContent(){return this._getTitle()||this._getContent()}_getContentForTemplate(){return{".popover-header":this._getTitle(),".popover-body":this._getContent()}}_getContent(){return this._resolvePossibleFunction(this._config.content)}static jQueryInterface(t){return this.each((function(){const e=us.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t]()}}))}}m(us);const fs=".bs.scrollspy",ps=`activate${fs}`,ms=`click${fs}`,gs=`load${fs}.data-api`,_s="active",bs="[href]",vs=".nav-link",ys=`${vs}, .nav-item > ${vs}, .list-group-item`,ws={offset:null,rootMargin:"0px 0px -25%",smoothScroll:!1,target:null,threshold:[.1,.5,1]},As={offset:"(number|null)",rootMargin:"string",smoothScroll:"boolean",target:"element",threshold:"array"};class Es extends W{constructor(t,e){super(t,e),this._targetLinks=new Map,this._observableSections=new Map,this._rootElement="visible"===getComputedStyle(this._element).overflowY?null:this._element,this._activeTarget=null,this._observer=null,this._previousScrollData={visibleEntryTop:0,parentScrollTop:0},this.refresh()}static get Default(){return ws}static get DefaultType(){return As}static get NAME(){return"scrollspy"}refresh(){this._initializeTargetsAndObservables(),this._maybeEnableSmoothScroll(),this._observer?this._observer.disconnect():this._observer=this._getNewObserver();for(const t of this._observableSections.values())this._observer.observe(t)}dispose(){this._observer.disconnect(),super.dispose()}_configAfterMerge(t){return t.target=r(t.target)||document.body,t.rootMargin=t.offset?`${t.offset}px 0px -30%`:t.rootMargin,"string"==typeof t.threshold&&(t.threshold=t.threshold.split(",").map((t=>Number.parseFloat(t)))),t}_maybeEnableSmoothScroll(){this._config.smoothScroll&&(N.off(this._config.target,ms),N.on(this._config.target,ms,bs,(t=>{const e=this._observableSections.get(t.target.hash);if(e){t.preventDefault();const i=this._rootElement||window,n=e.offsetTop-this._element.offsetTop;if(i.scrollTo)return void i.scrollTo({top:n,behavior:"smooth"});i.scrollTop=n}})))}_getNewObserver(){const t={root:this._rootElement,threshold:this._config.threshold,rootMargin:this._config.rootMargin};return new IntersectionObserver((t=>this._observerCallback(t)),t)}_observerCallback(t){const e=t=>this._targetLinks.get(`#${t.target.id}`),i=t=>{this._previousScrollData.visibleEntryTop=t.target.offsetTop,this._process(e(t))},n=(this._rootElement||document.documentElement).scrollTop,s=n>=this._previousScrollData.parentScrollTop;this._previousScrollData.parentScrollTop=n;for(const o of t){if(!o.isIntersecting){this._activeTarget=null,this._clearActiveClass(e(o));continue}const t=o.target.offsetTop>=this._previousScrollData.visibleEntryTop;if(s&&t){if(i(o),!n)return}else s||t||i(o)}}_initializeTargetsAndObservables(){this._targetLinks=new Map,this._observableSections=new Map;const t=z.find(bs,this._config.target);for(const e of t){if(!e.hash||l(e))continue;const t=z.findOne(decodeURI(e.hash),this._element);a(t)&&(this._targetLinks.set(decodeURI(e.hash),e),this._observableSections.set(e.hash,t))}}_process(t){this._activeTarget!==t&&(this._clearActiveClass(this._config.target),this._activeTarget=t,t.classList.add(_s),this._activateParents(t),N.trigger(this._element,ps,{relatedTarget:t}))}_activateParents(t){if(t.classList.contains("dropdown-item"))z.findOne(".dropdown-toggle",t.closest(".dropdown")).classList.add(_s);else for(const e of z.parents(t,".nav, .list-group"))for(const t of z.prev(e,ys))t.classList.add(_s)}_clearActiveClass(t){t.classList.remove(_s);const e=z.find(`${bs}.${_s}`,t);for(const t of e)t.classList.remove(_s)}static jQueryInterface(t){return this.each((function(){const e=Es.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}))}}N.on(window,gs,(()=>{for(const t of z.find('[data-bs-spy="scroll"]'))Es.getOrCreateInstance(t)})),m(Es);const Ts=".bs.tab",Cs=`hide${Ts}`,Os=`hidden${Ts}`,xs=`show${Ts}`,ks=`shown${Ts}`,Ls=`click${Ts}`,Ss=`keydown${Ts}`,Ds=`load${Ts}`,$s="ArrowLeft",Is="ArrowRight",Ns="ArrowUp",Ps="ArrowDown",js="Home",Ms="End",Fs="active",Hs="fade",Ws="show",Bs=".dropdown-toggle",zs=`:not(${Bs})`,Rs='[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]',qs=`.nav-link${zs}, .list-group-item${zs}, [role="tab"]${zs}, ${Rs}`,Vs=`.${Fs}[data-bs-toggle="tab"], .${Fs}[data-bs-toggle="pill"], .${Fs}[data-bs-toggle="list"]`;class Ks extends W{constructor(t){super(t),this._parent=this._element.closest('.list-group, .nav, [role="tablist"]'),this._parent&&(this._setInitialAttributes(this._parent,this._getChildren()),N.on(this._element,Ss,(t=>this._keydown(t))))}static get NAME(){return"tab"}show(){const t=this._element;if(this._elemIsActive(t))return;const e=this._getActiveElem(),i=e?N.trigger(e,Cs,{relatedTarget:t}):null;N.trigger(t,xs,{relatedTarget:e}).defaultPrevented||i&&i.defaultPrevented||(this._deactivate(e,t),this._activate(t,e))}_activate(t,e){t&&(t.classList.add(Fs),this._activate(z.getElementFromSelector(t)),this._queueCallback((()=>{"tab"===t.getAttribute("role")?(t.removeAttribute("tabindex"),t.setAttribute("aria-selected",!0),this._toggleDropDown(t,!0),N.trigger(t,ks,{relatedTarget:e})):t.classList.add(Ws)}),t,t.classList.contains(Hs)))}_deactivate(t,e){t&&(t.classList.remove(Fs),t.blur(),this._deactivate(z.getElementFromSelector(t)),this._queueCallback((()=>{"tab"===t.getAttribute("role")?(t.setAttribute("aria-selected",!1),t.setAttribute("tabindex","-1"),this._toggleDropDown(t,!1),N.trigger(t,Os,{relatedTarget:e})):t.classList.remove(Ws)}),t,t.classList.contains(Hs)))}_keydown(t){if(![$s,Is,Ns,Ps,js,Ms].includes(t.key))return;t.stopPropagation(),t.preventDefault();const e=this._getChildren().filter((t=>!l(t)));let i;if([js,Ms].includes(t.key))i=e[t.key===js?0:e.length-1];else{const n=[Is,Ps].includes(t.key);i=b(e,t.target,n,!0)}i&&(i.focus({preventScroll:!0}),Ks.getOrCreateInstance(i).show())}_getChildren(){return z.find(qs,this._parent)}_getActiveElem(){return this._getChildren().find((t=>this._elemIsActive(t)))||null}_setInitialAttributes(t,e){this._setAttributeIfNotExists(t,"role","tablist");for(const t of e)this._setInitialAttributesOnChild(t)}_setInitialAttributesOnChild(t){t=this._getInnerElement(t);const e=this._elemIsActive(t),i=this._getOuterElement(t);t.setAttribute("aria-selected",e),i!==t&&this._setAttributeIfNotExists(i,"role","presentation"),e||t.setAttribute("tabindex","-1"),this._setAttributeIfNotExists(t,"role","tab"),this._setInitialAttributesOnTargetPanel(t)}_setInitialAttributesOnTargetPanel(t){const e=z.getElementFromSelector(t);e&&(this._setAttributeIfNotExists(e,"role","tabpanel"),t.id&&this._setAttributeIfNotExists(e,"aria-labelledby",`${t.id}`))}_toggleDropDown(t,e){const i=this._getOuterElement(t);if(!i.classList.contains("dropdown"))return;const n=(t,n)=>{const s=z.findOne(t,i);s&&s.classList.toggle(n,e)};n(Bs,Fs),n(".dropdown-menu",Ws),i.setAttribute("aria-expanded",e)}_setAttributeIfNotExists(t,e,i){t.hasAttribute(e)||t.setAttribute(e,i)}_elemIsActive(t){return t.classList.contains(Fs)}_getInnerElement(t){return t.matches(qs)?t:z.findOne(qs,t)}_getOuterElement(t){return t.closest(".nav-item, .list-group-item")||t}static jQueryInterface(t){return this.each((function(){const e=Ks.getOrCreateInstance(this);if("string"==typeof t){if(void 0===e[t]||t.startsWith("_")||"constructor"===t)throw new TypeError(`No method named "${t}"`);e[t]()}}))}}N.on(document,Ls,Rs,(function(t){["A","AREA"].includes(this.tagName)&&t.preventDefault(),l(this)||Ks.getOrCreateInstance(this).show()})),N.on(window,Ds,(()=>{for(const t of z.find(Vs))Ks.getOrCreateInstance(t)})),m(Ks);const Qs=".bs.toast",Xs=`mouseover${Qs}`,Ys=`mouseout${Qs}`,Us=`focusin${Qs}`,Gs=`focusout${Qs}`,Js=`hide${Qs}`,Zs=`hidden${Qs}`,to=`show${Qs}`,eo=`shown${Qs}`,io="hide",no="show",so="showing",oo={animation:"boolean",autohide:"boolean",delay:"number"},ro={animation:!0,autohide:!0,delay:5e3};class ao extends W{constructor(t,e){super(t,e),this._timeout=null,this._hasMouseInteraction=!1,this._hasKeyboardInteraction=!1,this._setListeners()}static get Default(){return ro}static get DefaultType(){return oo}static get NAME(){return"toast"}show(){N.trigger(this._element,to).defaultPrevented||(this._clearTimeout(),this._config.animation&&this._element.classList.add("fade"),this._element.classList.remove(io),d(this._element),this._element.classList.add(no,so),this._queueCallback((()=>{this._element.classList.remove(so),N.trigger(this._element,eo),this._maybeScheduleHide()}),this._element,this._config.animation))}hide(){this.isShown()&&(N.trigger(this._element,Js).defaultPrevented||(this._element.classList.add(so),this._queueCallback((()=>{this._element.classList.add(io),this._element.classList.remove(so,no),N.trigger(this._element,Zs)}),this._element,this._config.animation)))}dispose(){this._clearTimeout(),this.isShown()&&this._element.classList.remove(no),super.dispose()}isShown(){return this._element.classList.contains(no)}_maybeScheduleHide(){this._config.autohide&&(this._hasMouseInteraction||this._hasKeyboardInteraction||(this._timeout=setTimeout((()=>{this.hide()}),this._config.delay)))}_onInteraction(t,e){switch(t.type){case"mouseover":case"mouseout":this._hasMouseInteraction=e;break;case"focusin":case"focusout":this._hasKeyboardInteraction=e}if(e)return void this._clearTimeout();const i=t.relatedTarget;this._element===i||this._element.contains(i)||this._maybeScheduleHide()}_setListeners(){N.on(this._element,Xs,(t=>this._onInteraction(t,!0))),N.on(this._element,Ys,(t=>this._onInteraction(t,!1))),N.on(this._element,Us,(t=>this._onInteraction(t,!0))),N.on(this._element,Gs,(t=>this._onInteraction(t,!1)))}_clearTimeout(){clearTimeout(this._timeout),this._timeout=null}static jQueryInterface(t){return this.each((function(){const e=ao.getOrCreateInstance(this,t);if("string"==typeof t){if(void 0===e[t])throw new TypeError(`No method named "${t}"`);e[t](this)}}))}}return R(ao),m(ao),{Alert:Q,Button:Y,Carousel:xt,Collapse:Bt,Dropdown:qi,Modal:On,Offcanvas:qn,Popover:us,ScrollSpy:Es,Tab:Ks,Toast:ao,Tooltip:cs}}));
//# sourceMappingURL=bootstrap.bundle.min.js.map===== ./static/css/app.css =====
:root{
  --brand-primary:#E1007A; /* magenta boutons */
  --brand-gradient-start:#251053;
  --brand-gradient-end:#1A0D3A;
  --brand-ink:#1E164B;
}

body{background-color:#f8f9fb}

.topbar-gradient{
  background: linear-gradient(140deg, var(--brand-gradient-start) 0%, var(--brand-gradient-end) 100%);
}
.navbar-brand .brand-dot{
  width: 14px; height:14px; display:inline-block; border-radius:50%;
  background: var(--brand-primary);
  box-shadow: 0 0 0 .2rem rgba(225,0,122,.15);
}
.btn-primary{
  --bs-btn-bg: var(--brand-primary);
  --bs-btn-border-color: var(--brand-primary);
  --bs-btn-hover-bg: #c40069;
  --bs-btn-hover-border-color: #c40069;
}
.topbar .form-control{ border-radius:.6rem; }
.topbar .input-group-text{ border-radius:.6rem 0 0 .6rem; }
.topbar-nav .nav-link{
  color:#5b5b7b;
  border-radius:.6rem;
}
.topbar-nav .nav-link.active,
.topbar-nav .nav-link:hover{
  color:#fff;
  background: linear-gradient(140deg, var(--brand-gradient-start) 0%, var(--brand-gradient-end) 100%);
}
.section-title{
  color: var(--brand-ink);
  font-weight:800;
}
.card{ border-radius:1rem; }
.stat-num{ font-weight:800; font-size:2rem; }
.badge-soft{ background-color: rgba(30,22,75,.06); color: var(--brand-ink); }
.table thead th{ white-space:nowrap }

/* Bouton "Modifier" en BLEU (style plein) */
.btn-edit{
  --bs-btn-bg: #0d6efd;              /* bleu Bootstrap */
  --bs-btn-border-color: #0d6efd;
  --bs-btn-hover-bg: #0b5ed7;
  --bs-btn-hover-border-color: #0a58ca;
  --bs-btn-active-bg: #0a58ca;
  --bs-btn-active-border-color: #0a53be;
  color:#fff;
}

/* Variante "outline" bleue pour Modifier si tu préfères */
.btn-outline-edit{
  --bs-btn-color:#0d6efd;
  --bs-btn-border-color:#0d6efd;
  --bs-btn-hover-color:#fff;
  --bs-btn-hover-bg:#0d6efd;
  --bs-btn-hover-border-color:#0d6efd;
  --bs-btn-active-bg:#0a58ca;
  --bs-btn-active-border-color:#0a58ca;
}
/* Cartes : bords arrondis déjà gérés. On fixe des hauteurs de zones scrollables
   pour éviter que les blocs grandissent avec le contenu. */
.list-group-flush { /* rien, Bootstrap fait le job */ }
.card .stat-num { line-height: 1; }

/* (facultatif) compacter un peu les items des listes de cadeaux */
.list-group-item .fw-semibold { font-weight: 600; }
/* ========== Client detail layout ========== */
.client-page { 
  /* occupe la hauteur de l'écran sous la topbar */
  min-height: calc(100vh - 120px);
}

/* Colonnes en piles flex pour pouvoir “étirer” les cartes */
.client-col {
  display: flex;
  flex-direction: column;
  gap: 1rem; /* même espacement que .g-3 */
}

/* Carte qui s'étire pour harmoniser la hauteur */
.card.flex-fill {
  height: 0;
  min-height: 0;
  flex: 1 1 0;
}

/* Corps de carte qui scrolle sans faire grandir la carte */
.card-body.scrollable {
  overflow: auto;
}

/* Ligne des 3 KPI compacte */
.kpi-card .stat-num{ font-size: 2.2rem; }

/* 3 blocs cadeaux avec hauteur égale (1/3 de la colonne) */
.rewards-stack {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}
.rewards-stack > .card.flex-fill { min-height: 0; }

/* Sur très grands écrans, un peu plus d’air */
@media (min-width: 1400px){
  .client-page { min-height: calc(100vh - 140px); }
}
===== ./static/js/app.js =====
(function(){
  const page = document.body.getAttribute('data-page');
  const file = (page||'') + '.html';
  document.querySelectorAll('#mainNav .nav-link').forEach(a=>{
    if (a.getAttribute('href')===file){ a.classList.add('active'); }
  });
})();===== ./static/imports/chartjs/chart.umd.js =====
===== ./gunicorn.conf.py =====
import multiprocessing

bind = "0.0.0.0:8000"
workers = max(2, multiprocessing.cpu_count() * 2)
threads = 2
worker_class = "gthread"
timeout = 60
keepalive = 30
accesslog = "-"
errorlog = "-"
loglevel = "info"
forwarded_allow_ips = "*"
===== ./templates/registration/password_reset_email.html =====
<!doctype html>
<html lang="fr">
  <body>
    <p>Si un compte est associé à cette adresse, utilisez le lien ci-dessous :</p>
    <p>
      <a href="{{ protocol }}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}">
        Réinitialiser mon mot de passe
      </a>
    </p>
    <p>
      Si le bouton ne s’affiche pas, copiez ce lien :<br>
      {{ protocol }}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}
    </p>
  </body>
</html>
===== ./templates/base.html =====
{% load static %}
<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <title>{% block title %}ParrainApp{% endblock %}</title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <!-- Bootstrap local -->
  <link rel="stylesheet" href="{% static 'bootstrap/css/bootstrap.min.css' %}">
  <!-- Ton thème -->
  <link rel="stylesheet" href="{% static 'css/app.css' %}">
</head>
<body>
  {% block content %}{% endblock %}
  <script src="{% static 'bootstrap/js/bootstrap.bundle.min.js' %}"></script>
  <script src="{% static 'js/app.js' %}"></script>
</body>
</html>
===== ./templates/base_dashboard.html =====
{% load static %}
<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{% block title %}ParrainApp{% endblock %}</title>

  <!-- Bootstrap + thème local -->
  <link rel="stylesheet" href="{% static 'bootstrap/css/bootstrap.min.css' %}">
  <link rel="stylesheet" href="{% static 'css/app.css' %}">
</head>

<body data-page="{% block body_data_page %}{% endblock %}">
  <!-- TOP BAR (horizontal) -->
  <header class="topbar border-bottom sticky-top">
    <div class="topbar-gradient">
      <div class="container py-3">
        <div class="d-flex align-items-center justify-content-between gap-3">

          <!-- Marque -->
          <a class="navbar-brand d-flex align-items-center gap-2 text-white text-decoration-none"
             href="{% url 'dashboard:root' %}">
            <span class="brand-dot"></span>
            <span class="fw-bold">ParrainApp</span>
          </a>

          <!-- Recherche -->
          <form class="d-none d-md-flex" role="search" method="get" action="" style="min-width: 480px;">
            <div class="input-group input-group-sm">
              <span class="input-group-text">🔎</span>

              <!-- type de filtre courant (conservé au submit) -->
              <input type="hidden" name="type" value="{{ filter_type|default:'tous' }}">

              <input class="form-control"
                     type="search"
                     name="q"
                     value="{{ current_q|default:'' }}"
                     placeholder="Rechercher (nom, email, username)"
                     aria-label="Search">

              {# Filtre spécifique pour la vue Parrains (optionnel) #}
              {% if filter_type == 'parrains' %}
                <input class="form-control"
                       type="search"
                       name="ref_name"
                       value="{{ current_ref_name|default:'' }}"
                       placeholder="Filtrer les parrains par nom"
                       aria-label="Filtrer les parrains par nom">
              {% endif %}

              {# Filtre entreprise visible pour superadmin #}
              {% if companies_for_filter and request.user.profile == 'superadmin' %}
                <select class="form-select" name="company" aria-label="Filtrer par entreprise">
                  <option value="">Toutes les entreprises</option>
                  {% for c in companies_for_filter %}
                    <option value="{{ c.id }}"
                            {% if current_company|stringformat:'s' == c.id|stringformat:'s' %}selected{% endif %}>
                      {{ c.name }}
                    </option>
                  {% endfor %}
                </select>
              {% endif %}

              <button class="btn btn-outline-light" type="submit">Filtrer</button>
            </div>
          </form>

          <!-- Actions à droite -->
          <div class="d-flex align-items-center gap-2">
            <a class="btn btn-sm btn-outline-light" href="{% url 'accounts:user_create' %}">Créer un utilisateur</a>

            {% if request.user.profile == 'superadmin' %}
              <a class="btn btn-sm btn-outline-light" href="{% url 'accounts:company_list' %}">
                Entreprises
              </a>
            {% endif %}

            <div class="dropdown">
              <button class="btn btn-sm btn-outline-light dropdown-toggle" data-bs-toggle="dropdown">
                {{ request.user.get_username|default:"Compte" }}
              </button>
              <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="#">Profil</a></li>
                <li><a class="dropdown-item" href="#">Paramètres</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="{% url 'accounts:logout' %}">Déconnexion</a></li>
              </ul>
            </div>
          </div>

        </div>
      </div>
    </div>

    <!-- NAV HORIZONTALE (pills) -->
    <div class="topbar-nav bg-white">
      <div class="container">
        <ul class="nav nav-pills gap-1 py-2" id="mainNav">
          <li class="nav-item">
            <a class="nav-link {% block nav_dashboard_active %}{% endblock %}"
               href="{% url 'dashboard:root' %}">
              Tableau de bord
            </a>
          </li>

          <li class="nav-item">
            <a class="nav-link {% block nav_users_active %}{% endblock %}"
               href="{% url 'accounts:user_list' %}">
              Utilisateurs
            </a>
          </li>

          {% if request.user.profile == 'superadmin' %}
            <li class="nav-item">
              <a class="nav-link {% block nav_companies_active %}{% endblock %}"
                 href="{% url 'accounts:company_list' %}">
                Entreprises
              </a>
            </li>
          {% endif %}

          <!-- nav métiers -->
          <li class="nav-item">
            <a class="nav-link {% block nav_clients_active %}{% endblock %}"
               href="{% url 'dashboard:clients_list' %}">
              Récompenses Parrains
            </a>
          </li>

          <li class="nav-item">
            <a class="nav-link {% block nav_rewards_active %}{% endblock %}"
               href="{% url 'rewards:list' %}">
              Gestion des Récompenses
            </a>
          </li>

          <li class="nav-item">
            <a class="nav-link {% block nav_stats_active %}{% endblock %}" href="{% url 'rewards:stats' %}">
              Statistiques
            </a>
          </li>
        </ul>
      </div>
    </div>
  </header>

  <!-- CONTENU -->
  <main class="container my-4">
    {% block content %}{% endblock %}
  </main>

  <!-- JS -->
  <script src="{% static 'bootstrap/js/bootstrap.bundle.min.js' %}"></script>
  <script src="{% static 'js/app.js' %}"></script>
</body>
</html>
===== ./templates/rewards/form.html =====
{# templates/rewards/form.html #}
{% extends "base_dashboard.html" %}
{% block title %}Modifier une récompense • ParrainApp{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}
<header class="mb-3">
  <h1 class="h4 section-title mb-1">Modifier « {{ tpl.label }} » ({{ ui.label }})</h1>
  <div class="text-secondary">Probabilité : ~{{ tpl.probability_display }} (fixe)</div>
</header>

<div class="card shadow-sm">
  <form method="post" class="card-body vstack gap-3">
    {% csrf_token %}

    <div class="row g-3">
      <div class="col-md-6">
        <label for="{{ form.label.id_for_label }}" class="form-label">Nom de la récompense</label>
        {{ form.label }}
      </div>

      <div class="col-md-3">
        <label for="{{ form.cooldown_months.id_for_label }}" class="form-label">Délai</label>
        {{ form.cooldown_months }}
      </div>

      <div class="col-md-3">
        <label for="{{ form.min_referrals_required.id_for_label }}" class="form-label">
          Minimum de parrainages requis
        </label>
        {{ form.min_referrals_required }}
        <div class="form-text">0 = aucun minimum.</div>
      </div>
    </div>

    <div class="d-flex justify-content-end gap-2 mt-3">
      <a href="{% url 'rewards:list' %}" class="btn btn-outline-secondary">Annuler</a>
      <button type="submit" class="btn btn-primary">Enregistrer</button>
    </div>
  </form>
</div>
{% endblock %}
===== ./templates/rewards/wheels.html =====
{# templates/rewards/wheels.html #}
{% extends "base_dashboard.html" %}
{% block title %}Roue de probabilités • ParrainApp{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}

{# Mini override pour “orange” Bootstrap (Rare) #}
<style>
  .text-bg-orange{color:#fff!important;background-color:#fd7e14!important}
  .bg-orange-subtle{background-color:rgba(253,126,20,.15)!important}
</style>

<header class="mb-4">
  <h1 class="h4 section-title mb-1">Roue de probabilités</h1>
  <div class="text-secondary">Exactement 80/100, 19/100, 1/100 et 1/10000 par entreprise.</div>
</header>

<div class="d-flex justify-content-end mb-3">
  {# même placement que “Ajouter une récompense” dans ta maquette #}
  <form method="post" action="{% url 'rewards:wheel_rebuild' base_key %}" class="me-2">
    {% csrf_token %}
    <button class="btn btn-outline-primary">Régénérer base (100)</button>
  </form>
  <form method="post" action="{% url 'rewards:wheel_rebuild' vr_key %}">
    {% csrf_token %}
    <button class="btn btn-outline-danger">Régénérer très rare (10 000)</button>
  </form>
</div>

<div class="row g-3">
  {# On reprend exactement la grille de 4 cards #}
  {% for c in cards %}
  <div class="col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm">
      <div class="card-header d-flex justify-content-between
           {% if c.code == 'souvent' %}bg-success-subtle
           {% elif c.code == 'moyen' %}bg-warning-subtle
           {% elif c.code == 'rare' %}bg-orange-subtle
           {% else %}bg-danger-subtle
           {% endif %}">
        <span class="badge {{ c.badge_cl }}">{{ c.title }}</span>
        <small class="text-secondary">{{ c.approx }}</small>
      </div>
      <div class="card-body d-flex flex-column">
        <h3 class="h6">{{ c.title }} — restants dans le cycle : {{ c.remaining }} / {{ c.total }}</h3>
        <div class="text-secondary small mb-3">
          Curseur de la roue :
          <strong>{{ c.progress }}%</strong>
        </div>

        <div class="progress mb-3" style="height:6px">
          <div class="progress-bar" style="width: {{ c.progress }}%"></div>
        </div>

        <div class="mt-auto d-flex flex-wrap gap-2">
          {% if c.code in 'souvent,moyen,rare' %}
            <form method="post" action="{% url 'rewards:wheel_reset' base_key %}">
              {% csrf_token %}<button class="btn btn-sm btn-outline-secondary">Remettre à zéro (base)</button>
            </form>
            <form method="post" action="{% url 'rewards:wheel_consume' base_key %}">
              {% csrf_token %}<button class="btn btn-sm btn-outline-primary">Consommer 1 tirage (test)</button>
            </form>
          {% else %}
            <form method="post" action="{% url 'rewards:wheel_reset' vr_key %}">
              {% csrf_token %}<button class="btn btn-sm btn-outline-secondary">Remettre à zéro (très rare)</button>
            </form>
            <form method="post" action="{% url 'rewards:wheel_consume' vr_key %}">
              {% csrf_token %}<button class="btn btn-sm btn-outline-primary">Consommer 1 tirage (test)</button>
            </form>
          {% endif %}
        </div>
      </div>
    </div>
  </div>
  {% endfor %}
</div>

{% endblock %}
===== ./templates/rewards/spin.html =====
{% extends "base_dashboard.html" %}
{% block title %}Roulette de récompense • ParrainApp{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}
<style>
/* --------- Variables de teinte ---------- */
.wheel {
  --accent: #6c757d; /* fallback */
  width: 300px; height: 300px;
  border-radius: 50%;
  border: 8px solid var(--accent);
  position: relative;
  margin: 0 auto;
  box-shadow:
    0 0 0 4px rgba(0,0,0,.03),
    0 0 30px rgba(0,0,0,.06) inset;
  transition: box-shadow .3s ease, border-color .3s ease;
}
.wheel.is-spinning { box-shadow: 0 0 0 4px rgba(0,0,0,.03), 0 0 46px var(--accent); }

/* Aiguille (triangle en haut) */
.wheel::after{
  content:"";
  position:absolute; top:-20px; left:50%; transform:translateX(-50%);
  width:0; height:0;
  border-left: 12px solid transparent;
  border-right:12px solid transparent;
  border-bottom:22px solid var(--accent);
  filter: drop-shadow(0 2px 0 rgba(0,0,0,.15));
}

/* Disque interne : conic-gradient 4 segments dans l’ordre SOUVENT/MOYEN/RARE/TRES_RARE */
.wheel__disk{
  position:absolute; inset: 16px;
  border-radius:50%;
  background:
    conic-gradient(
      rgba(25,135,84,.90) 0deg,   rgba(25,135,84,.90) 90deg,   /* success  -> SOUVENT */
      rgba(13,202,240,.90) 90deg, rgba(13,202,240,.90) 180deg, /* info     -> MOYEN   */
      rgba(253,126,20,.92) 180deg,rgba(253,126,20,.92) 270deg, /* orange   -> RARE    */
      rgba(220,53,69,.92) 270deg, rgba(220,53,69,.92) 360deg   /* danger   -> TRES_RARE */
    );
  transform-origin:50% 50%;
}

/* Animation de rotation */
.spin-anim { transition: transform 2.2s cubic-bezier(.17,.67,.13,1.02); }

/* Map badge -> couleur d’accent */
.wheel--success { --accent:#198754; } /* vert   */
.wheel--info    { --accent:#0dcaf0; } /* bleu   */
.wheel--warning { --accent:#fd7e14; } /* orange */
.wheel--danger  { --accent:#dc3545; } /* rouge  */

/* Carte résultat */
.result-card { border-left: 4px solid var(--accent); }
</style>

<header class="mb-4 d-flex justify-content-between align-items-center">
  <div>
    <h1 class="h5 mb-1">Animation de la roue</h1>
    <div class="text-secondary">
      Récompense attribuée à <strong>{{ reward.client.last_name }} {{ reward.client.first_name }}</strong>
    </div>
  </div>
  <a class="btn btn-outline-secondary" href="{% url 'dashboard:client_detail' pk=reward.client_id %}">Retour fiche client</a>
</header>

<div class="card shadow-sm">
  <div class="card-body d-flex flex-column align-items-center">
    {# La classe wheel--{{ ui.badge }} pose la bonne couleur (success/info/warning/danger) #}
    <div class="wheel wheel--{{ ui.badge }} is-spinning">
      <div id="disk" class="wheel__disk spin-anim"></div>
    </div>

    <div class="mt-4 text-center result-card px-3 py-2 rounded">
      <span class="badge text-bg-{{ ui.badge }} me-2">{{ ui.label }}</span>
      <strong id="rewardLabel">{{ reward.label }}</strong>
    </div>
  </div>
</div>

<script>
(function(){
  const disk = document.getElementById('disk');
  const target = {{ target_angle|default:1440 }};
  // Lance la rotation après un mini délai pour laisser le layout se peindre
  setTimeout(()=>{ disk.style.transform = `rotate(${target}deg)`; }, 60);
  // Retire l'état “is-spinning” une fois l’animation finie (effet de lueur)
  disk.addEventListener('transitionend', () => {
    const wheel = disk.closest('.wheel');
    wheel && wheel.classList.remove('is-spinning');
  }, { once: true });
})();
</script>
{% endblock %}
===== ./templates/rewards/stats.html =====
{# templates/rewards/stats.html — remplace TOUT le fichier par ceci #}
{% extends "base_dashboard.html" %}
{% block title %}Statistiques • {{ company.name }}{% endblock %}
{% block body_data_page %}stats{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Statistiques</h1>
  <div class="text-secondary">Aperçu simple : parrainages par mois & cadeaux obtenus.</div>
</header>

<div class="row g-3">
  {# ---- Parrainages par mois (aperçu) ---- #}
  <div class="col-xl-6">
    <div class="card shadow-sm h-100">
      <div class="card-header">Parrainages par mois (aperçu)</div>
      <div class="card-body vstack gap-2">
        {% if monthly_rows %}
          {% for r in monthly_rows %}
            <div>
              <div class="d-flex justify-content-between">
                <small>{{ r.month|date:"F" }}</small>
                <small>{{ r.n }}</small>
              </div>
              <div class="progress">
                <div class="progress-bar" style="width: {{ r.pct }}%"></div>
              </div>
            </div>
          {% endfor %}
        {% else %}
          <div class="text-secondary small">Aucune donnée.</div>
        {% endif %}
      </div>
    </div>
  </div>

  {# ---- Cadeaux obtenus (Top) ---- #}
  <div class="col-xl-6">
    <div class="card shadow-sm h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Cadeaux obtenus (Top)</span>
        <small class="text-secondary">Top 4</small>
      </div>
      <div class="table-responsive">
        <table class="table align-middle mb-0">
          <thead class="table-light">
            <tr><th>Cadeau</th><th>Compteur</th><th>Part</th></tr>
          </thead>
          <tbody>
            {% if top_gifts %}
              {% for g in top_gifts %}
                <tr>
                  <td>{{ g.label }}</td>
                  <td>{{ g.n }}</td>
                  <td style="width:220px">
                    <div class="progress" style="height:6px">
                      <div class="progress-bar" style="width: {{ g.pct }}%"></div>
                    </div>
                  </td>
                </tr>
              {% endfor %}
            {% else %}
              <tr><td colspan="3" class="text-secondary small">Aucune donnée.</td></tr>
            {% endif %}
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/rewards/use_reward.html =====
{# templates/rewards/use_reward.html #}
{% extends "base_public.html" %}
{% block title %}Utiliser votre récompense{% endblock %}

{% block content %}
  <div class="container py-4">
    <h1 class="h4 mb-3">Votre récompense</h1>

    <div class="card shadow-sm">
      <div class="card-body">
        <div class="mb-2">
          <strong>{{ reward.label }}</strong>
        </div>

        {% if reward.cooldown_days %}
          <p class="text-secondary small mb-2">{{ reward.validity_sentence }}</p>
        {% else %}
          <p class="text-secondary small mb-2">Validité : illimité</p>
        {% endif %}

        {% if reward.state == "PENDING" %}
          <p class="mb-0">
            Présentez ce lien en caisse. Un membre de l’équipe validera la récompense.
          </p>
        {% else %}
          <div class="alert alert-info mb-0">
            Cette récompense n’est plus en attente (déjà distribuée ou inactive).
          </div>
        {% endif %}
      </div>
    </div>
  </div>
{% endblock %}
===== ./templates/rewards/test_wheel.html =====
{% extends "base_dashboard.html" %}
{% block title %}Roue de test • ParrainApp{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}
<style>
.wheel { --accent:#6c757d; width:300px; height:300px; border-radius:50%;
  border:8px solid var(--accent); position:relative; margin:0 auto;
  box-shadow:0 0 0 4px rgba(0,0,0,.03), 0 0 30px rgba(0,0,0,.06) inset;
  transition: box-shadow .3s ease, border-color .3s ease;
}
.wheel.is-spinning { box-shadow:0 0 0 4px rgba(0,0,0,.03), 0 0 46px var(--accent); }
.wheel::after{ content:""; position:absolute; top:-20px; left:50%; transform:translateX(-50%);
  width:0; height:0; border-left:12px solid transparent; border-right:12px solid transparent;
  border-bottom:22px solid var(--accent); filter: drop-shadow(0 2px 0 rgba(0,0,0,.15));
}
.wheel__disk{ position:absolute; inset:16px; border-radius:50%;
  background: conic-gradient(
    rgba(25,135,84,.90) 0deg,   rgba(25,135,84,.90) 90deg,
    rgba(13,202,240,.90) 90deg, rgba(13,202,240,.90) 180deg,
    rgba(253,126,20,.92) 180deg,rgba(253,126,20,.92) 270deg,
    rgba(220,53,69,.92) 270deg, rgba(220,53,69,.92) 360deg
  );
  transform-origin:50% 50%;
}
.spin-anim { transition: transform 2.2s cubic-bezier(.17,.67,.13,1.02); }
.wheel--success { --accent:#198754; }  /* SOUVENT */
.wheel--info    { --accent:#0dcaf0; }  /* MOYEN   */
.wheel--warning { --accent:#fd7e14; }  /* RARE    */
.wheel--danger  { --accent:#dc3545; }  /* TRES_RARE */
.wheel--secondary { --accent:#6c757d; } /* NO_HIT  */
.result-card { border-left:4px solid var(--accent); }
</style>

<header class="mb-4 d-flex justify-content-between align-items-center">
  <div>
    <h1 class="h5 mb-1">Roue de test (aléatoire, sans attribution)</h1>
    <div class="text-secondary">Tire au sort un bucket selon la distribution choisie.</div>
  </div>
  <a class="btn btn-outline-secondary" href="{% url 'rewards:list' %}">← Récompenses</a>
</header>

<form class="card mb-3" method="get">
  <div class="card-body row g-2 align-items-end">
    <div class="col-sm-4">
      <label class="form-label">Mode</label>
      <select name="mode" class="form-select">
        <option value="combined" {% if mode == 'combined' %}selected{% endif %}>Combiné (1/100000 très rare + base 980/19/1)</option>
        <option value="base" {% if mode == 'base' %}selected{% endif %}>Base (SOUVENT/MOYEN/RARE)</option>
        <option value="very_rare" {% if mode == 'very_rare' %}selected{% endif %}>Très rare uniquement</option>
      </select>
    </div>
    <div class="col-sm-3">
      <label class="form-label">Seed (optionnel)</label>
      <input type="text" class="form-control" name="seed" value="{{ seed }}">
    </div>
    <div class="col-sm-3">
      <label class="form-label">Simuler N tirages (optionnel)</label>
      <input type="number" class="form-control" name="n" value="{{ simulate_n|default:0 }}" min="0" step="1">
    </div>
    <div class="col-sm-2 d-flex gap-2">
      <button class="btn btn-primary w-100" type="submit">Tirer</button>
      <a class="btn btn-outline-secondary" href="{% url 'rewards:test_wheel' %}">Reset</a>
    </div>
  </div>
</form>

<div class="card shadow-sm mb-3">
  <div class="card-body d-flex flex-column align-items-center">
    <div class="wheel wheel--{{ ui.badge }} is-spinning">
      <div id="disk" class="wheel__disk spin-anim"></div>
    </div>
    <div class="mt-4 text-center result-card px-3 py-2 rounded">
      <span class="badge text-bg-{{ ui.badge }} me-2">
        {% if bucket == 'NO_HIT' %}Aucun gain{% else %}{{ ui.label }}{% endif %}
      </span>
      <strong id="rewardLabel">
        {% if bucket == 'SOUVENT' %}-10 %{% elif bucket == 'MOYEN' %}-20 %{% elif bucket == 'RARE' %}Cadeau rare{% elif bucket == 'TRES_RARE' %}Jackpot !{% else %}—{% endif %}
      </strong>
    </div>
  </div>
</div>

{% if counts %}
<div class="card">
  <div class="card-header">Simulation ({{ simulate_n }} tirages)</div>
  <div class="card-body">
    <div class="table-responsive">
      <table class="table table-sm align-middle">
        <thead>
          <tr><th>Bucket</th><th>Occurences</th><th>% observé</th></tr>
        </thead>
        <tbody>
          {% for k,v in counts.items %}
          <tr>
            <td>{{ k }}</td>
            <td>{{ v }}</td>
            <td>{{ pct|get_item:k|default:"0" }} %</td>
          </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
    <div class="text-secondary small">
      Combiné attendu (théorique) : TRES_RARE ≈ 0.001 %, sinon base 980/1000, 19/1000, 1/1000.
    </div>
  </div>
</div>
{% endif %}

<script>
(function(){
  const disk = document.getElementById('disk');
  const target = {{ target_angle|default:1440 }};
  setTimeout(()=>{ disk.style.transform = `rotate(${target}deg)`; }, 60);
  disk.addEventListener('transitionend', () => {
    const wheel = disk.closest('.wheel');
    wheel && wheel.classList.remove('is-spinning');
  }, { once: true });
})();
</script>
{% endblock %}
===== ./templates/rewards/list.html =====
{# templates/rewards/list.html #}
{% extends "base_dashboard.html" %}
{% block title %}Récompenses • ParrainApp{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Récompenses</h1>
  <div class="text-secondary">Définissez les cadeaux (nom) et le délai. Les probabilités sont fixes.</div>
</header>

{% if not items %}
  <div class="card shadow-sm"><div class="card-body text-secondary">Aucune récompense.</div></div>
{% else %}
  <div class="row g-3">
    {% for r, ui in items %}
      <div class="col-md-6 col-xl-3">
        <div class="card h-100 shadow-sm">
          <div class="card-header bg-{{ ui.badge }}-subtle d-flex justify-content-between">
            <span class="badge text-bg-{{ ui.badge }}">
              {% if ui.label == "Moyen" %}Moyen{% else %}{{ ui.label }}{% endif %}
            </span>
            <small class="text-secondary">~{{ r.probability_display }}</small>
          </div>
          <div class="card-body d-flex flex-column">
            <h3 class="h6">{{ r.label }}</h3>

            <div class="text-secondary small">
              Délai : {{ r.cooldown_months }} mois
            </div>
            <div class="text-secondary small mb-3">
              Minimum requis : {{ r.min_referrals_required }} parrainage{{ r.min_referrals_required|pluralize }}
            </div>

            <div class="mt-auto d-flex gap-2">
              <a class="btn btn-sm btn-outline-primary" href="{% url 'rewards:update' r.pk %}">Modifier</a>
            </div>
          </div>
        </div>
      </div>
    {% endfor %}
  </div>
{% endif %}
{# Données probabilistes — mêmes constantes que Reward #}
{{ TEST_WHEEL|json_script:"wt-data" }}

<style>
#wheel-test .wheel{
  --accent:#6c757d;
  width:300px;height:300px;border-radius:50%;
  border:8px solid var(--accent);position:relative;margin:0 auto;
  box-shadow:0 0 0 4px rgba(0,0,0,.03), inset 0 0 30px rgba(0,0,0,.06);
  transition: box-shadow .3s ease, border-color .3s ease;
}
#wheel-test .wheel.is-spinning{ box-shadow:0 0 0 4px rgba(0,0,0,.03), 0 0 46px var(--accent); }

#wheel-test .needle{
  position:absolute; top:-20px; left:50%; transform:translateX(-50%);
  width:0;height:0;border-left:12px solid transparent;border-right:12px solid transparent;
  border-bottom:22px solid var(--accent); filter: drop-shadow(0 2px 0 rgba(0,0,0,.15));
}

/* 4 segments visuels (égaux) pour une belle animation ; le tirage, lui, respecte les vraies probas */
#wheel-test .wheel__disk{
  position:absolute; inset:16px; border-radius:50%;
  background: conic-gradient(
    rgba(25,135,84,.90) 0deg,   rgba(25,135,84,.90) 90deg,   /* SOUVENT  */
    rgba(13,202,240,.90) 90deg, rgba(13,202,240,.90) 180deg, /* MOYEN    */
    rgba(253,126,20,.92) 180deg,rgba(253,126,20,.92) 270deg, /* RARE     */
    rgba(220,53,69,.92) 270deg, rgba(220,53,69,.92) 360deg   /* TRES_RARE */
  );
  transform-origin:50% 50%;
}
#wheel-test .spin-anim{ transition: transform 2.2s cubic-bezier(.17,.67,.13,1.02); }

#wheel-test .wheel--success { --accent:#198754; }
#wheel-test .wheel--info    { --accent:#0dcaf0; }
#wheel-test .wheel--warning { --accent:#fd7e14; }
#wheel-test .wheel--danger  { --accent:#dc3545; }
#wheel-test .wheel--secondary{ --accent:#6c757d; }

#wheel-test .result-card{ border-left:4px solid var(--accent); }
</style>

<section id="wheel-test" class="mt-4">
  <div class="card mb-3">
    <div class="card-header d-flex justify-content-between align-items-center">
      <span>🎡 Roue de test (aléatoire, sans attribution)</span>
      <span class="text-secondary small">Utilise les mêmes probas que Reward (1/100000 très rare + 980/19/1)</span>
    </div>
    <div class="card-body">
      <form class="row g-2 align-items-end" onsubmit="return false;">
        <div class="col-md-3">
          <label class="form-label">Simuler N tirages (optionnel)</label>
          <input id="wt-n" type="number" class="form-control" min="0" step="1" value="0">
        </div>
        <div class="col-md-3">
          <label class="form-label">Seed (optionnel)</label>
          <input id="wt-seed" type="text" class="form-control" placeholder="ex: 42">
        </div>
        <div class="col-md-6 d-flex gap-2">
          <button id="wt-draw" class="btn btn-primary" type="button">Tirer</button>
          <button id="wt-reset" class="btn btn-outline-secondary" type="button">Reset</button>
        </div>
      </form>

      <div class="mt-4 d-flex flex-column align-items-center">
        <div id="wt-wheel" class="wheel wheel--secondary">
          <div class="needle" aria-hidden="true"></div>
          <div id="wt-disk" class="wheel__disk spin-anim"></div>
        </div>

        <div id="wt-result" class="mt-4 text-center result-card px-3 py-2 rounded">
          <span id="wt-badge" class="badge text-bg-secondary me-2">—</span>
          <strong id="wt-label">—</strong>
        </div>
      </div>

      <div id="wt-sim" class="table-responsive mt-4 d-none">
        <table class="table table-sm align-middle mb-0">
          <thead><tr><th>Bucket</th><th>Occurences</th><th>% observé</th></tr></thead>
          <tbody id="wt-rows"></tbody>
        </table>
      </div>
    </div>
  </div>
</section>

<script>
(function(){
  // --- Ordre d’affichage & UI (inchangé) ---
  const ORDER = ["SOUVENT","MOYEN","RARE","TRES_RARE"];
  const UI = {
    SOUVENT:   { badge: "success",  label: "Souvent",   text: "-10 %" },
    MOYEN:     { badge: "info",     label: "Moyen",     text: "-20 %" },
    RARE:      { badge: "warning",  label: "Rare",      text: "Cadeau rare" },
    TRES_RARE: { badge: "danger",   label: "Très rare", text: "Jackpot !" },
  };

  // ---- RNG seedable (xorshift32) — on garde tel quel ----
  function hashSeed(s){ let h=2166136261>>>0; for(let i=0;i<s.length;i++){ h^=s.charCodeAt(i); h=Math.imul(h,16777619);} return h>>>0; }
  function rngFromSeed(seedStr){
    if (!seedStr) return Math.random;
    let x = (typeof seedStr==="number"?seedStr:hashSeed(String(seedStr))) || 1;
    return function(){ x^=x<<13; x^=x>>>17; x^=x<<5; x>>>=0; return x/4294967296; };
  }

  // ---- Probabilités demandées (brutes) ----
  // SOUVENT=80/100, MOYEN=19/100, RARE=0.99999/100, TRES_RARE=1/100000
  const RAW = {
    SOUVENT:   80/100,
    MOYEN:     19/100,
    RARE:      0.99999/100,
    TRES_RARE: 1/100000
  };

  // Normalisation pour que la somme = 1 exactement
  const MASS = Object.values(RAW).reduce((a,b)=>a+b,0);
  const W = Object.fromEntries(ORDER.map(k => [k, RAW[k] / MASS]));

  // ---- Tirage cumulatif sur les poids normalisés (une seule passe) ----
  function drawOnce(rnd){
    const x = rnd();
    let acc = 0;
    for (const k of ORDER){
      acc += W[k];
      if (x < acc) return k;
    }
    return ORDER[ORDER.length-1]; // sauvegarde (jamais atteinte en pratique)
  }

  // ---- UI helpers (inchangés) ----
  const $ = (id)=>document.getElementById(id);
  const disk  = $("wt-disk");
  const wheel = $("wt-wheel");
  const badge = $("wt-badge");
  const label = $("wt-label");
  const rows  = $("wt-rows");
  const simBox= $("wt-sim");

  function animateTo(bucket){
    const ui = UI[bucket];
    wheel.className = "wheel wheel--" + ui.badge + " is-spinning";
    badge.className = "badge text-bg-" + ui.badge + " me-2";
    badge.textContent = ui.label;
    label.textContent = ui.text;

    const segment = 360 / ORDER.length;
    const idx = Math.max(0, ORDER.indexOf(bucket));
    const target = 4*360 + Math.floor(idx * segment + segment/2);
    requestAnimationFrame(()=>{ disk.style.transform = `rotate(${target}deg)`; });
    disk.addEventListener("transitionend", ()=> wheel.classList.remove("is-spinning"), {once:true});
  }

  function simulate(n, rnd){
    const buckets = ORDER.slice();
    const counts = Object.fromEntries(buckets.map(b=>[b,0]));
    for (let i=0;i<n;i++) counts[drawOnce(rnd)]++;
    const tot = buckets.reduce((a,b)=>a+counts[b],0)||1;
    rows.innerHTML = "";
    buckets.forEach(k=>{
      const tr = document.createElement("tr");
      tr.innerHTML = `<td>${k}</td><td>${counts[k]}</td><td>${(counts[k]*100/tot).toFixed(2)} %</td>`;
      rows.appendChild(tr);
    });
    simBox.classList.toggle("d-none", n<=0);
  }

  // ---- Évènements (inchangés) ----
  $("wt-draw").addEventListener("click", ()=>{
    const N   = parseInt($("wt-n").value||"0",10);
    const seed= $("wt-seed").value;
    const rnd = rngFromSeed(seed);
    const b = drawOnce(rnd);
    animateTo(b);
    if (N>0) simulate(N, rngFromSeed(seed));
  });

  $("wt-reset").addEventListener("click", ()=>{
    $("wt-n").value = 0; $("wt-seed").value = "";
    simBox.classList.add("d-none"); rows.innerHTML = "";
    wheel.className = "wheel wheel--secondary";
    badge.className = "badge text-bg-secondary me-2";
    badge.textContent = "—"; label.textContent = "—";
    disk.style.transform = "rotate(0deg)";
  });
})();
</script>


{% endblock %}
===== ./templates/rewards/history.html =====
{# templates/rewards/history.html #}
{% extends "base_dashboard.html" %}
{% load dict_extras %}

{% block title %}Historique des récompenses • {{ company.name }}{% endblock %}
{% block body_data_page %}recompenses{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-2">Historique des récompenses — {{ company.name }}</h1>
  <div class="text-secondary">Toutes les récompenses de l’entreprise, tous clients confondus.</div>
</header>

<div class="card shadow-sm mb-3">
  <div class="card-body">
    <form method="get" class="row g-2 align-items-end">
      {# ✅ très important pour le Superadmin : conserver l’entreprise ciblée #}
      {% if company and company.id %}
        <input type="hidden" name="company" value="{{ company.id }}">
      {% endif %}

      <div class="col-lg-4">
        <label class="form-label mb-1">Recherche</label>
        <input type="text" name="q" value="{{ q }}" class="form-control"
               placeholder="Client (nom/prénom/email) ou libellé de récompense…">
      </div>

      <div class="col-lg-3">
        <label class="form-label mb-1">État</label>
        <select name="state" class="form-select">
          <option value="">— Tous —</option>
          {% for k, lbl in states %}
            <option value="{{ k }}" {% if k == state %}selected{% endif %}>{{ lbl }}</option>
          {% endfor %}
        </select>
      </div>

      <div class="col-lg-3">
        <label class="form-label mb-1">Type</label>
        <select name="bucket" class="form-select">
          <option value="">— Tous —</option>
          {% for k, lbl in buckets %}
            <option value="{{ k }}" {% if k == bucket %}selected{% endif %}>{{ lbl }}</option>
          {% endfor %}
        </select>
      </div>

      <div class="col-lg-2 d-flex gap-2">
        <button class="btn btn-primary w-100" type="submit">Filtrer</button>
        {# ✅ réinitialiser tout en gardant le contexte company pour superadmin #}
        <a class="btn btn-outline-secondary"
           href="{% url 'rewards:history_company' %}{% if company and company.id %}?company={{ company.id }}{% endif %}">
          Réinitialiser
        </a>
      </div>
    </form>
  </div>
</div>

{% if page and page.object_list %}
  <div class="card shadow-sm">
    <div class="table-responsive">
      <table class="table align-middle mb-0">
        <thead class="table-light">
          <tr>
            <th style="width: 140px;">Date</th>
            <th>Client</th>
            <th style="width: 110px;">Rôle</th>
            <th>Récompense</th>
            <th style="width: 130px;">Type</th>
            <th style="width: 130px;">État</th>
          </tr>
        </thead>
        <tbody>
          {% for r in page.object_list %}
            <tr>
              <td>
                <div class="small">{{ r.created_at|date:"d/m/Y" }}</div>
                <div class="text-secondary small">{{ r.created_at|date:"H:i" }}</div>
              </td>

              <td>
                <div class="fw-semibold">
                  <a href="{% url 'dashboard:client_detail' pk=r.client_id %}" class="text-decoration-none">
                    {{ r.client.last_name }} {{ r.client.first_name }}
                  </a>
                </div>
                <div class="text-secondary small">{{ r.client.email|default:"—" }}</div>
              </td>

              <td>
                {% if r.referral_id %}
                  {% if r.client_id == r.referral.referrer_id %}
                    <span class="badge text-bg-info">Parrain</span>
                  {% elif r.client_id == r.referral.referee_id %}
                    <span class="badge text-bg-secondary">Filleul</span>
                  {% else %}
                    <span class="badge text-bg-light text-dark">Autre</span>
                  {% endif %}
                {% else %}
                  <span class="text-secondary small">—</span>
                {% endif %}
              </td>

              <td><div class="fw-semibold">{{ r.label }}</div></td>

              <td>
                {# ✅ lire BUCKET_UI[r.bucket] en utilisant le filtre get_item #}
                {% with ui=BUCKET_UI|get_item:r.bucket %}
                  <span class="badge text-bg-{{ ui.badge|default:'secondary' }}">{{ ui.label|default:r.bucket }}</span>
                {% endwith %}
              </td>

              <td>
                {# ✅ lire STATE_UI[r.state] en utilisant le filtre get_item #}
                {% with st=STATE_UI|get_item:r.state %}
                  <span class="badge text-bg-{{ st.badge|default:'secondary' }}">{{ st.label|default:r.state }}</span>
                {% endwith %}
              </td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>

    {% if page.paginator.num_pages > 1 %}
      <div class="card-footer bg-transparent d-flex justify-content-end align-items-center gap-2">
        {% if page.has_previous %}
          <a class="btn btn-sm btn-outline-secondary"
             href="?p={{ page.previous_page_number }}&bucket={{ bucket }}&state={{ state }}&q={{ q|urlencode }}{% if company and company.id %}&company={{ company.id }}{% endif %}">
            Préc.
          </a>
        {% endif %}
        <span class="small">Page {{ page.number }}/{{ page.paginator.num_pages }}</span>
        {% if page.has_next %}
          <a class="btn btn-sm btn-outline-secondary"
             href="?p={{ page.next_page_number }}&bucket={{ bucket }}&state={{ state }}&q={{ q|urlencode }}{% if company and company.id %}&company={{ company.id }}{% endif %}">
            Suiv.
          </a>
        {% endif %}
      </div>
    {% endif %}
  </div>
{% else %}
  <div class="card shadow-sm">
    <div class="card-body text-secondary">Aucune récompense trouvée pour ces critères.</div>
  </div>
{% endif %}
{% endblock %}
===== ./templates/rewards/confirm_delete.html =====
{# templates/rewards/confirm_delete.html #}
{% extends "base_dashboard.html" %}
{% block title %}Supprimer la récompense{% endblock %}

{% block content %}
<header class="mb-3">
  <h1 class="h4 section-title mb-1">Supprimer la récompense</h1>
</header>

<div class="card shadow-sm">
  <div class="card-body">
    <p>Supprimer définitivement <strong>{{ reward.label }}</strong> ?</p>
    <form method="post" class="d-flex gap-2">
      {% csrf_token %}
      <button class="btn btn-danger" type="submit">Supprimer</button>
      <a class="btn btn-outline-secondary" href="{% url 'rewards:list' %}">Annuler</a>
    </form>
  </div>
</div>
{% endblock %}
===== ./templates/rewards/use_reward_done.html =====
{% extends "base_dashboard.html" %}
{% block title %}Récompense utilisée{% endblock %}

{% block content %}
<div class="card shadow-sm">
  <div class="card-body text-center">
    <h2 class="h4 mb-3">🎉 Bravo !</h2>
    <p>Vous venez d’utiliser la récompense :</p>
    <h3 class="h5">{{ reward.label }}</h3>
    <p class="text-secondary">Statut : <span class="badge bg-success">Utilisée</span></p>
  </div>
</div>
{% endblock %}

===== ./templates/base_public.html =====
{% load static %}
<!doctype html>
<html lang="fr">
  <head>
    <meta charset="utf-8">
    <title>{% block title %}Parrainage{% endblock %}</title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <link rel="stylesheet" href="{% static 'bootstrap/css/bootstrap.min.css' %}">
    <link rel="stylesheet" href="{% static 'css/app.css' %}">
  </head>
  <body>
    {% block content %}{% endblock %}

    <!-- ❌ 'vendor/bootstrap' -->
    <!-- ✅ chemin qui correspond à ton arborescence -->
    <script src="{% static 'bootstrap/js/bootstrap.bundle.min.js' %}"></script>
    <script src="{% static 'js/app.js' %}"></script>
  </body>
</html>
===== ./templates/dashboard/home.html =====
{% load static %}
<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>{% block title %}ParrainApp{% endblock %}</title>
  <!-- Bootstrap + thème local -->
  <link rel="stylesheet" href="{% static 'bootstrap/css/bootstrap.min.css' %}">
  <link rel="stylesheet" href="{% static 'css/app.css' %}">
</head>
<body data-page="{% block body_data_page %}{% endblock %}">
  <!-- TOP BAR (horizontal) -->
  <header class="topbar border-bottom sticky-top">
    <div class="topbar-gradient">
      <div class="container py-3">
        <div class="d-flex align-items-center justify-content-between gap-3">
          <a class="navbar-brand d-flex align-items-center gap-2 text-white text-decoration-none" href="{% url 'dashboard_home' %}">
            <span class="brand-dot"></span>
            <span class="fw-bold">ParrainApp</span>
          </a>
          <form class="d-none d-md-flex" role="search" style="min-width: 380px;">
            <div class="input-group input-group-sm">
              <span class="input-group-text">🔎</span>
              <input class="form-control" type="search" placeholder="Rechercher (clients, parrains…)" aria-label="Search">
            </div>
          </form>
          <div class="d-flex align-items-center gap-2">
            <a class="btn btn-sm btn-outline-light" href="{% url 'accounts:user_create' %}">Créer un utilisateur</a>
            <a class="btn btn-sm btn-primary" href="{% url 'accounts:company_list' %}">Entreprises</a>
            <div class="dropdown">
              <button class="btn btn-sm btn-outline-light dropdown-toggle" data-bs-toggle="dropdown">
                {{ request.user.get_username|default:"Compte" }}
              </button>
              <ul class="dropdown-menu dropdown-menu-end">
                <li><a class="dropdown-item" href="#">Profil</a></li>
                <li><a class="dropdown-item" href="#">Paramètres</a></li>
                <li><hr class="dropdown-divider"></li>
                <li><a class="dropdown-item" href="{% url 'accounts:logout' %}">Déconnexion</a></li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- HORIZONTAL NAV (pills) -->
    <div class="topbar-nav bg-white">
      <div class="container">
        <ul class="nav nav-pills gap-1 py-2" id="mainNav">
          <li class="nav-item"><a class="nav-link {% block nav_dashboard_active %}{% endblock %}" href="{% url 'dashboard_home' %}">Tableau de bord</a></li>
          <li class="nav-item"><a class="nav-link {% block nav_users_active %}{% endblock %}" href="{% url 'accounts:user_list' %}">Utilisateurs</a></li>
          <li class="nav-item"><a class="nav-link {% block nav_companies_active %}{% endblock %}" href="{% url 'accounts:company_list' %}">Entreprises</a></li>
          <!-- nav métiers (quand on branchera les templates) -->
          <li class="nav-item"><a class="nav-link" href="#">Parrains</a></li>
          <li class="nav-item"><a class="nav-link" href="#">Parrainés</a></li>
          <li class="nav-item"><a class="nav-link" href="#">Clients</a></li>
          <li class="nav-item"><a class="nav-link" href="#">Récompenses</a></li>
          <li class="nav-item"><a class="nav-link" href="#">Statistiques</a></li>
        </ul>
      </div>
    </div>
  </header>

  <main class="container my-4">
    {% block content %}{% endblock %}
  </main>

  <script src="{% static 'bootstrap/js/bootstrap.bundle.min.js' %}"></script>
  <script src="{% static 'js/app.js' %}"></script>
</body>
</html>
===== ./templates/dashboard/company_home.html =====
{% extends "base_dashboard.html" %}
{% block title %}Tableau de bord (Entreprise) • ParrainApp{% endblock %}
{% block body_data_page %}dashboard{% endblock %}
{% block nav_dashboard_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">
    Tableau de bord — {{ company.name|default:"Mon entreprise" }}
  </h1>
  <div class="text-secondary">
    Vue d’ensemble des parrainages, cadeaux et activité récente de l’entreprise.
  </div>
</header>

{# ... entête conservée ... #}

<div class="row g-3 mb-3">
  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Parrainages (mois)</div>
          <div class="stat-num">{{ kpi.referrals_month }}</div>
        </div>
        <span class="badge badge-soft">
          {% if kpi.referrals_delta_pct > 0 %}+{% endif %}{{ kpi.referrals_delta_pct }}% vs. N-1
        </span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Cadeaux distribués</div>
          <div class="stat-num">{{ kpi.rewards_sent }}</div>
        </div>
        <span class="badge text-bg-success">OK</span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Cadeaux en attente</div>
          <div class="stat-num">{{ kpi.rewards_pending }}</div>
        </div>
        <span class="badge text-bg-warning">Action</span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Base clients</div>
          <div class="stat-num">{{ kpi.clients }}</div>
        </div>
        <span class="badge text-bg-secondary">Actifs</span>
      </div>
    </div></div>
  </div>
</div>

{# Raccourcis : on garde tes URLs existantes #}
{# Exemple: referrer_create, referral_create, rewards:list, rewards:stats (ils existent déjà) #}

<div class="row g-3">
  <div class="col-lg-7">
    <div class="card shadow-sm">
      <div class="card-header">Raccourcis</div>
      <div class="card-body d-grid gap-2">
        <div class="row g-2">
          <div class="col-md-6">
            <a href="{% url 'dashboard:referrer_create' %}" class="btn btn-outline-primary w-100">Inscrire un parrain</a>
          </div>
          <div class="col-md-6">
            <a href="{% url 'dashboard:referral_create' %}" class="btn btn-outline-primary w-100">Enregistrer un parrainé</a>
          </div>
          <div class="col-md-6">
            <a href="{% url 'rewards:list' %}" class="btn btn-outline-primary w-100">Gérer les récompenses</a>
          </div>
          <div class="col-md-6">
            <a href="{% url 'rewards:stats' %}" class="btn btn-outline-primary w-100">Voir les statistiques</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-5">
    <div class="card shadow-sm">
      <div class="card-header">Activité récente</div>
      <div class="card-body small vstack gap-2">
        {% for ev in events %}
          <div class="d-flex justify-content-between">
            <div>{{ ev.icon }} {{ ev.text }}</div>
            {% if ev.badge %}<span class="badge text-bg-secondary rounded-pill">{{ ev.badge }}</span>{% endif %}
          </div>
        {% empty %}
          <div class="text-secondary">Aucune activité récente.</div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>
{% endblock %}===== ./templates/dashboard/client_detail.html =====
{# templates/dashboard/client_detail.html #}
{% extends "base_dashboard.html" %}
{% load url_extras dict_extras %}
{% block title %}Fiche client — {{ client.last_name }} {{ client.first_name }}{% endblock %}
{% block body_data_page %}clients{% endblock %}
{% block nav_clients_active %}active{% endblock %}
{% load url_extras dict_extras %}

{% block content %}
<style>
  .tall-card .card-body { max-height: 360px; overflow: auto; }
  @media (min-width: 1400px){
    .tall-card .card-body { max-height: 420px; }
  }
</style>

<header class="mb-3">
  <h1 class="h4 section-title mb-1">Fiche client</h1>
  <div class="text-secondary">Informations, cadeaux et historique</div>
</header>

<div class="row g-3">

  {# --------- COLONNE GAUCHE --------- #}
  <div class="col-lg-4">
    <div class="card shadow-sm mb-3">
      <div class="card-body">
        <div class="d-flex justify-content-between">
          <h2 class="h6 mb-3">Informations</h2>
          {% if client.is_referrer %}
            <span class="badge text-bg-info">Parrain</span>
          {% else %}
            <span class="badge text-bg-secondary">Filleul</span>
          {% endif %}
        </div>

        <div class="vstack gap-1 small mb-3">
          <div><span class="text-secondary">Nom :</span> {{ client.last_name|default:"—" }}</div>
          <div><span class="text-secondary">Prénom :</span> {{ client.first_name|default:"—" }}</div>
          <div><span class="text-secondary">Téléphone :</span> {{ client.phone|default:"—" }}</div>
          <div><span class="text-secondary">Email :</span> {{ client.email|default:"—" }}</div>
          <div><span class="text-secondary">Entreprise :</span> {{ company.name }}</div>
        </div>

        <a href="{% url 'rewards:history_company' %}"
           class="btn btn-sm btn-outline-primary">Historique des récompenses (entreprise)</a>

        <hr class="my-2">

        <div class="fw-semibold mb-2">Historique des parrainages</div>

        <div class="tall-card">
          <div class="card-body p-0">
            {% if history_page and history_page.object_list %}
              <div class="list-group list-group-flush">
                {% for r in history_page.object_list %}
                  <div class="list-group-item d-flex justify-content-between">
                    <div class="me-2">
                      {% if r.referrer_id == client.id %}
                        <strong>{{ r.referee.first_name }} {{ r.referee.last_name }}</strong>
                        <small class="text-secondary d-block">Parrainé par {{ client.first_name }} {{ client.last_name }}</small>
                      {% else %}
                        <strong>{{ r.referrer.first_name }} {{ r.referrer.last_name }}</strong>
                        <small class="text-secondary d-block">Parrain de ce client</small>
                      {% endif %}
                      <small class="text-secondary">{{ r.created_at|date:"d/m/Y" }}</small>
                    </div>

                    <div class="d-flex flex-column gap-1 align-items-end">
                      <form method="post"
                            action="{% url 'dashboard:referral_delete' r.id %}"
                            onsubmit="return confirm('Supprimer ce parrainage ?');">
                        {% csrf_token %}
                        <input type="hidden" name="back_client" value="{{ client.id }}">
                        <button class="btn btn-sm btn-outline-danger" type="submit">Supprimer</button>
                      </form>
                    </div>
                  </div>
                {% endfor %}
              </div>

              {% if history_page.paginator.num_pages > 1 %}
                <div class="card-footer bg-transparent d-flex justify-content-end gap-2">
                  {% if history_page.has_previous %}
                    <a class="btn btn-sm btn-outline-secondary"
                       href="?h={{ history_page.previous_page_number }}&ok={{ page_ok.number }}&pending={{ page_pending.number }}&unused={{ page_unused.number }}">
                      Préc.
                    </a>
                  {% endif %}
                  <span class="small align-self-center">
                    Page {{ history_page.number }}/{{ history_page.paginator.num_pages }}
                  </span>
                  {% if history_page.has_next %}
                    <a class="btn btn-sm btn-outline-secondary"
                       href="?h={{ history_page.next_page_number }}&ok={{ page_ok.number }}&pending={{ page_pending.number }}&unused={{ page_unused.number }}">
                      Suiv.
                    </a>
                  {% endif %}
                </div>
              {% endif %}

            {% else %}
              <div class="p-3 text-secondary">Aucun parrainage.</div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>

  {# --------- COLONNE DROITE --------- #}
  <div class="col-lg-8">

    {# 1) Cadeaux distribués (SENT) #}
    <div class="card shadow-sm tall-card mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Cadeaux distribués <span class="badge rounded-pill text-bg-success">{{ kpi_obtenus }}</span></span>
      </div>
      <div class="card-body">
        {% if page_ok and page_ok.object_list %}
          <div class="list-group list-group-flush">
            {% for rw in page_ok.object_list %}
              <div class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <div class="fw-semibold">{{ rw.label }}</div>
                  <small class="text-secondary">Obtenu le {{ rw.created_at|date:"d/m/Y" }}</small>
                </div>
                <span class="badge text-bg-success">OK</span>
              </div>
            {% endfor %}
          </div>
        {% else %}
          <div class="text-secondary">Aucun cadeau obtenu.</div>
        {% endif %}
      </div>
      {% if page_ok and page_ok.paginator.num_pages > 1 %}
        <div class="card-footer bg-transparent d-flex justify-content-end gap-2">
          {% if page_ok.has_previous %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?ok={{ page_ok.previous_page_number }}&pending={{ page_pending.number }}&unused={{ page_unused.number }}&h={{ history_page.number }}">
              Préc.
            </a>
          {% endif %}
          <span class="small align-self-center">Page {{ page_ok.number }}/{{ page_ok.paginator.num_pages }}</span>
          {% if page_ok.has_next %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?ok={{ page_ok.next_page_number }}&pending={{ page_pending.number }}&unused={{ page_unused.number }}&h={{ history_page.number }}">
              Suiv.
            </a>
          {% endif %}
        </div>
      {% endif %}
    </div>

    {# 2) Cadeaux en attente (PENDING) #}
    <div class="card shadow-sm tall-card mb-3">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Cadeaux en attente <span class="badge rounded-pill text-bg-warning">{{ kpi_attente }}</span></span>
      </div>

      <div class="card-body">
        {% if page_pending and page_pending.object_list %}
          <div class="list-group list-group-flush">
            {% for rw in page_pending.object_list %}
              {% abs_uri rw.claim_path as claim_abs %}
              <div class="list-group-item d-flex justify-content-between align-items-center">
                <div class="me-3">
                  <div class="fw-semibold">{{ rw.label }}</div>
                  <small class="text-secondary">Créée le {{ rw.created_at|date:"d/m/Y" }}</small>

                  {% if claim_abs %}
                    <div class="small mt-1 text-break">
                      Lien : <a href="{{ claim_abs }}">{{ claim_abs }}</a>
                    </div>
                    <div class="small text-secondary mt-1">
                      {{ rw.validity_sentence }}
                    </div>
                  {% else %}
                    <div class="small mt-1 text-warning">
                      Aucun lien encore généré pour cette récompense.
                    </div>
                  {% endif %}
                </div>

                <div class="d-flex flex-column gap-1">
                  <form method="post" action="{% url 'rewards:distribute' rw.id %}">
                    {% csrf_token %}
                    <input type="hidden" name="back_client" value="{{ client.id }}">
                    <button class="btn btn-sm btn-success" type="submit">Distribuer</button>
                  </form>

                  {% if client.email and claim_abs %}
                    <a class="btn btn-sm btn-outline-secondary"
                       href="mailto:{{ client.email }}?subject={{ 'Votre récompense'|urlencode }}&body={{ claim_abs|urlencode }}">
                      Envoyer par e-mail
                    </a>
                  {% endif %}

                  {# >>> Bouton WhatsApp ajouté, on ne retire rien d’autre <<< #}
                  {% if client.phone and claim_abs %}
                  <form method="post" action="{% url 'rewards:reward_send_sms' pk=rw.id %}">
                      {% csrf_token %}
                      <input type="hidden" name="back_client" value="{{ client.id }}">
                      <button class="btn btn-sm btn-success" type="submit">
                        Envoyer par SMS
                      </button>
                    </form>
                  {% endif %}

                  {% if claim_abs %}
                    <button class="btn btn-sm btn-outline-dark" type="button"
                            onclick="navigator.clipboard.writeText('{{ claim_abs|escapejs }}')">
                      Copier le lien
                    </button>
                  {% endif %}
                </div>
              </div>
            {% endfor %}
          </div>
        {% else %}
          <div class="text-secondary">Aucun cadeau en attente.</div>
        {% endif %}
      </div>

      {% if page_pending and page_pending.paginator.num_pages > 1 %}
        <div class="card-footer bg-transparent d-flex justify-content-end gap-2">
          {% if page_pending.has_previous %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?pending={{ page_pending.previous_page_number }}&ok={{ page_ok.number }}&unused={{ page_unused.number }}&h={{ history_page.number }}">
              Préc.
            </a>
          {% endif %}
          <span class="small align-self-center">Page {{ page_pending.number }}/{{ page_pending.paginator.num_pages }}</span>
          {% if page_pending.has_next %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?pending={{ page_pending.next_page_number }}&ok={{ page_ok.number }}&unused={{ page_unused.number }}&h={{ history_page.number }}">
              Suiv.
            </a>
          {% endif %}
        </div>
      {% endif %}
    </div>

    {# 3) Cadeaux non utilisés (DISABLED) #}
    <div class="card shadow-sm tall-card">
      <div class="card-header d-flex justify-content-between align-items-center">
        <span>Cadeaux non utilisés <span class="badge rounded-pill text-bg-secondary">{{ kpi_nonutils }}</span></span>
        <small class="text-secondary">Distribués mais non consommés</small>
      </div>

      <div class="card-body">
        {% if page_unused and page_unused.object_list %}
          <div class="list-group list-group-flush">
            {% for rw in page_unused.object_list %}
              <div class="list-group-item d-flex justify-content-between align-items-center">
                <div>
                  <div class="fw-semibold">{{ rw.label }}</div>
                  <small class="text-secondary">Distribué le {{ rw.created_at|date:"d/m/Y" }}</small>
                </div>
                <span class="badge text-bg-warning">En cours</span>
              </div>
            {% endfor %}
          </div>
        {% else %}
          <div class="text-secondary">Aucun cadeau non utilisé.</div>
        {% endif %}
      </div>

      {% if page_unused and page_unused.paginator.num_pages > 1 %}
        <div class="card-footer bg-transparent d-flex justify-content-end gap-2">
          {% if page_unused.has_previous %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?unused={{ page_unused.previous_page_number }}&ok={{ page_ok.number }}&pending={{ page_pending.number }}&h={{ history_page.number }}">
              Préc.
            </a>
          {% endif %}
          <span class="small align-self-center">Page {{ page_unused.number }}/{{ page_unused.paginator.num_pages }}</span>
          {% if page_unused.has_next %}
            <a class="btn btn-sm btn-outline-secondary"
               href="?unused={{ page_unused.next_page_number }}&ok={{ page_ok.number }}&pending={{ page_pending.number }}&h={{ history_page.number }}">
              Suiv.
            </a>
          {% endif %}
        </div>
      {% endif %}
    </div>

{% endblock %}
===== ./templates/dashboard/referral_form.html =====
{% extends "base_dashboard.html" %}
{% load widget_tweaks %}

{% block title %}Créer un parrainage{% endblock %}
{% block body_data_page %}referral-create{% endblock %}

{% block content %}
<div class="row justify-content-center">
  <div class="col-12 col-lg-10 col-xl-8">

    <div class="d-flex align-items-center justify-content-between mb-3">
      <div>
        <h1 class="h4 section-title mb-1">Créer un parrainage</h1>
        <div class="text-secondary">
          1) Recherchez le <strong>parrain</strong> • 2) Saisissez la <strong>fiche du filleul</strong> • 3) Enregistrez.
        </div>
      </div>
      <div>
        <a href="{% url 'dashboard:clients_list' %}" class="btn btn-outline-secondary btn-sm">← Retour</a>
      </div>
    </div>

    <div class="card shadow-sm">
      <div class="card-header bg-white py-3">
        <div class="d-flex align-items-center gap-2">
          <span class="badge text-bg-info">Parrainage</span>
          <strong>Parrain + Filleul</strong>
        </div>
      </div>

      <div class="card-body">
        <form method="post" novalidate>
          {% csrf_token %}

          {% if referrer_error %}
            <div class="alert alert-danger" role="alert">{{ referrer_error }}</div>
          {% endif %}
          {% if ref_form.non_field_errors %}
            <div class="alert alert-danger" role="alert">{{ ref_form.non_field_errors|striptags }}</div>
          {% endif %}

          <div class="row g-3">

            <!-- 🔎 Barre de recherche PARRAIN -->
            <div class="col-12">
              <label class="form-label">Parrain (recherche)</label>

              <div class="position-relative" id="referrer-search-wrap">
                <input
                  type="text"
                  id="referrer-search"
                  class="form-control"
                  placeholder="Tapez un nom, prénom ou email…"
                  autocomplete="off"
                  aria-describedby="referrerHelp"
                />
                <div id="referrer-results" class="list-group mt-1" style="position:absolute; z-index: 10; width:100%; display:none;"></div>
              </div>
              <div id="referrerHelp" class="form-text">Sélectionnez un parrain dans la liste.</div>

              <!-- Champ caché réel (ID du parrain) -->
              <input type="hidden" name="referrer" id="id_referrer" value="{{ request.POST.referrer|default:'' }}"/>

              <noscript>
                <div class="alert alert-warning mt-2">Activez JavaScript pour rechercher un parrain.</div>
              </noscript>
            </div>

            <!-- 🧒 FICHE FILLEUL (désactivée tant que pas de parrain) -->
            <div class="col-12">
              <div class="border rounded p-3">
                <div class="d-flex align-items-center justify-content-between mb-2">
                  <strong>Filleul — Informations</strong>
                  <span class="text-secondary small">Il sera créé dans la même entreprise que le parrain.</span>
                </div>

                <!-- ✅ fieldset désactivé par défaut ; on l’active en JS quand un parrain est choisi -->
                <fieldset id="referee-fieldset" disabled>
                  <div class="row g-3">
                    <div class="col-12 col-md-6">
                      <label class="form-label">Nom</label>
                      {% render_field ref_form.last_name class+="form-control" placeholder="Nom" %}
                      {% if ref_form.last_name.errors %}<div class="invalid-feedback d-block">{{ ref_form.last_name.errors|striptags }}</div>{% endif %}
                    </div>
                    <div class="col-12 col-md-6">
                      <label class="form-label">Prénom</label>
                      {% render_field ref_form.first_name class+="form-control" placeholder="Prénom" %}
                      {% if ref_form.first_name.errors %}<div class="invalid-feedback d-block">{{ ref_form.first_name.errors|striptags }}</div>{% endif %}
                    </div>
                    <div class="col-12 col-md-6">
                      <label class="form-label">Email</label>
                      {% render_field ref_form.email class+="form-control" placeholder="email@exemple.com" %}
                      {% if ref_form.email.errors %}<div class="invalid-feedback d-block">{{ ref_form.email.errors|striptags }}</div>{% endif %}
                      <div class="form-text">S’il existe déjà un client avec cet email dans l’entreprise, il sera réutilisé.</div>
                    </div>
                    <div class="col-12 col-md-6">
                      <label class="form-label">Téléphone</label>
                      {% render_field ref_form.phone class+="form-control" placeholder="06 00 00 00 00" %}
                      {% if ref_form.phone.errors %}<div class="invalid-feedback d-block">{{ ref_form.phone.errors|striptags }}</div>{% endif %}
                    </div>
                  </div>
                </fieldset>
              </div>
            </div>

          </div>

          <hr class="my-4">

          <div class="d-flex gap-2">
            <button class="btn btn-primary" id="submit-referral" type="submit" disabled>Créer le parrainage</button>
            <a class="btn btn-outline-secondary" href="{% url 'dashboard:clients_list' %}">Annuler</a>
          </div>
        </form>
      </div>
    </div>

    {% if company %}
      <div class="text-muted small mt-3">Entreprise ciblée : <strong>{{ company }}</strong></div>
    {% endif %}
  </div>
</div>

<!-- JS d'autocomplétion + verrouillage du bloc FILLEUL -->
<script>
(function() {
  const input = document.getElementById('referrer-search');
  const hidden = document.getElementById('id_referrer');
  const results = document.getElementById('referrer-results');
  const wrap = document.getElementById('referrer-search-wrap');
  const endpoint = "{% url 'dashboard:referrer_lookup' %}";
  const companyId = "{{ company.id|default_if_none:'' }}";
  const fieldset = document.getElementById('referee-fieldset');
  const submitBtn = document.getElementById('submit-referral');

  let lastController = null;
  let debounceTimer = null;

  function clearResults() {
    results.innerHTML = "";
    results.style.display = "none";
  }

  function setRefereeEnabled(on) {
    // Toggle fieldset + bouton submit
    if (on) {
      fieldset.removeAttribute('disabled');
      submitBtn.removeAttribute('disabled');
    } else {
      fieldset.setAttribute('disabled', '');
      submitBtn.setAttribute('disabled', '');
    }
  }

  function showResults(items) {
    results.innerHTML = "";
    items.forEach(item => {
      const a = document.createElement('a');
      a.href = '#';
      a.className = 'list-group-item list-group-item-action';
      a.textContent = item.label;
      a.dataset.id = item.id;
      a.addEventListener('click', (e) => {
        e.preventDefault();
        hidden.value = item.id;          // ✅ parrain fixé
        input.value = item.label;
        setRefereeEnabled(true);         // ✅ déverrouille le bloc Filleul
        clearResults();
      });
      results.appendChild(a);
    });
    results.style.display = items.length ? "block" : "none";
  }

  function searchNow(q) {
    if (lastController) lastController.abort();
    lastController = new AbortController();

    const url = new URL(endpoint, window.location.origin);
    if (q) url.searchParams.set('q', q);
    if (companyId) url.searchParams.set('company_id', companyId);

    fetch(url, {signal: lastController.signal})
      .then(r => r.ok ? r.json() : Promise.reject())
      .then(j => { if (j && j.ok) showResults(j.results || []); })
      .catch(()=>{});
  }

  // Quand on retape dans la barre → on “perd” le parrain choisi
  input.addEventListener('input', () => {
    hidden.value = "";                // ❌ plus de parrain sélectionné
    setRefereeEnabled(false);         // 🔒 rebloque le formulaire filleul
    const q = input.value.trim();
    clearTimeout(debounceTimer);
    debounceTimer = setTimeout(() => {
      if (q.length < 2) { clearResults(); return; }
      searchNow(q);
    }, 250);
  });

  document.addEventListener('click', (e) => {
    if (!wrap.contains(e.target)) clearResults();
  });

  // ⏪ Rechargement après erreurs serveur : si un parrain était déjà choisi, on réactive
  setRefereeEnabled(Boolean(hidden.value));
})();
</script>
{% endblock %}
===== ./templates/dashboard/superadmin_home.html =====
{# templates/dashboard/superadmin_home.html #}
{% extends "base_dashboard.html" %}
{% block title %}Tableau de bord (Superadmin) • ParrainApp{% endblock %}
{% block body_data_page %}dashboard{% endblock %}
{% block nav_dashboard_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Tableau de bord — Superadmin</h1>
  <div class="text-secondary">Vue d’ensemble de la plateforme (toutes entreprises).</div>
</header>

{# ===== Cartes KPI globales ===== #}
<div class="row g-3 mb-3">
  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Parrainages (mois)</div>
          <div class="stat-num">{{ kpi.referrals_month|default:0 }}</div>
        </div>
        <span class="badge badge-soft">
          {% if kpi.referrals_delta_pct > 0 %}+{% endif %}{{ kpi.referrals_delta_pct|default:0 }}% vs. N-1
        </span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Cadeaux distribués</div>
          <div class="stat-num">{{ kpi.rewards_sent|default:0 }}</div>
        </div>
        <span class="badge text-bg-success">OK</span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Cadeaux en attente</div>
          <div class="stat-num">{{ kpi.rewards_pending|default:0 }}</div>
        </div>
        <span class="badge text-bg-warning">Action</span>
      </div>
    </div></div>
  </div>

  <div class="col-12 col-md-6 col-xl-3">
    <div class="card h-100 shadow-sm"><div class="card-body">
      <div class="d-flex justify-content-between">
        <div>
          <div class="text-secondary small">Base clients</div>
          <div class="stat-num">{{ kpi.clients|default:0 }}</div>
        </div>
        <span class="badge text-bg-secondary">Actifs</span>
      </div>
    </div></div>
  </div>
</div>

{# ===== Raccourcis + Activité récente ===== #}
<div class="row g-3">
  <div class="col-lg-6">
    <div class="card shadow-sm h-100">
      <div class="card-header d-flex justify-content-between align-items-center">
        <div class="fw-semibold">Raccourcis</div>
        <small class="text-secondary">Modules</small>
      </div>
      <div class="card-body">
        <div class="row g-2">
          <div class="col-6 d-grid">
            <a class="btn btn-outline-primary" href="{% url 'dashboard:referrer_create' %}">Inscrire un parrain</a>
          </div>
          <div class="col-6 d-grid">
            <a class="btn btn-outline-primary" href="{% url 'dashboard:referral_create' %}">Enregistrer un parrainé</a>
          </div>
          <div class="col-6 d-grid">
            <a class="btn btn-outline-primary" href="{% url 'rewards:list' %}">Gérer les récompenses</a>
          </div>
          <div class="col-6 d-grid">
            <a class="btn btn-outline-primary" href="{% url 'rewards:stats' %}">Voir les statistiques</a>
          </div>
        </div>
      </div>
    </div>
  </div>

  <div class="col-lg-6">
    <div class="card shadow-sm h-100">
      <div class="card-header">Activité récente</div>
      <div class="card-body">
        <ul class="list-group list-group-flush">
          {% if events %}
            {% for ev in events %}
              <li class="list-group-item d-flex justify-content-between align-items-start">
                <div class="ms-2 me-auto">
                  <div class="fw-semibold">{{ ev.icon }} {{ ev.title|default:"" }}</div>
                  {{ ev.text|default:"" }}
                </div>
                {% if ev.badge %}<span class="badge text-bg-secondary rounded-pill">{{ ev.badge }}</span>{% endif %}
              </li>
            {% endfor %}
          {% else %}
            <li class="list-group-item text-secondary">Aucune activité récente.</li>
          {% endif %}
        </ul>
      </div>
    </div>
  </div>
</div>

{# ===== Vue par entreprise (tableau) ===== #}
<div class="card shadow-sm mt-4">
  <div class="card-header d-flex justify-content-between align-items-center">
    <div class="fw-semibold">Vue par entreprise</div>
    <small class="text-secondary">Parrainages du mois, cadeaux et base clients</small>
  </div>
  <div class="card-body p-0">
    <div class="table-responsive">
      <table class="table align-middle mb-0">
        <thead class="table-light">
          <tr>
            <th>Entreprise</th>
            <th class="text-end">Parrainages (mois)</th>
            <th class="text-end">Cadeaux distribués</th>
            <th class="text-end">Cadeaux en attente</th>
            <th class="text-end">Base clients</th>
            <th class="text-end">Actions</th>
          </tr>
        </thead>
        <tbody>
          {% for r in rows %}
            <tr>
              <td class="fw-semibold">{{ r.company.name }}</td>
              <td class="text-end">{{ r.referrals_month }}</td>
              <td class="text-end"><span class="badge text-bg-success">{{ r.rewards_sent }}</span></td>
              <td class="text-end"><span class="badge text-bg-warning">{{ r.rewards_pending }}</span></td>
              <td class="text-end">{{ r.clients }}</td>
              <td class="text-end">
                <div class="d-inline-flex gap-2">
                  <a class="btn btn-sm btn-outline-primary"
                     href="{% url 'dashboard:company_home' %}?company={{ r.company.id }}">
                    Ouvrir le tableau
                  </a>
                  <a class="btn btn-sm btn-outline-secondary"
                     href="{% url 'rewards:history_company' %}?company={{ r.company.id }}">
                    Récompenses
                  </a>
                </div>
              </td>
            </tr>
          {% empty %}
            <tr>
              <td colspan="6" class="text-secondary p-3">Aucune entreprise.</td>
            </tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/dashboard/reward_form.html =====
{% extends "base_dashboard.html" %}
{% block title %}Créer une récompense — {{ client.last_name }} {{ client.first_name }}{% endblock %}
{% block body_data_page %}clients{% endblock %}
{% block nav_clients_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <div class="d-flex align-items-center justify-content-between">
    <div>
      <h1 class="h4 section-title mb-1">Créer une récompense</h1>
      <div class="text-secondary">
        Client : <strong>{{ client.last_name }} {{ client.first_name }}</strong> • Entreprise : {{ client.company.name }}
      </div>
    </div>
    <div class="d-none d-md-block">
      <a class="btn btn-outline-secondary" href="{% url 'dashboard:client_detail' client.id %}">← Retour à la fiche</a>
    </div>
  </div>
</header>

<div class="row g-3">
  <!-- Formulaire -->
  <div class="col-lg-7">
    <div class="card shadow-sm">
      <div class="card-header d-flex justify-content-between align-items-center">
        <div class="fw-semibold">Nouvelle récompense</div>
        <small class="text-secondary">Renseigne l’intitulé, le canal, etc.</small>
      </div>
      <div class="card-body">
        {% if form.non_field_errors %}
          <div class="alert alert-danger">
            {% for e in form.non_field_errors %}{{ e }}<br>{% endfor %}
          </div>
        {% endif %}

        <form method="post" novalidate>
          {% csrf_token %}

          <div class="mb-3">
            {% with field=form.label %}
              <label class="form-label" for="{{ field.id_for_label }}">{{ field.label }}</label>
              {{ field }}
              {% for e in field.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            {% endwith %}
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                {% with field=form.channel %}
                  <label class="form-label" for="{{ field.id_for_label }}">{{ field.label }}</label>
                  {{ field }}
                  <div class="form-text">Ex : Mail, SMS, …</div>
                  {% for e in field.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
                {% endwith %}
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                {% with field=form.code %}
                  <label class="form-label" for="{{ field.id_for_label }}">{{ field.label }}</label>
                  {{ field }}
                  <div class="form-text">Ex : AB-123-456</div>
                  {% for e in field.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
                {% endwith %}
              </div>
            </div>
          </div>

          <div class="mb-4">
            {% with field=form.state %}
              <label class="form-label" for="{{ field.id_for_label }}">{{ field.label }}</label>
              {{ field }}
              {% for e in field.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            {% endwith %}
          </div>

          <div class="d-flex gap-2">
            <button class="btn btn-primary" type="submit">Enregistrer</button>
            <a class="btn btn-outline-secondary" href="{% url 'dashboard:client_detail' client.id %}">Annuler</a>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Panneau récap client -->
  <div class="col-lg-5">
    <div class="card shadow-sm h-100">
      <div class="card-header">Client</div>
      <div class="card-body">
        <div class="vstack small gap-1 mb-3">
          <div><span class="text-secondary">Nom :</span> {{ client.last_name|default:"—" }}</div>
          <div><span class="text-secondary">Prénom :</span> {{ client.first_name|default:"—" }}</div>
          <div><span class="text-secondary">Téléphone :</span> {{ client.phone|default:"—" }}</div>
          <div><span class="text-secondary">Email :</span> {{ client.email|default:"—" }}</div>
          <div><span class="text-secondary">Entreprise :</span> {{ client.company.name }}</div>
        </div>

        <div class="alert alert-info mb-0">
          La récompense sera rattachée à <strong>{{ client.last_name }} {{ client.first_name }}</strong> et à
          <strong>{{ client.company.name }}</strong>.
        </div>
      </div>
      <div class="card-footer bg-transparent">
        <a class="btn btn-sm btn-outline-primary" href="{% url 'dashboard:client_detail' client.id %}">Voir la fiche client</a>
      </div>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/dashboard/clients_list.html =====
{# dashboard/clients_list.html #}
{% extends "base_dashboard.html" %}
{% block title %}Clients{% endblock %}
{% block body_data_page %}clients{% endblock %}
{% block nav_clients_active %}active{% endblock %}

{% block content %}
<div class="d-flex align-items-center justify-content-between mb-3">
  <h1 class="h4 section-title mb-0">Parrains</h1>
  <div></div> {# espace à droite pour conserver la hauteur #}
</div>

{# Boutons centrés #}
<div class="mb-4 text-center">
  <div class="d-grid gap-2 d-md-inline-flex justify-content-center">
    <a class="btn btn-primary" href="{% url 'dashboard:referrer_create' %}">Créer un parrain</a>
    <a class="btn btn-outline-primary" href="{% url 'dashboard:referral_create' %}">Créer un parrainage</a>
    <a class="btn btn-outline-warning" href="{% url 'rewards:history_company' %}?state=PENDING">
    récompenses (en attente)
    </a>
  </div>
</div>

  {# tableau des parrains #}
  {% include "partials/_clients_table.html" %}
{% endblock %}
===== ./templates/dashboard/client_form.html =====
{% extends "base_dashboard.html" %}
{% block title %}Créer / Modifier un client{% endblock %}
{% block body_data_page %}clients{% endblock %}
{% block nav_clients_active %}active{% endblock %}

{% block content %}
<header class="d-flex align-items-center justify-content-between mb-4">
  <div>
    <h1 class="h4 section-title mb-1">Client</h1>
    <div class="text-secondary">Créer ou modifier un client (parrain ou simple client).</div>
  </div>
  <a class="btn btn-outline-secondary" href="{% url 'dashboard:clients_list' %}">← Retour</a>
</header>

<div class="row g-3">
  <div class="col-xl-8">
    <div class="card shadow-sm">
      <div class="card-header d-flex align-items-center justify-content-between">
        <div class="fw-semibold">Informations</div>
        <small class="text-secondary">Champs requis *</small>
      </div>

      <div class="card-body">
        {% if form.non_field_errors %}
          <div class="alert alert-danger">
            {% for e in form.non_field_errors %}{{ e }}<br>{% endfor %}
          </div>
        {% endif %}

        <form method="post" novalidate>
          {% csrf_token %}

          {# Superadmin voit le champ entreprise, Admin/Opérateur non #}
          {% if form.company %}
          <div class="mb-3">
            <label class="form-label" for="{{ form.company.id_for_label }}">Entreprise *</label>
            {{ form.company }}
            {% for e in form.company.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
          </div>
          {% endif %}

          <div class="row g-3">
            <div class="col-md-6">
              <label class="form-label" for="{{ form.last_name.id_for_label }}">Nom *</label>
              {{ form.last_name }}
              {% for e in form.last_name.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            </div>
            <div class="col-md-6">
              <label class="form-label" for="{{ form.first_name.id_for_label }}">Prénom *</label>
              {{ form.first_name }}
              {% for e in form.first_name.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            </div>
          </div>

          <div class="row g-3 mt-1">
            <div class="col-md-6">
              <label class="form-label" for="{{ form.email.id_for_label }}">Email</label>
              {{ form.email }}
              {% for e in form.email.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            </div>
            <div class="col-md-6">
              <label class="form-label" for="{{ form.phone.id_for_label }}">Téléphone</label>
              {{ form.phone }}
              {% for e in form.phone.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
            </div>
          </div>

          <hr class="my-4">

          <div class="form-check mb-3">
            {{ form.is_referrer }}
            <label class="form-check-label" for="{{ form.is_referrer.id_for_label }}">Marquer comme <strong>Parrain</strong></label>
          </div>

          <div class="d-flex gap-2">
            <button class="btn btn-primary" type="submit">Enregistrer</button>
            <a class="btn btn-outline-secondary" href="{% url 'dashboard:clients_list' %}">Annuler</a>
          </div>
        </form>
      </div>
    </div>
  </div>

  <div class="col-xl-4">
    <div class="card shadow-sm h-100">
      <div class="card-header">Aide</div>
      <div class="card-body small text-secondary">
        <p>Un <strong>Parrain</strong> peut parrainer des filleuls et recevoir des récompenses.</p>
        <p>Les Admins/Opérateurs ne voient que leur entreprise. Le Superadmin peut choisir l’entreprise.</p>
      </div>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/dashboard/confirm_delete.html =====
{# dashboard/templates/dashboard/confirm_delete.html #}
{% extends "base_dashboard.html" %}
{% block title %}{{ title }}{% endblock %}
{% block body_data_page %}clients{% endblock %}

{% block content %}
<div class="row justify-content-center">
  <div class="col-lg-6">
    <div class="card shadow-sm">
      <div class="card-body">
        <h1 class="h5 mb-3">{{ title }}</h1>
        <p class="text-secondary mb-4">{{ message }}</p>

        <form method="post" action="{% url post_action post_kwargs.pk %}">
          {% csrf_token %}
          {# On renvoie l’info de la fiche d’où l’on vient si présent #}
          {% if back_client_id %}
            <input type="hidden" name="back_client" value="{{ back_client_id }}">
          {% endif %}

          <div class="d-flex gap-2">
            <a class="btn btn-outline-secondary"
               href="{% url back_url_name **back_url_kwargs %}">
              Annuler
            </a>
            <button class="btn btn-danger" type="submit">Supprimer</button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/dashboard/referrer_form.html =====
{% extends "base_dashboard.html" %}
{% load widget_tweaks %}

{% block title %}Créer un filleul{% endblock %}
{% block body_data_page %}referee-form{% endblock %}

{% block content %}
<div class="row justify-content-center">
  <div class="col-12 col-lg-10 col-xl-8">

    <div class="d-flex align-items-center justify-content-between mb-3">
      <div>
        <h1 class="h4 section-title mb-1">Inscrire un parrain</h1>
        <div class="text-secondary">Ajouter un client non parrain.</div>
      </div>
      <div>
        <a href="{% url 'dashboard:clients_list' %}" class="btn btn-outline-secondary btn-sm">← Retour</a>
      </div>
    </div>

    <div class="card shadow-sm">
      <div class="card-header bg-white py-3">
        <div class="d-flex align-items-center gap-2">
          <span class="badge text-bg-secondary">Filleul</span>
          <strong>Informations du client</strong>
        </div>
      </div>

      <div class="card-body">
        <form method="post" novalidate>
          {% csrf_token %}

          {% if form.non_field_errors %}
            <div class="alert alert-danger" role="alert">
              {{ form.non_field_errors|striptags }}
            </div>
          {% endif %}

          <div class="row g-3">
            <div class="col-12 col-md-6">
              <label class="form-label">Entreprise</label>
              {% render_field form.company class+="form-select" %}
              {% if form.company.errors %}
                <div class="invalid-feedback d-block">{{ form.company.errors|striptags }}</div>
              {% else %}
                <div class="form-text">Visible uniquement si vous êtes Superadmin.</div>
              {% endif %}
            </div>

            <div class="col-12 col-md-6">
              <label class="form-label">Email</label>
              <div class="input-group">
                <span class="input-group-text">@</span>
                {% render_field form.email class+="form-control" placeholder="email@exemple.com" %}
              </div>
              {% if form.email.errors %}
                <div class="invalid-feedback d-block">{{ form.email.errors|striptags }}</div>
              {% endif %}
            </div>

            <div class="col-12 col-md-6">
              <label class="form-label">Nom</label>
              {% render_field form.last_name class+="form-control" placeholder="Dupont" %}
              {% if form.last_name.errors %}
                <div class="invalid-feedback d-block">{{ form.last_name.errors|striptags }}</div>
              {% endif %}
            </div>

            <div class="col-12 col-md-6">
              <label class="form-label">Prénom</label>
              {% render_field form.first_name class+="form-control" placeholder="Marie" %}
              {% if form.first_name.errors %}
                <div class="invalid-feedback d-block">{{ form.first_name.errors|striptags }}</div>
              {% endif %}
            </div>

            <div class="col-12 col-md-6">
              <label class="form-label">Téléphone</label>
              <div class="input-group">
                <span class="input-group-text">📞</span>
                {% render_field form.phone class+="form-control" placeholder="06 00 00 00 00" %}
              </div>
              {% if form.phone.errors %}
                <div class="invalid-feedback d-block">{{ form.phone.errors|striptags }}</div>
              {% endif %}
            </div>
          </div>

          <hr class="my-4">

          <div class="d-flex gap-2">
            <button class="btn btn-primary" type="submit">Enregistrer</button>
            <a class="btn btn-outline-secondary" href="{% url 'dashboard:clients_list' %}">Annuler</a>
          </div>
        </form>
      </div>
    </div>

  </div>
</div>
{% endblock %}
===== ./templates/public/company_presentation.html =====
{% extends "base_public.html" %}
{% load static %}
{% block title %}{{ company.name }} • Parrainage{% endblock %}

{% block content %}
<main class="min-h-screen bg-white text-black" data-primary="{{ company.primary_color }}" data-secondary="{{ company.secondary_color }}">

  <style>
    :root{
      --c1: {{ company.primary_color }};
      --c1-weak: {{ company.primary_color }}33;
      --c1-weak2: {{ company.primary_color }}22;
    }
    /* Encadrés / champs */
    .frame-double{ border:1px solid var(--c1)!important; box-shadow:0 0 0 4px var(--c1-weak2); border-radius:.75rem; }
    .step-card{ border:1px solid var(--c1-weak)!important; border-radius:.75rem; }
    .frame-single{ border:1px solid var(--c1)!important; border-radius:.75rem; }
    .frame-double .form-control{ border:1px solid var(--c1-weak); }
    .frame-double .form-control:focus{ border-color:var(--c1); box-shadow:0 0 0 .2rem var(--c1-weak2); outline:0; }

    /* Hauteurs identiques des 4 étapes */
    .equal-steps > [class*="col-"]{ display:flex; }
    .equal-steps .step-card{ display:flex; flex-direction:column; width:100%; height:100%; }
    .equal-steps .step-card h3{ margin-top:.25rem; }
    .equal-steps .step-card p{ margin-top:.5rem; margin-bottom:0; }

    /* Roue — slots & labels */
    #wheel .wheel-slot{
      position:absolute; left:50%; top:50%;
      transform-origin:center center;
      display:flex; align-items:center; justify-content:center;
      pointer-events:none;
    }
    /* Texte vertical (multi-lignes autorisées), jamais tronqué en "…" */
    #wheel .wheel-label{
      white-space:normal;
      word-break:break-word;
      overflow-wrap:anywhere;
      hyphens:auto;
      overflow:hidden;           /* on réduit la taille jusqu’à tout faire tenir */
      letter-spacing:.1px;
      line-height:1.05;
      font-weight:600;
      transform-origin:center center; /* on tournera −90° (radial) */
    }
    /* Séparations visuelles entre les 8 cases */
    #wheel .wheel-line{
      position:absolute; left:50%; top:50%;
      width:2px; height:100%;
      background:#ffffffcc;
      box-shadow:0 0 0 1px #00000010;
      transform-origin:50% calc(100% - 16px);
      pointer-events:none;
    }
  </style>

  <style>
    /* Chaque libellé est découpé par un triangle invisible (clip-path) */
    #wheel .wedge-clip{ position:absolute; inset:0; overflow:hidden; pointer-events:none; }
    #wheel .wheel-label{
      position:absolute; left:0; top:0; transform:translate(-50%,-50%);
      text-align:center; white-space:normal; word-break:break-word; overflow-wrap:anywhere;
      line-height:1.15; font-weight:700; pointer-events:none;
    }
  </style>

  <!-- Header -->
  <header class="w-full border-b bg-black text-white" role="banner" style="border-color: {{ company.primary_color }}">
    <div class="container py-3 d-flex align-items-center justify-content-between">
      <div class="d-flex align-items-center gap-2">
        {% if company.logo %}
          <img src="{{ company.logo.url }}" alt="{{ company.name }}" class="rounded-circle" style="width:24px;height:24px;object-fit:cover;">
        {% else %}
          <div class="rounded-circle" style="width:24px;height:24px;background: {{ company.primary_color }}"></div>
        {% endif %}
        <span class="fw-semibold">{{ company.name }}</span>
      </div>
      <span class="small opacity-75">Espace d'inscription des parrains</span>
    </div>
  </header>

  <!-- Hero -->
  <section class="container text-center py-4">
    <h1 class="fw-bold" style="font-size:clamp(1.8rem,2.5vw,2.25rem);line-height:1.2;">
      Parlez de {{ company.name }} à vos amis et recevez des cadeaux mystère
    </h1>
    <p class="mt-2 small opacity-75">Aucune appli à installer. 100% gratuit.</p>
    {% if company.slogan %}<p class="mt-1 text-muted">{{ company.slogan }}</p>{% endif %}
  </section>

  <!-- Comment ça marche -->
  <section class="container py-3" aria-labelledby="how-title">
    <div class="bg-white p-4 shadow-sm frame-double">
      <h2 id="how-title" class="h4 fw-semibold mb-3 text-center">Comment ça marche ?</h2>
      <div class="row g-3 equal-steps">
        <div class="col-12 col-md-6 col-lg-3">
          <div class="p-3 text-center bg-white step-card">
            <div class="mx-auto mb-2 d-flex align-items-center justify-content-center rounded-circle fw-bold" style="width:32px;height:32px;background:var(--c1-weak2);color:var(--c1);">1</div>
            <h3 class="fs-6 fw-semibold lh-sm">Inscris-toi comme parrain.</h3>
            <p class="small opacity-75 mt-1">Remplis le petit formulaire en bas.</p>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3">
          <div class="p-3 text-center bg-white step-card">
            <div class="mx-auto mb-2 d-flex align-items-center justify-content-center rounded-circle fw-bold" style="width:32px;height:32px;background:var(--c1-weak2);color:var(--c1);">2</div>
            <h3 class="fs-6 fw-semibold lh-sm">Parle de {{ company.name }} à tes amis.</h3>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3">
          <div class="p-3 text-center bg-white step-card">
            <div class="mx-auto mb-2 d-flex align-items-center justify-content-center rounded-circle fw-bold" style="width:32px;height:32px;background:var(--c1-weak2);color:var(--c1);">3</div>
            <h3 class="fs-6 fw-semibold lh-sm">Quand l’un de tes amis vient chez {{ company.name }} pour la première fois, il donne ton nom/prénom au moment de payer.</h3>
          </div>
        </div>
        <div class="col-12 col-md-6 col-lg-3">
          <div class="p-3 text-center bg-white step-card">
            <div class="mx-auto mb-2 d-flex align-items-center justify-content-center rounded-circle fw-bold" style="width:32px;height:32px;background:var(--c1-weak2);color:var(--c1);">4</div>
            <h3 class="fs-6 fw-semibold lh-sm">Et là, boom : récompense mystère pour vous deux 🎁✨</h3>
            <p class="small opacity-75 mt-1">Ton ami reçoit sa surprise tout de suite ; toi, tu découvres la tienne par SMS.</p>
          </div>
        </div>
      </div>
    </div>
  </section>

<!-- ======================= ROUE ======================= -->
<section class="container py-4" aria-labelledby="rewards-title">
  <h2 id="rewards-title" class="h5 fw-semibold text-center mb-2">Les récompenses mystère à gagner</h2>
  <p class="small opacity-75 text-center mb-3">Tes proches gagnent, toi aussi : double dose de bonheur ✨</p>

  <style>
    /* Tout reste strictement dans le disque => plus de “croix”/débordements */
    #wheel-disk, #wheel-labels, #wheel-lines { border-radius:50%; overflow:hidden; }

    /* Une “case” = un secteur annulaire qui clippe son contenu */
    #wheel .wedge { position:absolute; inset:0; pointer-events:none; }

    /* Slot qui porte le texte et se place au centre de la case */
    #wheel .wheel-slot{
      position:absolute; left:50%; top:50%;
      transform-origin:center center;
      display:flex; align-items:center; justify-content:center;
      pointer-events:none;
    }

    /* Texte multi-lignes (1 → 3 lignes max), priorité à 1 ligne */
    #wheel .wheel-label{
      white-space:normal;               /* plusieurs mots par ligne */
      word-break:normal;                /* ne coupe pas au milieu d’un mot */
      overflow-wrap:break-word;         /* coupe proprement si besoin */
      hyphens:none;                     /* pas de césure type “-” */
      text-align:center; line-height:1.12; letter-spacing:.1px;
      font-weight:700;
      transform-origin:center center;   /* on tournera le texte à -90° */
    }

    /* Traits de séparation (8 cases) */
    #wheel .wheel-line{
      position:absolute; left:50%; top:50%;
      width:1px; height:100%;
      background:#ffffffcc; box-shadow:0 0 0 1px #0000000f;
      transform-origin:50% 100%;
      pointer-events:none;
    }

    /* Chaque triangle qui clippe son contenu */
    #wheel .wedge-clip{ position:absolute; inset:0; pointer-events:none; }

    /* Le libellé est centré sur (left, top) via translate */
    #wheel .wheel-label{
      position:absolute;
      transform:translate(-50%,-50%);  /* centre le bloc sur ses coords */
      text-align:center;
      line-height:1.15;
      font-weight:700;
      white-space:normal;
      word-break:normal;
      overflow-wrap:break-word;
      hyphens:none;
      pointer-events:none;
  }
  </style>
  

  <div class="d-flex justify-content-center">
    <div id="wheel" class="position-relative" style="width:320px;height:340px;">
      <div class="position-absolute start-50 translate-middle-x" style="top:-4px;">
        <div style="width:0;height:0;border-left:8px solid transparent;border-right:8px solid transparent;border-bottom:8px solid #000;"></div>
      </div>

      <!-- Disque -->
      <div id="wheel-disk" class="position-absolute top-0 start-0 end-0 bottom-0 rounded-circle shadow border" style="top:16px;border-color: {{ company.primary_color }}"></div>

      <!-- Séparateurs -->
      <div id="wheel-lines"  class="position-absolute top-0 start-0 end-0 bottom-0" style="top:16px;"></div>

      <!-- Wedges + labels (clippés) -->
      <div id="wheel-labels" class="position-absolute top-0 start-0 end-0 bottom-0" style="top:16px;"></div>

      <!-- Moyeu -->
      <div class="position-absolute top-0 start-0 end-0 bottom-0 d-flex align-items-center justify-content-center" style="top:16px;">
        <div class="rounded-circle d-flex align-items-center justify-content-center border border-4 bg-black text-white shadow" style="width:80px;height:80px;border-color:#fff;">🎁</div>
      </div>
    </div>
  </div>

  {{ wheel_labels|json_script:"wheel-items" }}
</section>


  <!-- Formulaire -->
  <section class="container pb-5" aria-labelledby="form-title" style="max-width:720px;">
    <h2 id="form-title" class="h5 fw-semibold text-center mb-3" style="color: {{ company.primary_color }}">✍️ Inscris-toi comme parrain ici</h2>
    <div class="bg-white p-4 shadow-sm frame-double">
      {% if messages %}{% for m in messages %}<div class="alert {% if m.tags %}alert-{{ m.tags }}{% else %}alert-info{% endif %}">{{ m }}</div>{% endfor %}{% endif %}
      {% if form.non_field_errors %}<div class="alert alert-danger mb-3" role="alert">{{ form.non_field_errors }}</div>{% endif %}
      <form method="post" action="{% url 'public:referrer_register' company.slug %}" novalidate>
        {% csrf_token %}
        <div class="row g-3">
          <div class="col-md-6"><label class="form-label">Nom *</label>{{ form.last_name }}{% if form.last_name.errors %}<div class="text-danger small mt-1">{{ form.last_name.errors.0 }}</div>{% endif %}</div>
          <div class="col-md-6"><label class="form-label">Prénom *</label>{{ form.first_name }}{% if form.first_name.errors %}<div class="text-danger small mt-1">{{ form.first_name.errors.0 }}</div>{% endif %}</div>
          <div class="col-md-6"><label class="form-label">Téléphone *</label>{{ form.phone }}{% if form.phone.errors %}<div class="text-danger small mt-1">{{ form.phone.errors.0 }}</div>{% endif %}</div>
          <div class="col-md-6"><label class="form-label">Email (recommandé)</label>{{ form.email }}{% if form.email.errors %}<div class="text-danger small mt-1">{{ form.email.errors.0 }}</div>{% endif %}</div>
        </div>
        <div class="form-check mt-3">
          <input class="form-check-input" type="checkbox" id="agree" name="agree" checked>
          <label class="form-check-label" for="agree">J'accepte de recevoir un lien par SMS/email pour mes récompenses. <span class="text-muted"></span></label>
        </div>
        <button type="submit" class="btn w-100 mt-3" style="background: var(--c1); color:#fff;">✅ Je m'inscris comme parrain</button>
        <p class="text-center text-muted small mt-1">* Champs obligatoires</p>
      </form>
    </div>
  </section>

  <!-- FAQ -->
  <section class="container pb-5" aria-labelledby="faq-title">
    <h2 id="faq-title" class="h5 fw-semibold text-center mb-3">Questions fréquentes</h2>
    <div class="accordion frame-single" id="faq">
      <div class="accordion-item">
        <h2 class="accordion-header" id="heading1">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq1" aria-expanded="false" aria-controls="faq1">
            Est-ce compliqué ?
          </button>
        </h2>
        <div id="faq1" class="accordion-collapse collapse" aria-labelledby="heading1" data-bs-parent="#faq">
          <div class="accordion-body">Non. Remplis ce formulaire une seule fois. Ensuite, tes amis n'ont qu'à dire ton prénom lors de leur première commande.</div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header" id="heading2">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq2" aria-expanded="false" aria-controls="faq2">
            Comment je reçois mon cadeau ?
          </button>
        </h2>
        <div id="faq2" class="accordion-collapse collapse" aria-labelledby="heading2" data-bs-parent="#faq">
          <div class="accordion-body">Par SMS ou email, sous forme de lien. Aucune application à installer.</div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header" id="heading3">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq3" aria-expanded="false" aria-controls="faq3">
            Dois-je venir avec mon ami ?
          </button>
        </h2>
        <div id="faq3" class="accordion-collapse collapse" aria-labelledby="heading3" data-bs-parent="#faq">
          <div class="accordion-body">Non, il peut venir quand il veut. Il suffit qu'il mentionne ton prénom pour activer vos récompenses.</div>
        </div>
      </div>
      <div class="accordion-item">
        <h2 class="accordion-header" id="heading4">
          <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#faq4" aria-expanded="false" aria-controls="faq4">
            Combien d'amis puis-je parrainer ?
          </button>
        </h2>
        <div id="faq4" class="accordion-collapse collapse" aria-labelledby="heading4" data-bs-parent="#faq">
          <div class="accordion-body">Autant que tu veux ! Chaque première commande d'un ami déclenche une récompense.</div>
        </div>
      </div>
    </div>
  </section>

  <footer class="border-top bg-black text-white py-3" role="contentinfo" style="border-color: {{ company.primary_color }}">
    <div class="container text-center small opacity-75">Besoin d'aide ? Contactez l'accueil — on s'occupe de tout.</div>
  </footer>
</main>


<script>
(function(){
  const dataEl = document.getElementById("wheel-items");
  const fromCompany = dataEl ? JSON.parse(dataEl.textContent) : [];
  const fallback = ["Repas offert","-50%","-20%","Boisson offerte","Repas chaud offert","-10%","Dessert offert","Café offert"];
  const base = (fromCompany && fromCompany.length) ? fromCompany : fallback;

  // 8 cases
  const items = base.slice(0,8); while(items.length<8) items.push(...base); items.length = 8;

  const disk   = document.getElementById("wheel-disk");
  const labelsC= document.getElementById("wheel-labels");
  const linesC = document.getElementById("wheel-lines");
  if(!disk || !labelsC || !linesC) return;

  const N = items.length;
  const segment = 360 / N;
  const segRad  = (segment*Math.PI/180);

  /* Fond alterné rose/blanc */
  disk.style.backgroundImage =
    `conic-gradient(${items.map((_,i)=> (i%2===0?"rgba(252,231,243,1)":"rgba(255,255,255,1)") +
      " " + (i*segment) + "deg " + ((i+1)*segment) + "deg").join(", ")})`;

  /* Géo du disque (dans la boîte "inset:16px") */
  const W = disk.clientWidth, H = disk.clientHeight, cx = W/2, cy = H/2;
  const outerR   = W/2;
  const rimPad   = 0;                 // marge extérieure
  const baseR    = outerR - rimPad;   // rayon côté bord

  // ► marge interne SUPPRIMÉE / réduite
  const hubR     = 2;                 // rayon virtuel
  const innerPad = 22;                // avant 35 — on colle davantage au centre
  const apexR    = hubR + innerPad;

  // centre du label plus vers l’extérieur (plus de largeur de corde)
  const CENTER_BIAS = 0.60;                              // 68% de l’épaisseur
  const rLabel      = apexR + (baseR - apexR) * CENTER_BIAS;

  /* Utils */
  const rad = d => d*Math.PI/180;
  const xy  = (r,aDeg)=>({ x: cx + r*Math.sin(rad(aDeg)), y: cy - r*Math.cos(rad(aDeg)) });
  const chordAt = (r)=> 2*r*Math.sin(segRad/2);

  /* Séparateurs */
  linesC.innerHTML = "";
  for (let i=0;i<N;i++){
    const l = document.createElement("div");
    l.className = "wheel-line";
    l.style.transform = `rotate(${i*segment}deg)`;
    linesC.appendChild(l);
  }

  /* Fit texte dans un triangle (≤ 3 lignes) */
  function fitLabel(el, maxW, maxH, maxLines=3) {
    let fs = 15, minFS = 9, tries = 0;
    el.style.fontSize = fs + "px";
    el.style.width = Math.max(40,Math.floor(maxW)) + "px";
    el.style.maxHeight = Math.max(30,Math.floor(maxH)) + "px";

    while (tries++ < 24){
      const lineH = Math.round(fs*1.15);
      const lines = Math.max(1, Math.ceil(el.scrollHeight / lineH));
      if (el.scrollHeight <= maxH && lines <= maxLines) break;
      if (fs <= minFS) break;
      fs -= 1; el.style.fontSize = fs + "px";
    }
  }

  /* Triangles + labels (sans marge interne) */
  labelsC.innerHTML = "";
  const EDGE_MARGIN = 0;                                   // avant 18 — supprimé
  const tangentialW = Math.max(40, chordAt(rLabel) - 2*EDGE_MARGIN);
  const radialH     = (baseR - apexR);                     // avant -12 — supprimé

  items.forEach((text, i) => {
    const a0 = i*segment, a1 = (i+1)*segment, am = a0 + segment/2;

    const pBase0 = xy(baseR, a0);
    const pBase1 = xy(baseR, a1);
    const pApex  = xy(apexR, am);

    const wedge = document.createElement("div");
    wedge.className = "wedge-clip";
    wedge.style.clipPath = `polygon(${pBase0.x}px ${pBase0.y}px, ${pBase1.x}px ${pBase1.y}px, ${pApex.x}px ${pApex.y}px)`;

    const lab = document.createElement("div");
    lab.className = "wheel-label";
    lab.textContent = text || "";

    // pas de biais supplémentaire : on reste centré
    const pCenter = xy(rLabel, am);
    lab.style.left = pCenter.x + "px";
    lab.style.top  = pCenter.y + "px";

    fitLabel(lab, tangentialW, radialH, 3);

    wedge.appendChild(lab);
    labelsC.appendChild(wedge);
  });
})();
</script>

{% endblock %}===== ./templates/accounts/login.html =====
{% load static widget_tweaks %}
<!doctype html>
<html lang="fr">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Connexion • ParrainApp</title>
  <link rel="stylesheet" href="{% static 'bootstrap/css/bootstrap.min.css' %}">
  <link rel="stylesheet" href="{% static 'css/app.css' %}">
</head>
<body class="bg-light">
  <div class="container py-5">
    <div class="col-md-5 col-lg-4 mx-auto">
      <div class="text-center mb-4">
        <a class="navbar-brand d-inline-flex align-items-center gap-2 text-decoration-none" href="#">
          <span class="brand-dot"></span>
          <span class="fw-bold" style="color:var(--brand-ink)">ParrainApp</span>
        </a>
      </div>

      {% if form.errors %}
      <div class="alert alert-danger d-flex align-items-start gap-2">
        <div>⚠️</div>
        <div>
          <div class="fw-semibold mb-1">Impossible de vous connecter.</div>
          <ul class="mb-0 small">
            {% for field in form %}
              {% for error in field.errors %}
                <li><strong>{{ field.label }} :</strong> {{ error }}</li>
              {% endfor %}
            {% endfor %}
            {% for error in form.non_field_errors %}
              <li>{{ error }}</li>
            {% endfor %}
          </ul>
        </div>
      </div>
      {% endif %}

      <div class="card shadow-sm">
        <div class="card-body p-4">
          <h1 class="h5 mb-3">Connexion</h1>

          <form method="post" novalidate class="vstack gap-3">
            {% csrf_token %}

            <div>
              <label class="form-label" for="{{ form.username.id_for_label }}">Nom d’utilisateur</label>
              {% render_field form.username class+="form-control" placeholder="ex. johann" %}
            </div>

            <div>
              <label class="form-label" for="{{ form.password.id_for_label }}">Mot de passe</label>
              <div class="input-group">
                {% render_field form.password class+="form-control" autocomplete="current-password" %}
                <button type="button" class="btn btn-outline-secondary" id="togglePwd">Afficher</button>
              </div>
            </div>

            {% if form.remember %}
            <div class="form-check">
              {% render_field form.remember class+="form-check-input" %}
              <label class="form-check-label" for="{{ form.remember.id_for_label }}">Se souvenir de moi</label>
            </div>
            {% endif %}

            <button class="btn btn-primary w-100">Se connecter</button>
          </form>
        </div>
      </div>

      <p class="text-center text-secondary small mt-3 mb-0">
        Besoin d’aide ? Contactez l’administrateur de la plateforme.
      </p>
    </div>
  </div>

  <script src="{% static 'bootstrap/js/bootstrap.bundle.min.js' %}"></script>
  <script>
    (function(){
      const btn = document.getElementById('togglePwd');
      if(!btn) return;
      btn.addEventListener('click', function(){
        const input = document.getElementById('{{ form.password.id_for_label }}');
        if(!input) return;
        input.type = input.type === 'password' ? 'text' : 'password';
        this.textContent = input.type === 'password' ? 'Afficher' : 'Masquer';
      });
    })();
  </script>
</body>
</html>
===== ./templates/accounts/compagnies/form.html =====
{% extends "base_dashboard.html" %}
{% block title %}{% if company %}Modifier{% else %}Créer{% endif %} une entreprise{% endblock %}
{% block body_data_page %}companies{% endblock %}
{% block nav_companies_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <div class="d-flex align-items-center justify-content-between">
    <div>
      <h1 class="h4 section-title mb-1">
        {% if company %}Modifier{% else %}Créer{% endif %} une entreprise
      </h1>
      <div class="text-secondary">Réservé au Superadmin.</div>
    </div>
    <a class="btn btn-outline-secondary" href="{% url 'accounts:company_list' %}">← Retour</a>
  </div>
</header>

<div class="row g-3">
  <div class="col-lg-7">
    <div class="card shadow-sm">
      <div class="card-header">Informations</div>
      <div class="card-body">
        {% if form.non_field_errors %}
          <div class="alert alert-danger">
            {% for e in form.non_field_errors %}{{ e }}<br>{% endfor %}
          </div>
        {% endif %}

        <form method="post" novalidate>
          {% csrf_token %}
          <div class="mb-3">
            <label class="form-label" for="{{ form.name.id_for_label }}">Nom</label>
            {{ form.name }}
            {% for e in form.name.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
          </div>

          <div class="mb-3">
            <label class="form-label" for="{{ form.slug.id_for_label }}">Slug</label>
            {{ form.slug}}
            <div class="form-text">Identifiant URL (ex: <code>chrono-pizza</code>)</div>
            {% for e in form.slug.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
          </div>

          <div class="form-check mb-4">
            {{ form.is_active}}
            <label class="form-check-label" for="{{ form.is_active.id_for_label }}">Active</label>
            {% for e in form.is_active.errors %}<div class="invalid-feedback d-block">{{ e }}</div>{% endfor %}
          </div>

          <div class="d-flex gap-2">
            <button class="btn btn-primary" type="submit">Enregistrer</button>
            <a class="btn btn-outline-secondary" href="{% url 'accounts:company_list' %}">Annuler</a>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/accounts/compagnies/list.html =====
{# templates/accounts/companies/list.html #}
{% extends "base_dashboard.html" %}
{% block title %}Entreprises{% endblock %}
{% block body_data_page %}companies{% endblock %}
{% block nav_companies_active %}active{% endblock %}

{% block content %}
<header class="d-flex align-items-center justify-content-between mb-4">
  <div>
    <h1 class="h4 section-title mb-1">Entreprises</h1>
    <div class="text-secondary">Gestion réservée au Superadmin.</div>
  </div>
  <a class="btn btn-primary" href="{% url 'accounts:company_create' %}">Créer une entreprise</a>
</header>

<div class="card shadow-sm">
  <div class="table-responsive">
    <table class="table table-hover align-middle mb-0">
      <thead class="table-light">
        <tr>
          <th>Nom</th>
          <th>Slug</th>
          <th>Statut</th>
          <th class="text-end">Actions</th>
        </tr>
      </thead>
      <tbody>
        {% for c in companies %}
          <tr>
            <td class="fw-medium">{{ c.name }}</td>
            <td><code class="small">{{ c.slug }}</code></td>
            <td>
              {% if c.is_active %}
                <span class="badge rounded-pill" style="background: var(--brand-primary); color:#fff;">Active</span>
              {% else %}
                <span class="badge text-bg-secondary">Inactive</span>
              {% endif %}
            </td>
            <td class="text-end">
              {% if c.id %}
                <a class="btn btn-sm btn-outline-primary" href="{% url 'accounts:company_update' c.id %}">Modifier</a>
                <a class="btn btn-sm btn-outline-danger" href="{% url 'accounts:company_delete' c.id %}">Supprimer</a>
              {% else %}
                <span class="text-secondary small">ID manquant</span>
              {% endif %}
            </td>
          </tr>
        {% empty %}
          <tr>
            <td colspan="4" class="text-center text-secondary py-4">Aucune entreprise.</td>
          </tr>
        {% endfor %}
      </tbody>
    </table>
  </div>
</div>
{% endblock %}
===== ./templates/accounts/compagnies/confirm_delete.html =====
{% extends "base.html" %}
{% block title %}Supprimer l'entreprise{% endblock %}

{% block content %}
<div class="container mt-4">
  <div class="card shadow-sm">
    <div class="card-body">
      <h4 class="mb-3">Supprimer l'entreprise</h4>
      <p>Êtes-vous sûr de vouloir supprimer l'entreprise 
         <strong>{{ company.name }}</strong> ?</p>
      <form method="post">
        {% csrf_token %}
        <button type="submit" class="btn btn-danger">Confirmer la suppression</button>
        <a href="{% url 'accounts:company_list' %}" class="btn btn-secondary">Annuler</a>
      </form>
    </div>
  </div>
</div>
{% endblock %}
===== ./templates/accounts/users/form.html =====
{% extends "base_dashboard.html" %}
{% load static widget_tweaks %}

{% block title %}Utilisateur • ParrainApp{% endblock %}
{% block body_data_page %}users{% endblock %}
{% block nav_users_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Utilisateur</h1>
  <div class="text-secondary">Création / modification d’un compte.</div>
</header>

{# --- Résumé d'erreurs global --- #}
{% if form.errors %}
<div class="alert alert-danger d-flex align-items-start gap-2">
  <div>⚠️</div>
  <div>
    <div class="fw-semibold mb-1">Le formulaire contient des erreurs.</div>
    <ul class="mb-0 small">
      {% for field in form %}
        {% for error in field.errors %}
          <li><strong>{{ field.label }} :</strong> {{ error }}</li>
        {% endfor %}
      {% endfor %}
      {% for error in form.non_field_errors %}
        <li>{{ error }}</li>
      {% endfor %}
    </ul>
  </div>
</div>
{% endif %}

<div class="card shadow-sm">
  <div class="card-body">
    <form method="post" novalidate class="row g-3">
      {% csrf_token %}

      {# --- Username --- #}
      <div class="col-md-6">
        <label class="form-label">Nom d’utilisateur</label>
        {% render_field form.username class+="form-control" placeholder="johann" %}
      </div>

      {# --- Email --- #}
      <div class="col-md-6">
        <label class="form-label">Email</label>
        {% render_field form.email class+="form-control" placeholder="ex. nom@domaine.com" %}
      </div>

      {# --- First / Last name --- #}
      <div class="col-md-6">
        <label class="form-label">Prénom</label>
        {% render_field form.first_name class+="form-control" %}
      </div>
      <div class="col-md-6">
        <label class="form-label">Nom</label>
        {% render_field form.last_name class+="form-control" %}
      </div>

      {# --- Passwords visibles seulement en création (UserCreateForm expose password1/2) --- #}
      {% if form.password1 %}
      <div class="col-md-6">
        <label class="form-label">Mot de passe</label>
        {% render_field form.password1 class+="form-control" autocomplete="new-password" %}
        <div class="form-text">{{ form.password1.help_text }}</div>
      </div>
      <div class="col-md-6">
        <label class="form-label">Confirmation</label>
        {% render_field form.password2 class+="form-control" autocomplete="new-password" %}
      </div>
      {% endif %}

      {# --- Rôle --- #}
      <div class="col-md-6">
        <label class="form-label">Rôle</label>
        {% if form.profile.field.widget.input_type == "select" %}
          {% render_field form.profile class+="form-select" %}
        {% else %}
          {% render_field form.profile class+="form-control" %}
        {% endif %}
      </div>

      {# --- Company --- #}
      <div class="col-md-6">
        <label class="form-label">Entreprise</label>
        {% if form.company.field.widget.input_type == "select" %}
          {% render_field form.company class+="form-select" %}
        {% else %}
          {% render_field form.company class+="form-control" %}
        {% endif %}
        <div class="form-text">Obligatoire pour Admin / Opérateur. Laisser vide pour Superadmin.</div>
      </div>

      {# --- Actif (présent en édition) --- #}
      {% if form.is_active %}
      <div class="col-12">
        <div class="form-check">
          {% render_field form.is_active class+="form-check-input" %}
          <label class="form-check-label" for="{{ form.is_active.id_for_label }}">Actif</label>
        </div>
      </div>
      {% endif %}

      <div class="col-12 d-grid d-sm-flex gap-2">
        <button class="btn btn-primary">Enregistrer</button>
        <a class="btn btn-outline-secondary" href="{% url 'accounts:user_list' %}">Annuler</a>
      </div>
    </form>
  </div>
</div>
{% endblock %}
===== ./templates/accounts/users/list.html =====
{% extends "base_dashboard.html" %}
{% block title %}Utilisateurs • ParrainApp{% endblock %}
{% block body_data_page %}users{% endblock %}
{% block nav_users_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Utilisateurs</h1>
  <div class="text-secondary">Gestion des comptes et rôles.</div>
</header>

<div class="d-flex justify-content-between align-items-center mb-3">
  <div></div>
  <div class="d-flex gap-2">
    <a class="btn btn-outline-secondary" href="{% url 'accounts:logout' %}">Déconnexion</a>
    <a class="btn btn-primary" href="{% url 'accounts:user_create' %}">Créer un utilisateur</a>
  </div>
</div>

<div class="card shadow-sm">
  <div class="table-responsive">
    <table class="table table-hover align-middle mb-0">
      <thead class="table-light"><tr>
        <th>Username</th><th>Email</th><th>Nom</th><th>Rôle</th><th>Entreprise</th><th></th>
      </tr></thead>
      <tbody>
      {% for u in users %}
        <tr>
          <td>{{ u.username }}</td>
          <td>{{ u.email|default:"–" }}</td>
          <td>{{ u.last_name }} {{ u.first_name }}</td>
          <td>{{ u.get_profile_display }}</td>
          <td>{{ u.company|default:"–" }}</td>
          <td class="text-end">
            <a class="btn btn-sm btn-outline-primary" href="{% url 'accounts:user_edit' u.pk %}">Modifier</a>
            <a class="btn btn-sm btn-outline-danger" href="{% url 'accounts:user_delete' u.pk %}">Supprimer</a>
          </td>
        </tr>
      {% empty %}
        <tr><td colspan="6" class="text-center text-secondary">Aucun utilisateur.</td></tr>
      {% endfor %}
      </tbody>
    </table>
  </div>
</div>
{% endblock %}
===== ./templates/accounts/users/confirm_delete.html =====
{% extends "base_dashboard.html" %}
{% block title %}Supprimer utilisateur • ParrainApp{% endblock %}
{% block body_data_page %}users{% endblock %}
{% block nav_users_active %}active{% endblock %}

{% block content %}
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Supprimer l’utilisateur</h1>
  <div class="text-secondary">Cette action est irréversible.</div>
</header>

<div class="card shadow-sm">
  <div class="card-body">
    <p>Voulez-vous vraiment supprimer <strong>{{ object.username }}</strong> ({{ object.get_profile_display }}) ?</p>
    <form method="post" class="d-grid d-sm-flex gap-2">
      {% csrf_token %}
      <button class="btn btn-danger">Supprimer</button>
      <a class="btn btn-outline-secondary" href="{% url 'accounts:user_list' %}">Annuler</a>
    </form>
  </div>
</div>
{% endblock %}
===== ./templates/partials/_clients_table.html =====
<div class="table-responsive">
  <table class="table table-hover align-middle mb-0">
    <thead class="table-light">
      <tr>
        <th>Nom</th>
        <th>Prénom</th>
        <th>Téléphone</th>
        <th>Email</th>
        <th>Statut</th>
        <th class="text-end">Actions</th>
      </tr>
    </thead>
    <tbody>
      {% for c in clients %}
        <tr>
          <td class="fw-medium">{{ c.last_name }}</td>
          <td>{{ c.first_name }}</td>
          <td>{{ c.phone|default:"—" }}</td>
          <td>{{ c.email|default:"—" }}</td>
          <td>
            {% if c.is_referrer %}
              <span class="badge text-bg-info">Parrain</span>
            {% else %}
              <span class="badge text-bg-secondary">Filleul</span>
            {% endif %}
          </td>
          <td class="text-end">
            <a class="btn btn-sm btn-outline-primary" href="{% url 'dashboard:client_detail' c.id %}">Voir</a>
              {% if c.id %}
                <a class="btn btn-sm btn-outline-primary" href="{% url 'dashboard:client_update' c.id %}">Modifier</a>

                <form class="d-inline" action="{% url 'dashboard:client_delete' c.id %}" method="post"
                      onsubmit="return confirm('Supprimer ce client ?');">
                  {% csrf_token %}
                  <button type="submit" class="btn btn-sm btn-outline-danger">Supprimer</button>
                </form>
            {% else %}
                <button class="btn btn-sm btn-outline-secondary" disabled>Modifier</button>
                <button class="btn btn-sm btn-outline-danger" disabled>Supprimer</button>
            {% endif %}
          </td>
        </tr>
      {% empty %}
        <tr><td colspan="6" class="text-center text-secondary py-4">Aucun client trouvé.</td></tr>
      {% endfor %}
    </tbody>
  </table>
</div>
===== ./templates/partials/_client_detail.html =====
<header class="mb-4">
  <h1 class="h4 section-title mb-1">Fiche client</h1>
  <div class="text-secondary">Informations, cadeaux et historique</div>
</header>

<div class="row g-3">
  <!-- Colonne infos -->
  <div class="col-lg-4">
    <div class="card shadow-sm h-100"><div class="card-body">
      <div class="d-flex justify-content-between mb-2">
        <h3 class="h6 mb-0">Informations</h3>
        {% if client.is_referrer %}
          <span class="badge text-bg-info">Parrain</span>
        {% endif %}
      </div>

      <div class="vstack gap-1 small">
        <div><span class="text-secondary">Nom :</span> {{ client.last_name|default:"—" }}</div>
        <div><span class="text-secondary">Prénom :</span> {{ client.first_name|default:"—" }}</div>
        <div><span class="text-secondary">Téléphone :</span> {{ client.phone|default:"—" }}</div>
        <div><span class="text-secondary">Email :</span> {{ client.email|default:"—" }}</div>
      </div>

      <hr>

      <div class="d-flex justify-content-between align-items-center">
        <div class="small">
          <span class="text-secondary">A parrainé :</span>
          <strong>{{ referrals|length }}</strong>
        </div>
        {% if referrals %}
          <a class="btn btn-sm btn-outline-primary" href="{% url 'dashboard:clients_list' %}?company={{ company.id }}">
            Voir la liste
          </a>
        {% endif %}
      </div>
    </div></div>
  </div>

  <!-- Colonne droite -->
  <div class="col-lg-8">
    <div class="row g-3">

     {# --- BLOCS CADEAUX (3 colonnes) --- #}
<div class="col-12">
  <div class="row g-3">

    {# Cadeau obtenu #}
    <div class="col-md-4">
      <div class="card shadow-sm h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
          <div class="fw-semibold">Cadeau obtenu</div>
          <span class="badge text-bg-success">{{ gifts_obtained|length }}</span>
        </div>
        <div class="card-body">
          {% if gifts_obtained %}
            <div class="vstack gap-3">
              {% for g in gifts_obtained %}
                <div class="border rounded p-2">
                  <div class="d-flex justify-content-between">
                    <div>
                      <div class="fw-semibold">{{ g.title }}</div>
                      <small class="text-secondary">Créé le {{ g.created_at }}</small>
                    </div>
                    <span class="badge text-bg-success">OK</span>
                  </div>
                  <hr class="my-2">
                  <div class="vstack small gap-1">
                    <div><span class="text-secondary">Canal :</span> {{ g.channel|default:"—" }}</div>
                    <div><span class="text-secondary">Code :</span> {{ g.code|default:"—" }}</div>
                  </div>
                  {% if g.actions %}
                    <div class="d-flex gap-2 mt-2">
                      {% for btn in g.actions %}
                        <a class="btn btn-sm btn-outline-primary" href="{{ btn.href }}">{{ btn.label }}</a>
                      {% endfor %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            </div>
          {% else %}
            <div class="text-secondary small">Aucun cadeau obtenu.</div>
          {% endif %}
        </div>
      </div>
    </div>

    {# Cadeau non-atteint (ou “non-entrant” selon ton wording) #}
    <div class="col-md-4">
      <div class="card shadow-sm h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
          <div class="fw-semibold">Cadeau non-atteint</div>
          <span class="badge text-bg-warning">{{ gifts_not_achieved|length }}</span>
        </div>
        <div class="card-body">
          {% if gifts_not_achieved %}
            <div class="vstack gap-3">
              {% for g in gifts_not_achieved %}
                <div class="border rounded p-2">
                  <div class="d-flex justify-content-between">
                    <div>
                      <div class="fw-semibold">{{ g.title }}</div>
                      <small class="text-secondary">Créé le {{ g.created_at }}</small>
                    </div>
                    <span class="badge text-bg-warning">En attente</span>
                  </div>
                  <hr class="my-2">
                  <div class="vstack small gap-1">
                    <div><span class="text-secondary">Progression :</span> {{ g.progress|default:"—" }}</div>
                    <div><span class="text-secondary">Objectif :</span> {{ g.goal|default:"—" }}</div>
                  </div>
                  {% if g.actions %}
                    <div class="d-flex gap-2 mt-2">
                      {% for btn in g.actions %}
                        <a class="btn btn-sm btn-outline-primary" href="{{ btn.href }}">{{ btn.label }}</a>
                      {% endfor %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            </div>
          {% else %}
            <div class="text-secondary small">Aucun cadeau en attente d’atteinte.</div>
          {% endif %}
        </div>
      </div>
    </div>

    {# Cadeau non-utilisé #}
    <div class="col-md-4">
      <div class="card shadow-sm h-100">
        <div class="card-header d-flex justify-content-between align-items-center">
          <div class="fw-semibold">Cadeau non-utilisé</div>
          <span class="badge text-bg-secondary">{{ gifts_not_used|length }}</span>
        </div>
        <div class="card-body">
          {% if gifts_not_used %}
            <div class="vstack gap-3">
              {% for g in gifts_not_used %}
                <div class="border rounded p-2">
                  <div class="d-flex justify-content-between">
                    <div>
                      <div class="fw-semibold">{{ g.title }}</div>
                      <small class="text-secondary">Créé le {{ g.created_at }}</small>
                    </div>
                    <span class="badge text-bg-secondary">Non-utilisé</span>
                  </div>
                  <hr class="my-2">
                  <div class="vstack small gap-1">
                    <div><span class="text-secondary">Code :</span> {{ g.code|default:"—" }}</div>
                    <div><span class="text-secondary">Expire le :</span> {{ g.expires_at|default:"—" }}</div>
                  </div>
                  {% if g.actions %}
                    <div class="d-flex gap-2 mt-2">
                      {% for btn in g.actions %}
                        <a class="btn btn-sm btn-outline-primary" href="{{ btn.href }}">{{ btn.label }}</a>
                      {% endfor %}
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            </div>
          {% else %}
            <div class="text-secondary small">Aucun cadeau en attente d’utilisation.</div>
          {% endif %}
        </div>
      </div>
    </div>

  </div>
</div>

{# --- Historique des parrainages (inchangé) --- #}
<div class="col-12 mt-3">
  <div class="card shadow-sm">
    <div class="card-header">Historique des parrainages</div>
    <div class="table-responsive">
      <table class="table mb-0 align-middle">
        <thead class="table-light">
          <tr><th>Parrainé</th><th>Date</th><th>Récompense</th></tr>
        </thead>
        <tbody>
          {% for h in referral_history %}
            <tr>
              <td>{{ h.referee_name }}</td>
              <td>{{ h.date }}</td>
              <td>{{ h.reward_title }}</td>
            </tr>
          {% empty %}
            <tr><td colspan="3" class="text-secondary small">Aucun historique.</td></tr>
          {% endfor %}
        </tbody>
      </table>
    </div>
  </div>
</div>

      <!-- Historique des parrainages -->
      <div class="col-12">
        <div class="card shadow-sm">
          <div class="card-header">Historique des parrainages</div>
          <div class="table-responsive">
            <table class="table mb-0 align-middle">
              <thead class="table-light">
                <tr>
                  <th>Parrainé</th>
                  <th>Date</th>
                  <th>Statut</th>
                </tr>
              </thead>
              <tbody>
                {% for ref in referrals %}
                  <tr>
                    <td>{{ ref.referee.last_name }} {{ ref.referee.first_name }}</td>
                    <td>{{ ref.created_at|date:"d/m/Y" }}</td>
                    <td>{{ ref.get_status_display }}</td>
                  </tr>
                {% empty %}
                  <tr>
                    <td colspan="3" class="text-center text-secondary">Aucun parrainé pour ce client.</td>
                  </tr>
                {% endfor %}
              </tbody>
            </table>
          </div>
        </div>
      </div>

    </div><!-- row -->
  </div><!-- col -->
</div><!-- row -->
===== ./manage.py =====
#!/usr/bin/env python
"""Django's command-line utility for administrative tasks."""
import os
import sys


def main():
    """Run administrative tasks."""
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    try:
        from django.core.management import execute_from_command_line
    except ImportError as exc:
        raise ImportError(
            "Couldn't import Django. Are you sure it's installed and "
            "available on your PYTHONPATH environment variable? Did you "
            "forget to activate a virtual environment?"
        ) from exc
    execute_from_command_line(sys.argv)


if __name__ == '__main__':
    main()
===== ./entreprises/migrations/__init__.py =====
===== ./entreprises/models.py =====
from django.db import models
===== ./entreprises/__init__.py =====
===== ./entreprises/apps.py =====
from django.apps import AppConfig


class EntreprisesConfig(AppConfig):
    default_auto_field = 'django.db.models.BigAutoField'
    name = 'entreprises'
===== ./entreprises/admin.py =====
from django.contrib import admin

# Register your models here.
===== ./entreprises/tests.py =====
from django.test import TestCase

# Create your tests here.
===== ./entreprises/urls.py =====
from django.urls import path
from . import views

app_name = "entreprises"

urlpatterns = [
    path("clients/", views.clients_list, name="clients_list"),
    path("clients/<int:pk>/", views.client_detail, name="client_detail"),  # si tu as une page détail
]
===== ./entreprises/views.py =====
from django.contrib.auth.decorators import login_required
from django.core.exceptions import PermissionDenied
from django.shortcuts import render, get_object_or_404
from accounts.permissions import require_company_admin_or_superadmin

# Si tu as un modèle Client plus tard, on branchera ici.
# Pour le moment on renvoie le template tel quel (design statique).

@login_required
def clients_list(request):
    u = request.user
    # Superadmin toujours OK, sinon Admin/Opérateur requis
    try:
        require_company_admin_or_superadmin(u)
    except PermissionDenied:
        # Autoriser explicitement l'opérateur
        if not (hasattr(u, "is_operateur") and u.is_operateur()):
            raise

    # Plus tard: filtrer les clients de u.company
    context = {}
    return render(request, "entreprises/clients_list.html", context)

@login_required
def client_detail(request, pk):
    u = request.user
    try:
        require_company_admin_or_superadmin(u)
    except PermissionDenied:
        if not (hasattr(u, "is_operateur") and u.is_operateur()):
            raise

    # Placeholder: quand tu auras un modèle, récupère le client de l’entreprise
    # client = get_object_or_404(Client, pk=pk, company=u.company)  # exemple
    context = {}  # {"client": client}
    return render(request, "entreprises/client_detail.html", context)
